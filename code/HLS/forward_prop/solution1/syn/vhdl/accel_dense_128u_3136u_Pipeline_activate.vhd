-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accel_dense_128u_3136u_Pipeline_activate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_feature_map_stream128_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_feature_map_stream128_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    dense_feature_map_stream128_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    dense_feature_map_stream128_full_n : IN STD_LOGIC;
    dense_feature_map_stream128_write : OUT STD_LOGIC;
    dense_activations_stream129_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    dense_activations_stream129_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
    dense_activations_stream129_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
    dense_activations_stream129_full_n : IN STD_LOGIC;
    dense_activations_stream129_write : OUT STD_LOGIC;
    dense_f_map_out134_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_f_map_out134_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
    dense_f_map_out134_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
    dense_f_map_out134_full_n : IN STD_LOGIC;
    dense_f_map_out134_write : OUT STD_LOGIC;
    add177_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_128_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_229_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_330_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_431_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_532_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_633_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_734_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_835_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_936_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1037_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1138_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1239_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1340_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1441_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1542_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1643_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1744_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1845_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_1946_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2047_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2148_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2249_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2350_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2451_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2552_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2653_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2754_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2855_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_2956_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3057_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3158_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3259_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3360_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3461_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3562_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3663_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3764_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3865_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_3966_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4067_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4168_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4269_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4370_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4471_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4572_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4673_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4774_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4875_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_4976_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5077_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5178_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5279_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5380_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5481_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5582_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5683_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5784_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5885_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_5986_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6087_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6188_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6289_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6390_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6491_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6592_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6693_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6794_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6895_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_6996_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_7097_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_7198_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_7299_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_73100_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_74101_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_75102_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_76103_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_77104_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_78105_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_79106_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_80107_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_81108_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_82109_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_83110_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_84111_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_85112_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_86113_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_87114_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_88115_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_89116_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_90117_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_91118_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_92119_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_93120_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_94121_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_95122_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_96123_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_97124_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_98125_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_99126_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_100127_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_101128_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_102129_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_103130_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_104131_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_105132_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_106133_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_107134_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_108135_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_109136_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_110137_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_111138_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_112139_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_113140_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_114141_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_115142_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_116143_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_117144_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_118145_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_119146_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_120147_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_121148_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_122149_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_123150_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_124151_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_125152_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_126153_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add17_127154_reload : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of accel_dense_128u_3136u_Pipeline_activate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln441_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dense_feature_map_stream128_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dense_activations_stream129_blk_n : STD_LOGIC;
    signal dense_f_map_out134_blk_n : STD_LOGIC;
    signal tmp_s_fu_1119_p130 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1410 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal k_1_fu_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln441_fu_1113_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln174_fu_1390_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln174_fu_1387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1093_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component accel_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component accel_mux_1288_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (31 downto 0);
        din121 : IN STD_LOGIC_VECTOR (31 downto 0);
        din122 : IN STD_LOGIC_VECTOR (31 downto 0);
        din123 : IN STD_LOGIC_VECTOR (31 downto 0);
        din124 : IN STD_LOGIC_VECTOR (31 downto 0);
        din125 : IN STD_LOGIC_VECTOR (31 downto 0);
        din126 : IN STD_LOGIC_VECTOR (31 downto 0);
        din127 : IN STD_LOGIC_VECTOR (31 downto 0);
        din128 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fcmp_32ns_32ns_1_2_no_dsp_1_U20201 : component accel_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_fu_1119_p130,
        din1 => ap_const_lv32_0,
        ce => grp_fu_1093_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_1093_p2);

    mux_1288_32_1_1_U20202 : component accel_mux_1288_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 32,
        din65_WIDTH => 32,
        din66_WIDTH => 32,
        din67_WIDTH => 32,
        din68_WIDTH => 32,
        din69_WIDTH => 32,
        din70_WIDTH => 32,
        din71_WIDTH => 32,
        din72_WIDTH => 32,
        din73_WIDTH => 32,
        din74_WIDTH => 32,
        din75_WIDTH => 32,
        din76_WIDTH => 32,
        din77_WIDTH => 32,
        din78_WIDTH => 32,
        din79_WIDTH => 32,
        din80_WIDTH => 32,
        din81_WIDTH => 32,
        din82_WIDTH => 32,
        din83_WIDTH => 32,
        din84_WIDTH => 32,
        din85_WIDTH => 32,
        din86_WIDTH => 32,
        din87_WIDTH => 32,
        din88_WIDTH => 32,
        din89_WIDTH => 32,
        din90_WIDTH => 32,
        din91_WIDTH => 32,
        din92_WIDTH => 32,
        din93_WIDTH => 32,
        din94_WIDTH => 32,
        din95_WIDTH => 32,
        din96_WIDTH => 32,
        din97_WIDTH => 32,
        din98_WIDTH => 32,
        din99_WIDTH => 32,
        din100_WIDTH => 32,
        din101_WIDTH => 32,
        din102_WIDTH => 32,
        din103_WIDTH => 32,
        din104_WIDTH => 32,
        din105_WIDTH => 32,
        din106_WIDTH => 32,
        din107_WIDTH => 32,
        din108_WIDTH => 32,
        din109_WIDTH => 32,
        din110_WIDTH => 32,
        din111_WIDTH => 32,
        din112_WIDTH => 32,
        din113_WIDTH => 32,
        din114_WIDTH => 32,
        din115_WIDTH => 32,
        din116_WIDTH => 32,
        din117_WIDTH => 32,
        din118_WIDTH => 32,
        din119_WIDTH => 32,
        din120_WIDTH => 32,
        din121_WIDTH => 32,
        din122_WIDTH => 32,
        din123_WIDTH => 32,
        din124_WIDTH => 32,
        din125_WIDTH => 32,
        din126_WIDTH => 32,
        din127_WIDTH => 32,
        din128_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        din0 => add177_reload,
        din1 => add17_128_reload,
        din2 => add17_229_reload,
        din3 => add17_330_reload,
        din4 => add17_431_reload,
        din5 => add17_532_reload,
        din6 => add17_633_reload,
        din7 => add17_734_reload,
        din8 => add17_835_reload,
        din9 => add17_936_reload,
        din10 => add17_1037_reload,
        din11 => add17_1138_reload,
        din12 => add17_1239_reload,
        din13 => add17_1340_reload,
        din14 => add17_1441_reload,
        din15 => add17_1542_reload,
        din16 => add17_1643_reload,
        din17 => add17_1744_reload,
        din18 => add17_1845_reload,
        din19 => add17_1946_reload,
        din20 => add17_2047_reload,
        din21 => add17_2148_reload,
        din22 => add17_2249_reload,
        din23 => add17_2350_reload,
        din24 => add17_2451_reload,
        din25 => add17_2552_reload,
        din26 => add17_2653_reload,
        din27 => add17_2754_reload,
        din28 => add17_2855_reload,
        din29 => add17_2956_reload,
        din30 => add17_3057_reload,
        din31 => add17_3158_reload,
        din32 => add17_3259_reload,
        din33 => add17_3360_reload,
        din34 => add17_3461_reload,
        din35 => add17_3562_reload,
        din36 => add17_3663_reload,
        din37 => add17_3764_reload,
        din38 => add17_3865_reload,
        din39 => add17_3966_reload,
        din40 => add17_4067_reload,
        din41 => add17_4168_reload,
        din42 => add17_4269_reload,
        din43 => add17_4370_reload,
        din44 => add17_4471_reload,
        din45 => add17_4572_reload,
        din46 => add17_4673_reload,
        din47 => add17_4774_reload,
        din48 => add17_4875_reload,
        din49 => add17_4976_reload,
        din50 => add17_5077_reload,
        din51 => add17_5178_reload,
        din52 => add17_5279_reload,
        din53 => add17_5380_reload,
        din54 => add17_5481_reload,
        din55 => add17_5582_reload,
        din56 => add17_5683_reload,
        din57 => add17_5784_reload,
        din58 => add17_5885_reload,
        din59 => add17_5986_reload,
        din60 => add17_6087_reload,
        din61 => add17_6188_reload,
        din62 => add17_6289_reload,
        din63 => add17_6390_reload,
        din64 => add17_6491_reload,
        din65 => add17_6592_reload,
        din66 => add17_6693_reload,
        din67 => add17_6794_reload,
        din68 => add17_6895_reload,
        din69 => add17_6996_reload,
        din70 => add17_7097_reload,
        din71 => add17_7198_reload,
        din72 => add17_7299_reload,
        din73 => add17_73100_reload,
        din74 => add17_74101_reload,
        din75 => add17_75102_reload,
        din76 => add17_76103_reload,
        din77 => add17_77104_reload,
        din78 => add17_78105_reload,
        din79 => add17_79106_reload,
        din80 => add17_80107_reload,
        din81 => add17_81108_reload,
        din82 => add17_82109_reload,
        din83 => add17_83110_reload,
        din84 => add17_84111_reload,
        din85 => add17_85112_reload,
        din86 => add17_86113_reload,
        din87 => add17_87114_reload,
        din88 => add17_88115_reload,
        din89 => add17_89116_reload,
        din90 => add17_90117_reload,
        din91 => add17_91118_reload,
        din92 => add17_92119_reload,
        din93 => add17_93120_reload,
        din94 => add17_94121_reload,
        din95 => add17_95122_reload,
        din96 => add17_96123_reload,
        din97 => add17_97124_reload,
        din98 => add17_98125_reload,
        din99 => add17_99126_reload,
        din100 => add17_100127_reload,
        din101 => add17_101128_reload,
        din102 => add17_102129_reload,
        din103 => add17_103130_reload,
        din104 => add17_104131_reload,
        din105 => add17_105132_reload,
        din106 => add17_106133_reload,
        din107 => add17_107134_reload,
        din108 => add17_108135_reload,
        din109 => add17_109136_reload,
        din110 => add17_110137_reload,
        din111 => add17_111138_reload,
        din112 => add17_112139_reload,
        din113 => add17_113140_reload,
        din114 => add17_114141_reload,
        din115 => add17_115142_reload,
        din116 => add17_116143_reload,
        din117 => add17_117144_reload,
        din118 => add17_118145_reload,
        din119 => add17_119146_reload,
        din120 => add17_120147_reload,
        din121 => add17_121148_reload,
        din122 => add17_122149_reload,
        din123 => add17_123150_reload,
        din124 => add17_124151_reload,
        din125 => add17_125152_reload,
        din126 => add17_126153_reload,
        din127 => add17_127154_reload,
        din128 => ap_sig_allocacmp_k,
        dout => tmp_s_fu_1119_p130);

    flow_control_loop_pipe_sequential_init_U : component accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    k_1_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln441_fu_1107_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_1_fu_300 <= add_ln441_fu_1113_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_1_fu_300 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln441_fu_1107_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_s_reg_1410 <= tmp_s_fu_1119_p130;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln441_fu_1113_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter1, dense_feature_map_stream128_full_n, dense_activations_stream129_full_n, dense_f_map_out134_full_n)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dense_f_map_out134_full_n = ap_const_logic_0) or (dense_activations_stream129_full_n = ap_const_logic_0) or (dense_feature_map_stream128_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, dense_feature_map_stream128_full_n, dense_activations_stream129_full_n, dense_f_map_out134_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dense_f_map_out134_full_n = ap_const_logic_0) or (dense_activations_stream129_full_n = ap_const_logic_0) or (dense_feature_map_stream128_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, dense_feature_map_stream128_full_n, dense_activations_stream129_full_n, dense_f_map_out134_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dense_f_map_out134_full_n = ap_const_logic_0) or (dense_activations_stream129_full_n = ap_const_logic_0) or (dense_feature_map_stream128_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, dense_feature_map_stream128_full_n, dense_activations_stream129_full_n, dense_f_map_out134_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dense_f_map_out134_full_n = ap_const_logic_0) or (dense_activations_stream129_full_n = ap_const_logic_0) or (dense_feature_map_stream128_full_n = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dense_feature_map_stream128_full_n, dense_activations_stream129_full_n, dense_f_map_out134_full_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((dense_f_map_out134_full_n = ap_const_logic_0) or (dense_activations_stream129_full_n = ap_const_logic_0) or (dense_feature_map_stream128_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln441_fu_1107_p2)
    begin
        if (((icmp_ln441_fu_1107_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_1_fu_300, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_k <= k_1_fu_300;
        end if; 
    end process;

    bitcast_ln174_fu_1387_p1 <= tmp_s_reg_1410;

    dense_activations_stream129_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dense_activations_stream129_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_activations_stream129_blk_n <= dense_activations_stream129_full_n;
        else 
            dense_activations_stream129_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dense_activations_stream129_din <= grp_fu_1093_p2;

    dense_activations_stream129_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_activations_stream129_write <= ap_const_logic_1;
        else 
            dense_activations_stream129_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_f_map_out134_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dense_f_map_out134_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_f_map_out134_blk_n <= dense_f_map_out134_full_n;
        else 
            dense_f_map_out134_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dense_f_map_out134_din <= select_ln174_fu_1390_p3;

    dense_f_map_out134_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_f_map_out134_write <= ap_const_logic_1;
        else 
            dense_f_map_out134_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_feature_map_stream128_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dense_feature_map_stream128_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_feature_map_stream128_blk_n <= dense_feature_map_stream128_full_n;
        else 
            dense_feature_map_stream128_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dense_feature_map_stream128_din <= select_ln174_fu_1390_p3;

    dense_feature_map_stream128_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_feature_map_stream128_write <= ap_const_logic_1;
        else 
            dense_feature_map_stream128_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1093_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1093_ce <= ap_const_logic_1;
        else 
            grp_fu_1093_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln441_fu_1107_p2 <= "1" when (ap_sig_allocacmp_k = ap_const_lv8_80) else "0";
    select_ln174_fu_1390_p3 <= 
        bitcast_ln174_fu_1387_p1 when (grp_fu_1093_p2(0) = '1') else 
        ap_const_lv32_0;
end behav;
