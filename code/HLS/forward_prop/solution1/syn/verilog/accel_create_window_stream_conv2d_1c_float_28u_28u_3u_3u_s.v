// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accel_create_window_stream_conv2d_1c_float_28u_28u_3u_3u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_stream_TVALID,
        conv2d_32_window_stream_din,
        conv2d_32_window_stream_num_data_valid,
        conv2d_32_window_stream_fifo_cap,
        conv2d_32_window_stream_full_n,
        conv2d_32_window_stream_write,
        start_out,
        start_write,
        input_stream_TDATA,
        input_stream_TREADY,
        input_stream_TKEEP,
        input_stream_TSTRB,
        input_stream_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   input_stream_TVALID;
output  [287:0] conv2d_32_window_stream_din;
input  [2:0] conv2d_32_window_stream_num_data_valid;
input  [2:0] conv2d_32_window_stream_fifo_cap;
input   conv2d_32_window_stream_full_n;
output   conv2d_32_window_stream_write;
output   start_out;
output   start_write;
input  [31:0] input_stream_TDATA;
output   input_stream_TREADY;
input  [3:0] input_stream_TKEEP;
input  [3:0] input_stream_TSTRB;
input  [0:0] input_stream_TLAST;

reg ap_idle;
reg conv2d_32_window_stream_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire   [0:0] icmp_ln67_fu_534_p2;
wire   [0:0] icmp_ln71_fu_546_p2;
reg    ap_predicate_op114_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln94_reg_2150;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    input_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    conv2d_32_window_stream_blk_n;
reg   [31:0] new_pixel_2_reg_501;
reg   [31:0] temp_windows_elements_load_reg_2110;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] new_pixel_58_load_reg_2116;
reg   [31:0] temp_windows_elements_load_1_reg_2122;
wire   [31:0] tmp_s_fu_816_p30;
reg   [31:0] tmp_s_reg_2136;
wire   [31:0] tmp_1_fu_878_p30;
reg   [31:0] tmp_1_reg_2141;
wire   [4:0] trunc_ln90_fu_1002_p1;
wire   [0:0] icmp_ln94_fu_1426_p2;
reg   [31:0] ap_phi_mux_new_pixel_2_phi_fu_504_p4;
wire   [31:0] temp_input_fu_556_p1;
wire   [31:0] ap_phi_reg_pp0_iter0_new_pixel_2_reg_501;
reg   [9:0] pixel_counter_fu_114;
wire   [9:0] pixel_counter_4_fu_540_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_pixel_counter_3;
reg   [31:0] col_ptr_fu_118;
wire   [31:0] col_ptr_18_fu_1447_p3;
reg   [31:0] ap_sig_allocacmp_col_ptr_load;
reg   [31:0] ap_sig_allocacmp_col_ptr_load_1;
reg   [31:0] temp_windows_elements_load_13_fu_122;
reg   [31:0] temp_windows_elements_load_16_fu_126;
reg   [31:0] temp_windows_elements_load_0_0_fu_130;
reg   [31:0] new_pixel_fu_134;
reg   [31:0] new_pixel_3_fu_138;
reg   [31:0] new_pixel_4_fu_142;
reg   [31:0] new_pixel_5_fu_146;
reg   [31:0] new_pixel_6_fu_150;
reg   [31:0] new_pixel_7_fu_154;
reg   [31:0] new_pixel_8_fu_158;
reg   [31:0] new_pixel_9_fu_162;
reg   [31:0] new_pixel_10_fu_166;
reg   [31:0] new_pixel_11_fu_170;
reg   [31:0] new_pixel_12_fu_174;
reg   [31:0] new_pixel_13_fu_178;
reg   [31:0] new_pixel_14_fu_182;
reg   [31:0] new_pixel_15_fu_186;
reg   [31:0] new_pixel_16_fu_190;
reg   [31:0] new_pixel_17_fu_194;
reg   [31:0] new_pixel_18_fu_198;
reg   [31:0] new_pixel_19_fu_202;
reg   [31:0] new_pixel_20_fu_206;
reg   [31:0] new_pixel_21_fu_210;
reg   [31:0] new_pixel_22_fu_214;
reg   [31:0] new_pixel_23_fu_218;
reg   [31:0] new_pixel_24_fu_222;
reg   [31:0] new_pixel_25_fu_226;
reg   [31:0] new_pixel_26_fu_230;
reg   [31:0] new_pixel_27_fu_234;
reg   [31:0] new_pixel_28_fu_238;
reg   [31:0] new_pixel_29_fu_242;
reg   [31:0] line_buffer_load_2_0_fu_246;
wire   [31:0] tmp_fu_940_p30;
reg   [31:0] line_buffer_1_load_1_0_fu_250;
reg   [31:0] line_buffer_2_load_1_0_fu_254;
reg   [31:0] line_buffer_3_load_1_0_fu_258;
reg   [31:0] line_buffer_4_load_1_0_fu_262;
reg   [31:0] line_buffer_5_load_1_0_fu_266;
reg   [31:0] line_buffer_6_load_0_fu_270;
reg   [31:0] line_buffer_7_load_0_fu_274;
reg   [31:0] line_buffer_8_load_0_fu_278;
reg   [31:0] line_buffer_9_load_0_fu_282;
reg   [31:0] line_buffer_10_load_0_fu_286;
reg   [31:0] line_buffer_11_load_0_fu_290;
reg   [31:0] line_buffer_12_load_0_fu_294;
reg   [31:0] line_buffer_13_load_0_fu_298;
reg   [31:0] line_buffer_14_load_0_fu_302;
reg   [31:0] line_buffer_15_load_0_fu_306;
reg   [31:0] line_buffer_16_load_0_fu_310;
reg   [31:0] line_buffer_17_load_0_fu_314;
reg   [31:0] line_buffer_18_load_0_fu_318;
reg   [31:0] line_buffer_19_load_0_fu_322;
reg   [31:0] line_buffer_20_load_0_fu_326;
reg   [31:0] line_buffer_21_load_0_fu_330;
reg   [31:0] line_buffer_22_load_0_fu_334;
reg   [31:0] line_buffer_23_load_0_fu_338;
reg   [31:0] line_buffer_24_load_0_fu_342;
reg   [31:0] line_buffer_25_load_0_fu_346;
reg   [31:0] line_buffer_26_load_0_fu_350;
reg   [31:0] line_buffer_27_load_0_fu_354;
reg   [31:0] new_pixel_30_fu_358;
reg   [31:0] new_pixel_31_fu_362;
reg   [31:0] new_pixel_32_fu_366;
reg   [31:0] new_pixel_33_fu_370;
reg   [31:0] new_pixel_34_fu_374;
reg   [31:0] new_pixel_35_fu_378;
reg   [31:0] new_pixel_36_fu_382;
reg   [31:0] new_pixel_37_fu_386;
reg   [31:0] new_pixel_38_fu_390;
reg   [31:0] new_pixel_39_fu_394;
reg   [31:0] new_pixel_40_fu_398;
reg   [31:0] new_pixel_41_fu_402;
reg   [31:0] new_pixel_42_fu_406;
reg   [31:0] new_pixel_43_fu_410;
reg   [31:0] new_pixel_44_fu_414;
reg   [31:0] new_pixel_45_fu_418;
reg   [31:0] new_pixel_46_fu_422;
reg   [31:0] new_pixel_47_fu_426;
reg   [31:0] new_pixel_48_fu_430;
reg   [31:0] new_pixel_49_fu_434;
reg   [31:0] new_pixel_50_fu_438;
reg   [31:0] new_pixel_51_fu_442;
reg   [31:0] new_pixel_52_fu_446;
reg   [31:0] new_pixel_53_fu_450;
reg   [31:0] new_pixel_54_fu_454;
reg   [31:0] new_pixel_55_fu_458;
reg   [31:0] new_pixel_56_fu_462;
reg   [31:0] new_pixel_57_fu_466;
reg   [31:0] temp_windows_elements_load_14_fu_470;
reg   [31:0] new_pixel_58_fu_474;
reg   [31:0] temp_windows_elements_load_0_1_fu_478;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln97_fu_1435_p2;
wire   [31:0] col_ptr_17_fu_1441_p2;
wire   [31:0] bitcast_ln174_277_fu_1516_p1;
wire   [31:0] bitcast_ln174_276_fu_1513_p1;
wire   [31:0] bitcast_ln174_275_fu_1509_p1;
wire   [31:0] bitcast_ln174_274_fu_1506_p1;
wire   [31:0] bitcast_ln174_273_fu_1503_p1;
wire   [31:0] bitcast_ln174_272_fu_1499_p1;
wire   [31:0] bitcast_ln174_271_fu_1496_p1;
wire   [31:0] bitcast_ln174_270_fu_1493_p1;
wire   [31:0] bitcast_ln174_fu_1489_p1;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    regslice_both_input_stream_V_data_V_U_apdone_blk;
wire   [31:0] input_stream_TDATA_int_regslice;
wire    input_stream_TVALID_int_regslice;
reg    input_stream_TREADY_int_regslice;
wire    regslice_both_input_stream_V_data_V_U_ack_in;
wire    regslice_both_input_stream_V_keep_V_U_apdone_blk;
wire   [3:0] input_stream_TKEEP_int_regslice;
wire    regslice_both_input_stream_V_keep_V_U_vld_out;
wire    regslice_both_input_stream_V_keep_V_U_ack_in;
wire    regslice_both_input_stream_V_strb_V_U_apdone_blk;
wire   [3:0] input_stream_TSTRB_int_regslice;
wire    regslice_both_input_stream_V_strb_V_U_vld_out;
wire    regslice_both_input_stream_V_strb_V_U_ack_in;
wire    regslice_both_input_stream_V_last_V_U_apdone_blk;
wire   [0:0] input_stream_TLAST_int_regslice;
wire    regslice_both_input_stream_V_last_V_U_vld_out;
wire    regslice_both_input_stream_V_last_V_U_ack_in;
reg    ap_condition_133;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

accel_mux_2832_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_2832_32_1_1_U135(
    .din0(line_buffer_load_2_0_fu_246),
    .din1(line_buffer_1_load_1_0_fu_250),
    .din2(line_buffer_2_load_1_0_fu_254),
    .din3(line_buffer_3_load_1_0_fu_258),
    .din4(line_buffer_4_load_1_0_fu_262),
    .din5(line_buffer_5_load_1_0_fu_266),
    .din6(line_buffer_6_load_0_fu_270),
    .din7(line_buffer_7_load_0_fu_274),
    .din8(line_buffer_8_load_0_fu_278),
    .din9(line_buffer_9_load_0_fu_282),
    .din10(line_buffer_10_load_0_fu_286),
    .din11(line_buffer_11_load_0_fu_290),
    .din12(line_buffer_12_load_0_fu_294),
    .din13(line_buffer_13_load_0_fu_298),
    .din14(line_buffer_14_load_0_fu_302),
    .din15(line_buffer_15_load_0_fu_306),
    .din16(line_buffer_16_load_0_fu_310),
    .din17(line_buffer_17_load_0_fu_314),
    .din18(line_buffer_18_load_0_fu_318),
    .din19(line_buffer_19_load_0_fu_322),
    .din20(line_buffer_20_load_0_fu_326),
    .din21(line_buffer_21_load_0_fu_330),
    .din22(line_buffer_22_load_0_fu_334),
    .din23(line_buffer_23_load_0_fu_338),
    .din24(line_buffer_24_load_0_fu_342),
    .din25(line_buffer_25_load_0_fu_346),
    .din26(line_buffer_26_load_0_fu_350),
    .din27(line_buffer_27_load_0_fu_354),
    .din28(ap_sig_allocacmp_col_ptr_load),
    .dout(tmp_s_fu_816_p30)
);

accel_mux_2832_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_2832_32_1_1_U136(
    .din0(new_pixel_30_fu_358),
    .din1(new_pixel_31_fu_362),
    .din2(new_pixel_32_fu_366),
    .din3(new_pixel_33_fu_370),
    .din4(new_pixel_34_fu_374),
    .din5(new_pixel_35_fu_378),
    .din6(new_pixel_36_fu_382),
    .din7(new_pixel_37_fu_386),
    .din8(new_pixel_38_fu_390),
    .din9(new_pixel_39_fu_394),
    .din10(new_pixel_40_fu_398),
    .din11(new_pixel_41_fu_402),
    .din12(new_pixel_42_fu_406),
    .din13(new_pixel_43_fu_410),
    .din14(new_pixel_44_fu_414),
    .din15(new_pixel_45_fu_418),
    .din16(new_pixel_46_fu_422),
    .din17(new_pixel_47_fu_426),
    .din18(new_pixel_48_fu_430),
    .din19(new_pixel_49_fu_434),
    .din20(new_pixel_50_fu_438),
    .din21(new_pixel_51_fu_442),
    .din22(new_pixel_52_fu_446),
    .din23(new_pixel_53_fu_450),
    .din24(new_pixel_54_fu_454),
    .din25(new_pixel_55_fu_458),
    .din26(new_pixel_56_fu_462),
    .din27(new_pixel_57_fu_466),
    .din28(ap_sig_allocacmp_col_ptr_load),
    .dout(tmp_1_fu_878_p30)
);

accel_mux_2832_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_2832_32_1_1_U137(
    .din0(new_pixel_24_fu_222),
    .din1(new_pixel_25_fu_226),
    .din2(new_pixel_26_fu_230),
    .din3(new_pixel_27_fu_234),
    .din4(new_pixel_28_fu_238),
    .din5(new_pixel_29_fu_242),
    .din6(new_pixel_23_fu_218),
    .din7(new_pixel_fu_134),
    .din8(new_pixel_3_fu_138),
    .din9(new_pixel_4_fu_142),
    .din10(new_pixel_5_fu_146),
    .din11(new_pixel_6_fu_150),
    .din12(new_pixel_7_fu_154),
    .din13(new_pixel_8_fu_158),
    .din14(new_pixel_9_fu_162),
    .din15(new_pixel_10_fu_166),
    .din16(new_pixel_11_fu_170),
    .din17(new_pixel_12_fu_174),
    .din18(new_pixel_13_fu_178),
    .din19(new_pixel_14_fu_182),
    .din20(new_pixel_15_fu_186),
    .din21(new_pixel_16_fu_190),
    .din22(new_pixel_17_fu_194),
    .din23(new_pixel_18_fu_198),
    .din24(new_pixel_19_fu_202),
    .din25(new_pixel_20_fu_206),
    .din26(new_pixel_21_fu_210),
    .din27(new_pixel_22_fu_214),
    .din28(ap_sig_allocacmp_col_ptr_load),
    .dout(tmp_fu_940_p30)
);

accel_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

accel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_input_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(input_stream_TDATA),
    .vld_in(input_stream_TVALID),
    .ack_in(regslice_both_input_stream_V_data_V_U_ack_in),
    .data_out(input_stream_TDATA_int_regslice),
    .vld_out(input_stream_TVALID_int_regslice),
    .ack_out(input_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_stream_V_data_V_U_apdone_blk)
);

accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(input_stream_TKEEP),
    .vld_in(input_stream_TVALID),
    .ack_in(regslice_both_input_stream_V_keep_V_U_ack_in),
    .data_out(input_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_input_stream_V_keep_V_U_vld_out),
    .ack_out(input_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_stream_V_keep_V_U_apdone_blk)
);

accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(input_stream_TSTRB),
    .vld_in(input_stream_TVALID),
    .ack_in(regslice_both_input_stream_V_strb_V_U_ack_in),
    .data_out(input_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_input_stream_V_strb_V_U_vld_out),
    .ack_out(input_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_stream_V_strb_V_U_apdone_blk)
);

accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(input_stream_TLAST),
    .vld_in(input_stream_TVALID),
    .ack_in(regslice_both_input_stream_V_last_V_U_ack_in),
    .data_out(input_stream_TLAST_int_regslice),
    .vld_out(regslice_both_input_stream_V_last_V_U_vld_out),
    .ack_out(input_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if ((icmp_ln67_fu_534_p2 == 1'd0)) begin
            col_ptr_fu_118 <= col_ptr_18_fu_1447_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            col_ptr_fu_118 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if (((icmp_ln71_fu_546_p2 == 1'd0) & (icmp_ln67_fu_534_p2 == 1'd0))) begin
            new_pixel_2_reg_501 <= 32'd0;
        end else if (((icmp_ln71_fu_546_p2 == 1'd1) & (icmp_ln67_fu_534_p2 == 1'd0))) begin
            new_pixel_2_reg_501 <= temp_input_fu_556_p1;
        end else if (~(icmp_ln67_fu_534_p2 == 1'd1)) begin
            new_pixel_2_reg_501 <= ap_phi_reg_pp0_iter0_new_pixel_2_reg_501;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if ((icmp_ln67_fu_534_p2 == 1'd0)) begin
            pixel_counter_fu_114 <= pixel_counter_4_fu_540_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            pixel_counter_fu_114 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln94_reg_2150 <= icmp_ln94_fu_1426_p2;
        tmp_1_reg_2141 <= tmp_1_fu_878_p30;
        tmp_s_reg_2136 <= tmp_s_fu_816_p30;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd10))) begin
        line_buffer_10_load_0_fu_286 <= tmp_fu_940_p30;
        new_pixel_40_fu_398 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_5_fu_146 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd11))) begin
        line_buffer_11_load_0_fu_290 <= tmp_fu_940_p30;
        new_pixel_41_fu_402 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_6_fu_150 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd12))) begin
        line_buffer_12_load_0_fu_294 <= tmp_fu_940_p30;
        new_pixel_42_fu_406 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_7_fu_154 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd13))) begin
        line_buffer_13_load_0_fu_298 <= tmp_fu_940_p30;
        new_pixel_43_fu_410 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_8_fu_158 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd14))) begin
        line_buffer_14_load_0_fu_302 <= tmp_fu_940_p30;
        new_pixel_44_fu_414 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_9_fu_162 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd15))) begin
        line_buffer_15_load_0_fu_306 <= tmp_fu_940_p30;
        new_pixel_10_fu_166 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_45_fu_418 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd16))) begin
        line_buffer_16_load_0_fu_310 <= tmp_fu_940_p30;
        new_pixel_11_fu_170 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_46_fu_422 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd17))) begin
        line_buffer_17_load_0_fu_314 <= tmp_fu_940_p30;
        new_pixel_12_fu_174 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_47_fu_426 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd18))) begin
        line_buffer_18_load_0_fu_318 <= tmp_fu_940_p30;
        new_pixel_13_fu_178 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_48_fu_430 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd19))) begin
        line_buffer_19_load_0_fu_322 <= tmp_fu_940_p30;
        new_pixel_14_fu_182 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_49_fu_434 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd1))) begin
        line_buffer_1_load_1_0_fu_250 <= tmp_fu_940_p30;
        new_pixel_25_fu_226 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_31_fu_362 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd20))) begin
        line_buffer_20_load_0_fu_326 <= tmp_fu_940_p30;
        new_pixel_15_fu_186 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_50_fu_438 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd21))) begin
        line_buffer_21_load_0_fu_330 <= tmp_fu_940_p30;
        new_pixel_16_fu_190 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_51_fu_442 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd22))) begin
        line_buffer_22_load_0_fu_334 <= tmp_fu_940_p30;
        new_pixel_17_fu_194 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_52_fu_446 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd23))) begin
        line_buffer_23_load_0_fu_338 <= tmp_fu_940_p30;
        new_pixel_18_fu_198 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_53_fu_450 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd24))) begin
        line_buffer_24_load_0_fu_342 <= tmp_fu_940_p30;
        new_pixel_19_fu_202 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_54_fu_454 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd25))) begin
        line_buffer_25_load_0_fu_346 <= tmp_fu_940_p30;
        new_pixel_20_fu_206 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_55_fu_458 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd26))) begin
        line_buffer_26_load_0_fu_350 <= tmp_fu_940_p30;
        new_pixel_21_fu_210 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_56_fu_462 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((((((icmp_ln67_fu_534_p2 == 1'd0) & (trunc_ln90_fu_1002_p1 == 5'd30)) | ((icmp_ln67_fu_534_p2 == 1'd0) & (trunc_ln90_fu_1002_p1 == 5'd31))) | ((icmp_ln67_fu_534_p2 == 1'd0) & (trunc_ln90_fu_1002_p1 == 5'd29))) | ((icmp_ln67_fu_534_p2 == 1'd0) & (trunc_ln90_fu_1002_p1 == 5'd28))) | ((icmp_ln67_fu_534_p2 == 1'd0) & (trunc_ln90_fu_1002_p1 == 5'd27))))) begin
        line_buffer_27_load_0_fu_354 <= tmp_fu_940_p30;
        new_pixel_22_fu_214 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_57_fu_466 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd2))) begin
        line_buffer_2_load_1_0_fu_254 <= tmp_fu_940_p30;
        new_pixel_26_fu_230 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_32_fu_366 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd3))) begin
        line_buffer_3_load_1_0_fu_258 <= tmp_fu_940_p30;
        new_pixel_27_fu_234 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_33_fu_370 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd4))) begin
        line_buffer_4_load_1_0_fu_262 <= tmp_fu_940_p30;
        new_pixel_28_fu_238 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_34_fu_374 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd5))) begin
        line_buffer_5_load_1_0_fu_266 <= tmp_fu_940_p30;
        new_pixel_29_fu_242 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_35_fu_378 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd6))) begin
        line_buffer_6_load_0_fu_270 <= tmp_fu_940_p30;
        new_pixel_23_fu_218 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_36_fu_382 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd7))) begin
        line_buffer_7_load_0_fu_274 <= tmp_fu_940_p30;
        new_pixel_37_fu_386 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_fu_134 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd8))) begin
        line_buffer_8_load_0_fu_278 <= tmp_fu_940_p30;
        new_pixel_38_fu_390 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_3_fu_138 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd9))) begin
        line_buffer_9_load_0_fu_282 <= tmp_fu_940_p30;
        new_pixel_39_fu_394 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_4_fu_142 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_fu_1002_p1 == 5'd0))) begin
        line_buffer_load_2_0_fu_246 <= tmp_fu_940_p30;
        new_pixel_24_fu_222 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        new_pixel_30_fu_358 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_fu_534_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        new_pixel_58_fu_474 <= ap_phi_mux_new_pixel_2_phi_fu_504_p4;
        temp_windows_elements_load_0_1_fu_478 <= tmp_s_fu_816_p30;
        temp_windows_elements_load_14_fu_470 <= tmp_1_fu_878_p30;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        new_pixel_58_load_reg_2116 <= new_pixel_58_fu_474;
        temp_windows_elements_load_1_reg_2122 <= temp_windows_elements_load_0_1_fu_478;
        temp_windows_elements_load_reg_2110 <= temp_windows_elements_load_14_fu_470;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_windows_elements_load_0_0_fu_130 <= temp_windows_elements_load_1_reg_2122;
        temp_windows_elements_load_13_fu_122 <= temp_windows_elements_load_reg_2110;
        temp_windows_elements_load_16_fu_126 <= new_pixel_58_load_reg_2116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln67_fu_534_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln67_fu_534_p2 == 1'd0)) begin
        if ((icmp_ln71_fu_546_p2 == 1'd0)) begin
            ap_phi_mux_new_pixel_2_phi_fu_504_p4 = 32'd0;
        end else if ((icmp_ln71_fu_546_p2 == 1'd1)) begin
            ap_phi_mux_new_pixel_2_phi_fu_504_p4 = temp_input_fu_556_p1;
        end else begin
            ap_phi_mux_new_pixel_2_phi_fu_504_p4 = ap_phi_reg_pp0_iter0_new_pixel_2_reg_501;
        end
    end else begin
        ap_phi_mux_new_pixel_2_phi_fu_504_p4 = ap_phi_reg_pp0_iter0_new_pixel_2_reg_501;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_col_ptr_load = 32'd0;
    end else begin
        ap_sig_allocacmp_col_ptr_load = col_ptr_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_col_ptr_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_col_ptr_load_1 = col_ptr_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_pixel_counter_3 = 10'd0;
    end else begin
        ap_sig_allocacmp_pixel_counter_3 = pixel_counter_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln94_reg_2150 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_32_window_stream_blk_n = conv2d_32_window_stream_full_n;
    end else begin
        conv2d_32_window_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln94_reg_2150 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_32_window_stream_write = 1'b1;
    end else begin
        conv2d_32_window_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_predicate_op114_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_stream_TDATA_blk_n = input_stream_TVALID_int_regslice;
    end else begin
        input_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op114_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_stream_TREADY_int_regslice = 1'b1;
    end else begin
        input_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((icmp_ln94_reg_2150 == 1'd1) & (conv2d_32_window_stream_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & ((ap_done_reg == 1'b1) | ((input_stream_TVALID_int_regslice == 1'b0) & (ap_predicate_op114_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((icmp_ln94_reg_2150 == 1'd1) & (conv2d_32_window_stream_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & ((ap_done_reg == 1'b1) | ((input_stream_TVALID_int_regslice == 1'b0) & (ap_predicate_op114_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((icmp_ln94_reg_2150 == 1'd1) & (conv2d_32_window_stream_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & ((ap_done_reg == 1'b1) | ((input_stream_TVALID_int_regslice == 1'b0) & (ap_predicate_op114_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((input_stream_TVALID_int_regslice == 1'b0) & (ap_predicate_op114_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln94_reg_2150 == 1'd1) & (conv2d_32_window_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_133 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_new_pixel_2_reg_501 = 'bx;

always @ (*) begin
    ap_predicate_op114_read_state1 = ((icmp_ln71_fu_546_p2 == 1'd1) & (icmp_ln67_fu_534_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln174_270_fu_1493_p1 = temp_windows_elements_load_1_reg_2122;

assign bitcast_ln174_271_fu_1496_p1 = tmp_s_reg_2136;

assign bitcast_ln174_272_fu_1499_p1 = temp_windows_elements_load_13_fu_122;

assign bitcast_ln174_273_fu_1503_p1 = temp_windows_elements_load_reg_2110;

assign bitcast_ln174_274_fu_1506_p1 = tmp_1_reg_2141;

assign bitcast_ln174_275_fu_1509_p1 = temp_windows_elements_load_16_fu_126;

assign bitcast_ln174_276_fu_1513_p1 = new_pixel_58_load_reg_2116;

assign bitcast_ln174_277_fu_1516_p1 = new_pixel_2_reg_501;

assign bitcast_ln174_fu_1489_p1 = temp_windows_elements_load_0_0_fu_130;

assign col_ptr_17_fu_1441_p2 = (ap_sig_allocacmp_col_ptr_load_1 + 32'd1);

assign col_ptr_18_fu_1447_p3 = ((icmp_ln97_fu_1435_p2[0:0] == 1'b1) ? 32'd0 : col_ptr_17_fu_1441_p2);

assign conv2d_32_window_stream_din = {{{{{{{{{bitcast_ln174_277_fu_1516_p1}, {bitcast_ln174_276_fu_1513_p1}}, {bitcast_ln174_275_fu_1509_p1}}, {bitcast_ln174_274_fu_1506_p1}}, {bitcast_ln174_273_fu_1503_p1}}, {bitcast_ln174_272_fu_1499_p1}}, {bitcast_ln174_271_fu_1496_p1}}, {bitcast_ln174_270_fu_1493_p1}}, {bitcast_ln174_fu_1489_p1}};

assign icmp_ln67_fu_534_p2 = ((ap_sig_allocacmp_pixel_counter_3 == 10'd813) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_546_p2 = ((ap_sig_allocacmp_pixel_counter_3 < 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1426_p2 = ((ap_sig_allocacmp_pixel_counter_3 > 10'd28) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1435_p2 = ((ap_sig_allocacmp_col_ptr_load_1 == 32'd27) ? 1'b1 : 1'b0);

assign input_stream_TREADY = regslice_both_input_stream_V_data_V_U_ack_in;

assign pixel_counter_4_fu_540_p2 = (ap_sig_allocacmp_pixel_counter_3 + 10'd1);

assign start_out = real_start;

assign temp_input_fu_556_p1 = input_stream_TDATA_int_regslice;

assign trunc_ln90_fu_1002_p1 = ap_sig_allocacmp_col_ptr_load[4:0];

endmodule //accel_create_window_stream_conv2d_1c_float_28u_28u_3u_3u_s
