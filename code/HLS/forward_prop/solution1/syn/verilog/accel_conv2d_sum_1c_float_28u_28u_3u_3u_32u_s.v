// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accel_conv2d_sum_1c_float_28u_28u_3u_3u_32u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        conv2d_32_padded_window_stream_dout,
        conv2d_32_padded_window_stream_num_data_valid,
        conv2d_32_padded_window_stream_fifo_cap,
        conv2d_32_padded_window_stream_empty_n,
        conv2d_32_padded_window_stream_read,
        weights_address0,
        weights_ce0,
        weights_q0,
        weights_address1,
        weights_ce1,
        weights_q1,
        biases_address0,
        biases_ce0,
        biases_q0,
        biases_address1,
        biases_ce1,
        biases_q1,
        kernel_sums136_din,
        kernel_sums136_num_data_valid,
        kernel_sums136_fifo_cap,
        kernel_sums136_full_n,
        kernel_sums136_write
);

parameter    ap_ST_fsm_state1 = 146'd1;
parameter    ap_ST_fsm_state2 = 146'd2;
parameter    ap_ST_fsm_state3 = 146'd4;
parameter    ap_ST_fsm_state4 = 146'd8;
parameter    ap_ST_fsm_state5 = 146'd16;
parameter    ap_ST_fsm_state6 = 146'd32;
parameter    ap_ST_fsm_state7 = 146'd64;
parameter    ap_ST_fsm_state8 = 146'd128;
parameter    ap_ST_fsm_state9 = 146'd256;
parameter    ap_ST_fsm_state10 = 146'd512;
parameter    ap_ST_fsm_state11 = 146'd1024;
parameter    ap_ST_fsm_state12 = 146'd2048;
parameter    ap_ST_fsm_state13 = 146'd4096;
parameter    ap_ST_fsm_state14 = 146'd8192;
parameter    ap_ST_fsm_state15 = 146'd16384;
parameter    ap_ST_fsm_state16 = 146'd32768;
parameter    ap_ST_fsm_state17 = 146'd65536;
parameter    ap_ST_fsm_state18 = 146'd131072;
parameter    ap_ST_fsm_state19 = 146'd262144;
parameter    ap_ST_fsm_state20 = 146'd524288;
parameter    ap_ST_fsm_state21 = 146'd1048576;
parameter    ap_ST_fsm_state22 = 146'd2097152;
parameter    ap_ST_fsm_state23 = 146'd4194304;
parameter    ap_ST_fsm_state24 = 146'd8388608;
parameter    ap_ST_fsm_state25 = 146'd16777216;
parameter    ap_ST_fsm_state26 = 146'd33554432;
parameter    ap_ST_fsm_state27 = 146'd67108864;
parameter    ap_ST_fsm_state28 = 146'd134217728;
parameter    ap_ST_fsm_state29 = 146'd268435456;
parameter    ap_ST_fsm_state30 = 146'd536870912;
parameter    ap_ST_fsm_state31 = 146'd1073741824;
parameter    ap_ST_fsm_state32 = 146'd2147483648;
parameter    ap_ST_fsm_state33 = 146'd4294967296;
parameter    ap_ST_fsm_state34 = 146'd8589934592;
parameter    ap_ST_fsm_state35 = 146'd17179869184;
parameter    ap_ST_fsm_state36 = 146'd34359738368;
parameter    ap_ST_fsm_state37 = 146'd68719476736;
parameter    ap_ST_fsm_state38 = 146'd137438953472;
parameter    ap_ST_fsm_state39 = 146'd274877906944;
parameter    ap_ST_fsm_state40 = 146'd549755813888;
parameter    ap_ST_fsm_state41 = 146'd1099511627776;
parameter    ap_ST_fsm_state42 = 146'd2199023255552;
parameter    ap_ST_fsm_state43 = 146'd4398046511104;
parameter    ap_ST_fsm_state44 = 146'd8796093022208;
parameter    ap_ST_fsm_state45 = 146'd17592186044416;
parameter    ap_ST_fsm_state46 = 146'd35184372088832;
parameter    ap_ST_fsm_state47 = 146'd70368744177664;
parameter    ap_ST_fsm_state48 = 146'd140737488355328;
parameter    ap_ST_fsm_state49 = 146'd281474976710656;
parameter    ap_ST_fsm_state50 = 146'd562949953421312;
parameter    ap_ST_fsm_state51 = 146'd1125899906842624;
parameter    ap_ST_fsm_state52 = 146'd2251799813685248;
parameter    ap_ST_fsm_state53 = 146'd4503599627370496;
parameter    ap_ST_fsm_state54 = 146'd9007199254740992;
parameter    ap_ST_fsm_state55 = 146'd18014398509481984;
parameter    ap_ST_fsm_state56 = 146'd36028797018963968;
parameter    ap_ST_fsm_state57 = 146'd72057594037927936;
parameter    ap_ST_fsm_state58 = 146'd144115188075855872;
parameter    ap_ST_fsm_state59 = 146'd288230376151711744;
parameter    ap_ST_fsm_state60 = 146'd576460752303423488;
parameter    ap_ST_fsm_state61 = 146'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 146'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 146'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 146'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 146'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 146'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 146'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 146'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 146'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 146'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 146'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 146'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 146'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 146'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 146'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 146'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 146'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 146'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 146'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 146'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 146'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 146'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 146'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 146'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 146'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 146'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 146'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 146'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 146'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 146'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 146'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 146'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 146'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 146'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 146'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 146'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 146'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 146'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 146'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 146'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 146'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 146'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 146'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 146'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 146'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 146'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 146'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 146'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 146'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 146'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 146'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 146'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 146'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 146'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 146'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 146'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 146'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 146'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 146'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 146'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 146'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 146'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 146'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 146'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 146'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 146'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 146'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 146'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 146'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 146'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 146'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 146'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 146'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 146'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 146'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 146'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 146'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 146'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 146'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 146'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 146'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 146'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 146'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 146'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 146'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 146'd44601490397061246283071436545296723011960832;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [287:0] conv2d_32_padded_window_stream_dout;
input  [2:0] conv2d_32_padded_window_stream_num_data_valid;
input  [2:0] conv2d_32_padded_window_stream_fifo_cap;
input   conv2d_32_padded_window_stream_empty_n;
output   conv2d_32_padded_window_stream_read;
output  [8:0] weights_address0;
output   weights_ce0;
input  [31:0] weights_q0;
output  [8:0] weights_address1;
output   weights_ce1;
input  [31:0] weights_q1;
output  [4:0] biases_address0;
output   biases_ce0;
input  [31:0] biases_q0;
output  [4:0] biases_address1;
output   biases_ce1;
input  [31:0] biases_q1;
output  [31:0] kernel_sums136_din;
input  [2:0] kernel_sums136_num_data_valid;
input  [2:0] kernel_sums136_fifo_cap;
input   kernel_sums136_full_n;
output   kernel_sums136_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg conv2d_32_padded_window_stream_read;
reg[8:0] weights_address0;
reg weights_ce0;
reg[8:0] weights_address1;
reg weights_ce1;
reg[4:0] biases_address0;
reg biases_ce0;
reg[4:0] biases_address1;
reg biases_ce1;
reg kernel_sums136_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [145:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire    ap_CS_fsm_state2;
reg   [31:0] weights_load_reg_3848;
reg   [31:0] weights_load_18401_reg_3853;
wire    ap_CS_fsm_state3;
reg   [31:0] weights_load_18402_reg_3868;
reg   [31:0] weights_load_18403_reg_3873;
wire    ap_CS_fsm_state4;
reg   [31:0] weights_load_18404_reg_3888;
reg   [31:0] weights_load_18405_reg_3893;
wire    ap_CS_fsm_state5;
reg   [31:0] weights_load_18406_reg_3908;
reg   [31:0] weights_load_18407_reg_3913;
wire    ap_CS_fsm_state6;
reg   [31:0] weights_load_18408_reg_3928;
reg   [31:0] weights_load_18409_reg_3933;
wire    ap_CS_fsm_state7;
reg   [31:0] weights_load_18410_reg_3948;
reg   [31:0] weights_load_18411_reg_3953;
wire    ap_CS_fsm_state8;
reg   [31:0] weights_load_18412_reg_3968;
reg   [31:0] weights_load_18413_reg_3973;
wire    ap_CS_fsm_state9;
reg   [31:0] weights_load_18414_reg_3988;
reg   [31:0] weights_load_18415_reg_3993;
wire    ap_CS_fsm_state10;
reg   [31:0] weights_load_18416_reg_4008;
reg   [31:0] weights_load_18417_reg_4013;
wire    ap_CS_fsm_state11;
reg   [31:0] weights_load_18418_reg_4028;
reg   [31:0] weights_load_18419_reg_4033;
wire    ap_CS_fsm_state12;
reg   [31:0] weights_load_18420_reg_4048;
reg   [31:0] weights_load_18421_reg_4053;
wire    ap_CS_fsm_state13;
reg   [31:0] weights_load_18422_reg_4068;
reg   [31:0] weights_load_18423_reg_4073;
wire    ap_CS_fsm_state14;
reg   [31:0] weights_load_18424_reg_4088;
reg   [31:0] weights_load_18425_reg_4093;
wire    ap_CS_fsm_state15;
reg   [31:0] weights_load_18426_reg_4108;
reg   [31:0] weights_load_18427_reg_4113;
wire    ap_CS_fsm_state16;
reg   [31:0] weights_load_18428_reg_4128;
reg   [31:0] weights_load_18429_reg_4133;
wire    ap_CS_fsm_state17;
reg   [31:0] weights_load_18430_reg_4148;
reg   [31:0] weights_load_18431_reg_4153;
wire    ap_CS_fsm_state18;
reg   [31:0] weights_load_18432_reg_4168;
reg   [31:0] weights_load_18433_reg_4173;
wire    ap_CS_fsm_state19;
reg   [31:0] weights_load_18434_reg_4188;
reg   [31:0] weights_load_18435_reg_4193;
wire    ap_CS_fsm_state20;
reg   [31:0] weights_load_18436_reg_4208;
reg   [31:0] weights_load_18437_reg_4213;
wire    ap_CS_fsm_state21;
reg   [31:0] weights_load_18438_reg_4228;
reg   [31:0] weights_load_18439_reg_4233;
wire    ap_CS_fsm_state22;
reg   [31:0] weights_load_18440_reg_4248;
reg   [31:0] weights_load_18441_reg_4253;
wire    ap_CS_fsm_state23;
reg   [31:0] weights_load_18442_reg_4268;
reg   [31:0] weights_load_18443_reg_4273;
wire    ap_CS_fsm_state24;
reg   [31:0] weights_load_18444_reg_4288;
reg   [31:0] weights_load_18445_reg_4293;
wire    ap_CS_fsm_state25;
reg   [31:0] weights_load_18446_reg_4308;
reg   [31:0] weights_load_18447_reg_4313;
wire    ap_CS_fsm_state26;
reg   [31:0] weights_load_18448_reg_4328;
reg   [31:0] weights_load_18449_reg_4333;
wire    ap_CS_fsm_state27;
reg   [31:0] weights_load_18450_reg_4348;
reg   [31:0] weights_load_18451_reg_4353;
wire    ap_CS_fsm_state28;
reg   [31:0] weights_load_18452_reg_4368;
reg   [31:0] weights_load_18453_reg_4373;
wire    ap_CS_fsm_state29;
reg   [31:0] weights_load_18454_reg_4388;
reg   [31:0] weights_load_18455_reg_4393;
wire    ap_CS_fsm_state30;
reg   [31:0] weights_load_18456_reg_4408;
reg   [31:0] weights_load_18457_reg_4413;
wire    ap_CS_fsm_state31;
reg   [31:0] weights_load_18458_reg_4428;
reg   [31:0] weights_load_18459_reg_4433;
wire    ap_CS_fsm_state32;
reg   [31:0] weights_load_18460_reg_4448;
reg   [31:0] weights_load_18461_reg_4453;
wire    ap_CS_fsm_state33;
reg   [31:0] weights_load_18462_reg_4468;
reg   [31:0] weights_load_18463_reg_4473;
wire    ap_CS_fsm_state34;
reg   [31:0] weights_load_18464_reg_4488;
reg   [31:0] weights_load_18465_reg_4493;
wire    ap_CS_fsm_state35;
reg   [31:0] weights_load_18466_reg_4508;
reg   [31:0] weights_load_18467_reg_4513;
wire    ap_CS_fsm_state36;
reg   [31:0] weights_load_18468_reg_4528;
reg   [31:0] weights_load_18469_reg_4533;
wire    ap_CS_fsm_state37;
reg   [31:0] weights_load_18470_reg_4548;
reg   [31:0] weights_load_18471_reg_4553;
wire    ap_CS_fsm_state38;
reg   [31:0] weights_load_18472_reg_4568;
reg   [31:0] weights_load_18473_reg_4573;
wire    ap_CS_fsm_state39;
reg   [31:0] weights_load_18474_reg_4588;
reg   [31:0] weights_load_18475_reg_4593;
wire    ap_CS_fsm_state40;
reg   [31:0] weights_load_18476_reg_4608;
reg   [31:0] weights_load_18477_reg_4613;
wire    ap_CS_fsm_state41;
reg   [31:0] weights_load_18478_reg_4628;
reg   [31:0] weights_load_18479_reg_4633;
wire    ap_CS_fsm_state42;
reg   [31:0] weights_load_18480_reg_4648;
reg   [31:0] weights_load_18481_reg_4653;
wire    ap_CS_fsm_state43;
reg   [31:0] weights_load_18482_reg_4668;
reg   [31:0] weights_load_18483_reg_4673;
wire    ap_CS_fsm_state44;
reg   [31:0] weights_load_18484_reg_4688;
reg   [31:0] weights_load_18485_reg_4693;
wire    ap_CS_fsm_state45;
reg   [31:0] weights_load_18486_reg_4708;
reg   [31:0] weights_load_18487_reg_4713;
wire    ap_CS_fsm_state46;
reg   [31:0] weights_load_18488_reg_4728;
reg   [31:0] weights_load_18489_reg_4733;
wire    ap_CS_fsm_state47;
reg   [31:0] weights_load_18490_reg_4748;
reg   [31:0] weights_load_18491_reg_4753;
wire    ap_CS_fsm_state48;
reg   [31:0] weights_load_18492_reg_4768;
reg   [31:0] weights_load_18493_reg_4773;
wire    ap_CS_fsm_state49;
reg   [31:0] weights_load_18494_reg_4788;
reg   [31:0] weights_load_18495_reg_4793;
wire    ap_CS_fsm_state50;
reg   [31:0] weights_load_18496_reg_4808;
reg   [31:0] weights_load_18497_reg_4813;
wire    ap_CS_fsm_state51;
reg   [31:0] weights_load_18498_reg_4828;
reg   [31:0] weights_load_18499_reg_4833;
wire    ap_CS_fsm_state52;
reg   [31:0] weights_load_18500_reg_4848;
reg   [31:0] weights_load_18501_reg_4853;
wire    ap_CS_fsm_state53;
reg   [31:0] weights_load_18502_reg_4868;
reg   [31:0] weights_load_18503_reg_4873;
wire    ap_CS_fsm_state54;
reg   [31:0] weights_load_18504_reg_4888;
reg   [31:0] weights_load_18505_reg_4893;
wire    ap_CS_fsm_state55;
reg   [31:0] weights_load_18506_reg_4908;
reg   [31:0] weights_load_18507_reg_4913;
wire    ap_CS_fsm_state56;
reg   [31:0] weights_load_18508_reg_4928;
reg   [31:0] weights_load_18509_reg_4933;
wire    ap_CS_fsm_state57;
reg   [31:0] weights_load_18510_reg_4948;
reg   [31:0] weights_load_18511_reg_4953;
wire    ap_CS_fsm_state58;
reg   [31:0] weights_load_18512_reg_4968;
reg   [31:0] weights_load_18513_reg_4973;
wire    ap_CS_fsm_state59;
reg   [31:0] weights_load_18514_reg_4988;
reg   [31:0] weights_load_18515_reg_4993;
wire    ap_CS_fsm_state60;
reg   [31:0] weights_load_18516_reg_5008;
reg   [31:0] weights_load_18517_reg_5013;
wire    ap_CS_fsm_state61;
reg   [31:0] weights_load_18518_reg_5028;
reg   [31:0] weights_load_18519_reg_5033;
wire    ap_CS_fsm_state62;
reg   [31:0] weights_load_18520_reg_5048;
reg   [31:0] weights_load_18521_reg_5053;
wire    ap_CS_fsm_state63;
reg   [31:0] weights_load_18522_reg_5068;
reg   [31:0] weights_load_18523_reg_5073;
wire    ap_CS_fsm_state64;
reg   [31:0] weights_load_18524_reg_5088;
reg   [31:0] weights_load_18525_reg_5093;
wire    ap_CS_fsm_state65;
reg   [31:0] weights_load_18526_reg_5108;
reg   [31:0] weights_load_18527_reg_5113;
wire    ap_CS_fsm_state66;
reg   [31:0] weights_load_18528_reg_5128;
reg   [31:0] weights_load_18529_reg_5133;
wire    ap_CS_fsm_state67;
reg   [31:0] weights_load_18530_reg_5148;
reg   [31:0] weights_load_18531_reg_5153;
wire    ap_CS_fsm_state68;
reg   [31:0] weights_load_18532_reg_5168;
reg   [31:0] weights_load_18533_reg_5173;
wire    ap_CS_fsm_state69;
reg   [31:0] weights_load_18534_reg_5188;
reg   [31:0] weights_load_18535_reg_5193;
wire    ap_CS_fsm_state70;
reg   [31:0] weights_load_18536_reg_5208;
reg   [31:0] weights_load_18537_reg_5213;
wire    ap_CS_fsm_state71;
reg   [31:0] weights_load_18538_reg_5228;
reg   [31:0] weights_load_18539_reg_5233;
wire    ap_CS_fsm_state72;
reg   [31:0] weights_load_18540_reg_5248;
reg   [31:0] weights_load_18541_reg_5253;
wire    ap_CS_fsm_state73;
reg   [31:0] weights_load_18542_reg_5268;
reg   [31:0] weights_load_18543_reg_5273;
wire    ap_CS_fsm_state74;
reg   [31:0] weights_load_18544_reg_5288;
reg   [31:0] weights_load_18545_reg_5293;
wire    ap_CS_fsm_state75;
reg   [31:0] weights_load_18546_reg_5308;
reg   [31:0] weights_load_18547_reg_5313;
wire    ap_CS_fsm_state76;
reg   [31:0] weights_load_18548_reg_5328;
reg   [31:0] weights_load_18549_reg_5333;
wire    ap_CS_fsm_state77;
reg   [31:0] weights_load_18550_reg_5348;
reg   [31:0] weights_load_18551_reg_5353;
wire    ap_CS_fsm_state78;
reg   [31:0] weights_load_18552_reg_5368;
reg   [31:0] weights_load_18553_reg_5373;
wire    ap_CS_fsm_state79;
reg   [31:0] weights_load_18554_reg_5388;
reg   [31:0] weights_load_18555_reg_5393;
wire    ap_CS_fsm_state80;
reg   [31:0] weights_load_18556_reg_5408;
reg   [31:0] weights_load_18557_reg_5413;
wire    ap_CS_fsm_state81;
reg   [31:0] weights_load_18558_reg_5428;
reg   [31:0] weights_load_18559_reg_5433;
wire    ap_CS_fsm_state82;
reg   [31:0] weights_load_18560_reg_5448;
reg   [31:0] weights_load_18561_reg_5453;
wire    ap_CS_fsm_state83;
reg   [31:0] weights_load_18562_reg_5468;
reg   [31:0] weights_load_18563_reg_5473;
wire    ap_CS_fsm_state84;
reg   [31:0] weights_load_18564_reg_5488;
reg   [31:0] weights_load_18565_reg_5493;
wire    ap_CS_fsm_state85;
reg   [31:0] weights_load_18566_reg_5508;
reg   [31:0] weights_load_18567_reg_5513;
wire    ap_CS_fsm_state86;
reg   [31:0] weights_load_18568_reg_5528;
reg   [31:0] weights_load_18569_reg_5533;
wire    ap_CS_fsm_state87;
reg   [31:0] weights_load_18570_reg_5548;
reg   [31:0] weights_load_18571_reg_5553;
wire    ap_CS_fsm_state88;
reg   [31:0] weights_load_18572_reg_5568;
reg   [31:0] weights_load_18573_reg_5573;
wire    ap_CS_fsm_state89;
reg   [31:0] weights_load_18574_reg_5588;
reg   [31:0] weights_load_18575_reg_5593;
wire    ap_CS_fsm_state90;
reg   [31:0] weights_load_18576_reg_5608;
reg   [31:0] weights_load_18577_reg_5613;
wire    ap_CS_fsm_state91;
reg   [31:0] weights_load_18578_reg_5628;
reg   [31:0] weights_load_18579_reg_5633;
wire    ap_CS_fsm_state92;
reg   [31:0] weights_load_18580_reg_5648;
reg   [31:0] weights_load_18581_reg_5653;
wire    ap_CS_fsm_state93;
reg   [31:0] weights_load_18582_reg_5668;
reg   [31:0] weights_load_18583_reg_5673;
wire    ap_CS_fsm_state94;
reg   [31:0] weights_load_18584_reg_5688;
reg   [31:0] weights_load_18585_reg_5693;
wire    ap_CS_fsm_state95;
reg   [31:0] weights_load_18586_reg_5708;
reg   [31:0] weights_load_18587_reg_5713;
wire    ap_CS_fsm_state96;
reg   [31:0] weights_load_18588_reg_5728;
reg   [31:0] weights_load_18589_reg_5733;
wire    ap_CS_fsm_state97;
reg   [31:0] weights_load_18590_reg_5748;
reg   [31:0] weights_load_18591_reg_5753;
wire    ap_CS_fsm_state98;
reg   [31:0] weights_load_18592_reg_5768;
reg   [31:0] weights_load_18593_reg_5773;
wire    ap_CS_fsm_state99;
reg   [31:0] weights_load_18594_reg_5788;
reg   [31:0] weights_load_18595_reg_5793;
wire    ap_CS_fsm_state100;
reg   [31:0] weights_load_18596_reg_5808;
reg   [31:0] weights_load_18597_reg_5813;
wire    ap_CS_fsm_state101;
reg   [31:0] weights_load_18598_reg_5828;
reg   [31:0] weights_load_18599_reg_5833;
wire    ap_CS_fsm_state102;
reg   [31:0] weights_load_18600_reg_5848;
reg   [31:0] weights_load_18601_reg_5853;
wire    ap_CS_fsm_state103;
reg   [31:0] weights_load_18602_reg_5868;
reg   [31:0] weights_load_18603_reg_5873;
wire    ap_CS_fsm_state104;
reg   [31:0] weights_load_18604_reg_5888;
reg   [31:0] weights_load_18605_reg_5893;
wire    ap_CS_fsm_state105;
reg   [31:0] weights_load_18606_reg_5908;
reg   [31:0] weights_load_18607_reg_5913;
wire    ap_CS_fsm_state106;
reg   [31:0] weights_load_18608_reg_5928;
reg   [31:0] weights_load_18609_reg_5933;
wire    ap_CS_fsm_state107;
reg   [31:0] weights_load_18610_reg_5948;
reg   [31:0] weights_load_18611_reg_5953;
wire    ap_CS_fsm_state108;
reg   [31:0] weights_load_18612_reg_5968;
reg   [31:0] weights_load_18613_reg_5973;
wire    ap_CS_fsm_state109;
reg   [31:0] weights_load_18614_reg_5988;
reg   [31:0] weights_load_18615_reg_5993;
wire    ap_CS_fsm_state110;
reg   [31:0] weights_load_18616_reg_6008;
reg   [31:0] weights_load_18617_reg_6013;
wire    ap_CS_fsm_state111;
reg   [31:0] weights_load_18618_reg_6028;
reg   [31:0] weights_load_18619_reg_6033;
wire    ap_CS_fsm_state112;
reg   [31:0] weights_load_18620_reg_6048;
reg   [31:0] weights_load_18621_reg_6053;
wire    ap_CS_fsm_state113;
reg   [31:0] weights_load_18622_reg_6068;
reg   [31:0] weights_load_18623_reg_6073;
wire    ap_CS_fsm_state114;
reg   [31:0] weights_load_18624_reg_6088;
reg   [31:0] weights_load_18625_reg_6093;
wire    ap_CS_fsm_state115;
reg   [31:0] weights_load_18626_reg_6108;
reg   [31:0] weights_load_18627_reg_6113;
wire    ap_CS_fsm_state116;
reg   [31:0] weights_load_18628_reg_6128;
reg   [31:0] weights_load_18629_reg_6133;
wire    ap_CS_fsm_state117;
reg   [31:0] weights_load_18630_reg_6148;
reg   [31:0] weights_load_18631_reg_6153;
wire    ap_CS_fsm_state118;
reg   [31:0] weights_load_18632_reg_6168;
reg   [31:0] weights_load_18633_reg_6173;
wire    ap_CS_fsm_state119;
reg   [31:0] weights_load_18634_reg_6188;
reg   [31:0] weights_load_18635_reg_6193;
wire    ap_CS_fsm_state120;
reg   [31:0] weights_load_18636_reg_6208;
reg   [31:0] weights_load_18637_reg_6213;
wire    ap_CS_fsm_state121;
reg   [31:0] weights_load_18638_reg_6228;
reg   [31:0] weights_load_18639_reg_6233;
wire    ap_CS_fsm_state122;
reg   [31:0] weights_load_18640_reg_6248;
reg   [31:0] weights_load_18641_reg_6253;
wire    ap_CS_fsm_state123;
reg   [31:0] weights_load_18642_reg_6268;
reg   [31:0] weights_load_18643_reg_6273;
wire    ap_CS_fsm_state124;
reg   [31:0] weights_load_18644_reg_6288;
reg   [31:0] weights_load_18645_reg_6293;
wire    ap_CS_fsm_state125;
reg   [31:0] weights_load_18646_reg_6308;
reg   [31:0] weights_load_18647_reg_6313;
wire    ap_CS_fsm_state126;
reg   [31:0] weights_load_18648_reg_6328;
reg   [31:0] weights_load_18649_reg_6333;
wire    ap_CS_fsm_state127;
reg   [31:0] weights_load_18650_reg_6348;
reg   [31:0] weights_load_18651_reg_6353;
wire    ap_CS_fsm_state128;
reg   [31:0] weights_load_18652_reg_6368;
reg   [31:0] weights_load_18653_reg_6373;
wire    ap_CS_fsm_state129;
reg   [31:0] weights_load_18654_reg_6398;
reg   [31:0] weights_load_18655_reg_6403;
wire    ap_CS_fsm_state130;
reg   [31:0] biases_load_reg_6428;
reg   [31:0] biases_load_1_reg_6433;
reg   [31:0] weights_load_18656_reg_6438;
reg   [31:0] weights_load_18657_reg_6443;
wire    ap_CS_fsm_state131;
reg   [31:0] biases_load_2_reg_6468;
reg   [31:0] biases_load_3_reg_6473;
reg   [31:0] weights_load_18658_reg_6478;
reg   [31:0] weights_load_18659_reg_6483;
wire    ap_CS_fsm_state132;
reg   [31:0] biases_load_4_reg_6508;
reg   [31:0] biases_load_5_reg_6513;
reg   [31:0] weights_load_18660_reg_6518;
reg   [31:0] weights_load_18661_reg_6523;
wire    ap_CS_fsm_state133;
reg   [31:0] biases_load_6_reg_6548;
reg   [31:0] biases_load_7_reg_6553;
reg   [31:0] weights_load_18662_reg_6558;
reg   [31:0] weights_load_18663_reg_6563;
wire    ap_CS_fsm_state134;
reg   [31:0] biases_load_8_reg_6588;
reg   [31:0] biases_load_9_reg_6593;
reg   [31:0] weights_load_18664_reg_6598;
reg   [31:0] weights_load_18665_reg_6603;
wire    ap_CS_fsm_state135;
reg   [31:0] biases_load_10_reg_6628;
reg   [31:0] biases_load_11_reg_6633;
reg   [31:0] weights_load_18666_reg_6638;
reg   [31:0] weights_load_18667_reg_6643;
wire    ap_CS_fsm_state136;
reg   [31:0] biases_load_12_reg_6668;
reg   [31:0] biases_load_13_reg_6673;
reg   [31:0] weights_load_18668_reg_6678;
reg   [31:0] weights_load_18669_reg_6683;
wire    ap_CS_fsm_state137;
reg   [31:0] biases_load_14_reg_6708;
reg   [31:0] biases_load_15_reg_6713;
reg   [31:0] weights_load_18670_reg_6718;
reg   [31:0] weights_load_18671_reg_6723;
wire    ap_CS_fsm_state138;
reg   [31:0] biases_load_16_reg_6748;
reg   [31:0] biases_load_17_reg_6753;
reg   [31:0] weights_load_18672_reg_6758;
reg   [31:0] weights_load_18673_reg_6763;
wire    ap_CS_fsm_state139;
reg   [31:0] biases_load_18_reg_6788;
reg   [31:0] biases_load_19_reg_6793;
reg   [31:0] weights_load_18674_reg_6798;
reg   [31:0] weights_load_18675_reg_6803;
wire    ap_CS_fsm_state140;
reg   [31:0] biases_load_20_reg_6828;
reg   [31:0] biases_load_21_reg_6833;
reg   [31:0] weights_load_18676_reg_6838;
reg   [31:0] weights_load_18677_reg_6843;
wire    ap_CS_fsm_state141;
reg   [31:0] biases_load_22_reg_6868;
reg   [31:0] biases_load_23_reg_6873;
reg   [31:0] weights_load_18678_reg_6878;
reg   [31:0] weights_load_18679_reg_6883;
wire    ap_CS_fsm_state142;
reg   [31:0] biases_load_24_reg_6908;
reg   [31:0] biases_load_25_reg_6913;
reg   [31:0] weights_load_18680_reg_6918;
reg   [31:0] weights_load_18681_reg_6923;
wire    ap_CS_fsm_state143;
reg   [31:0] biases_load_26_reg_6948;
reg   [31:0] biases_load_27_reg_6953;
reg   [31:0] weights_load_18682_reg_6958;
reg   [31:0] weights_load_18683_reg_6963;
wire    ap_CS_fsm_state144;
reg   [31:0] biases_load_28_reg_6988;
reg   [31:0] biases_load_29_reg_6993;
reg   [31:0] weights_load_18684_reg_6998;
reg   [31:0] weights_load_18685_reg_7003;
reg   [31:0] biases_load_30_reg_7008;
wire    ap_CS_fsm_state145;
reg   [31:0] biases_load_31_reg_7013;
reg   [31:0] weights_load_18686_reg_7018;
reg   [31:0] weights_load_18687_reg_7023;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_idle;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_ready;
wire   [31:0] grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_din;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_write;
wire    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_conv2d_32_padded_window_stream_read;
reg    grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg;
wire    ap_CS_fsm_state146;
reg    ap_block_state1;
reg   [145:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
reg    ap_ST_fsm_state146_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 146'd1;
#0 grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg = 1'b0;
end

accel_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start),
    .ap_done(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done),
    .ap_idle(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_idle),
    .ap_ready(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_ready),
    .kernel_sums136_din(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_din),
    .kernel_sums136_num_data_valid(3'd0),
    .kernel_sums136_fifo_cap(3'd0),
    .kernel_sums136_full_n(kernel_sums136_full_n),
    .kernel_sums136_write(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_write),
    .conv2d_32_padded_window_stream_dout(conv2d_32_padded_window_stream_dout),
    .conv2d_32_padded_window_stream_num_data_valid(3'd0),
    .conv2d_32_padded_window_stream_fifo_cap(3'd0),
    .conv2d_32_padded_window_stream_empty_n(conv2d_32_padded_window_stream_empty_n),
    .conv2d_32_padded_window_stream_read(grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_conv2d_32_padded_window_stream_read),
    .weights_load(weights_load_reg_3848),
    .weights_load_18401(weights_load_18401_reg_3853),
    .weights_load_18402(weights_load_18402_reg_3868),
    .weights_load_18403(weights_load_18403_reg_3873),
    .weights_load_18404(weights_load_18404_reg_3888),
    .weights_load_18405(weights_load_18405_reg_3893),
    .weights_load_18406(weights_load_18406_reg_3908),
    .weights_load_18407(weights_load_18407_reg_3913),
    .weights_load_18408(weights_load_18408_reg_3928),
    .temp_sum(biases_load_reg_6428),
    .weights_load_18409(weights_load_18409_reg_3933),
    .weights_load_18410(weights_load_18410_reg_3948),
    .weights_load_18411(weights_load_18411_reg_3953),
    .weights_load_18412(weights_load_18412_reg_3968),
    .weights_load_18413(weights_load_18413_reg_3973),
    .weights_load_18414(weights_load_18414_reg_3988),
    .weights_load_18415(weights_load_18415_reg_3993),
    .weights_load_18416(weights_load_18416_reg_4008),
    .weights_load_18417(weights_load_18417_reg_4013),
    .temp_sum_4066(biases_load_1_reg_6433),
    .weights_load_18418(weights_load_18418_reg_4028),
    .weights_load_18419(weights_load_18419_reg_4033),
    .weights_load_18420(weights_load_18420_reg_4048),
    .weights_load_18421(weights_load_18421_reg_4053),
    .weights_load_18422(weights_load_18422_reg_4068),
    .weights_load_18423(weights_load_18423_reg_4073),
    .weights_load_18424(weights_load_18424_reg_4088),
    .weights_load_18425(weights_load_18425_reg_4093),
    .weights_load_18426(weights_load_18426_reg_4108),
    .temp_sum_4068(biases_load_2_reg_6468),
    .weights_load_18427(weights_load_18427_reg_4113),
    .weights_load_18428(weights_load_18428_reg_4128),
    .weights_load_18429(weights_load_18429_reg_4133),
    .weights_load_18430(weights_load_18430_reg_4148),
    .weights_load_18431(weights_load_18431_reg_4153),
    .weights_load_18432(weights_load_18432_reg_4168),
    .weights_load_18433(weights_load_18433_reg_4173),
    .weights_load_18434(weights_load_18434_reg_4188),
    .weights_load_18435(weights_load_18435_reg_4193),
    .temp_sum_4070(biases_load_3_reg_6473),
    .weights_load_18436(weights_load_18436_reg_4208),
    .weights_load_18437(weights_load_18437_reg_4213),
    .weights_load_18438(weights_load_18438_reg_4228),
    .weights_load_18439(weights_load_18439_reg_4233),
    .weights_load_18440(weights_load_18440_reg_4248),
    .weights_load_18441(weights_load_18441_reg_4253),
    .weights_load_18442(weights_load_18442_reg_4268),
    .weights_load_18443(weights_load_18443_reg_4273),
    .weights_load_18444(weights_load_18444_reg_4288),
    .temp_sum_4072(biases_load_4_reg_6508),
    .weights_load_18445(weights_load_18445_reg_4293),
    .weights_load_18446(weights_load_18446_reg_4308),
    .weights_load_18447(weights_load_18447_reg_4313),
    .weights_load_18448(weights_load_18448_reg_4328),
    .weights_load_18449(weights_load_18449_reg_4333),
    .weights_load_18450(weights_load_18450_reg_4348),
    .weights_load_18451(weights_load_18451_reg_4353),
    .weights_load_18452(weights_load_18452_reg_4368),
    .weights_load_18453(weights_load_18453_reg_4373),
    .temp_sum_4074(biases_load_5_reg_6513),
    .weights_load_18454(weights_load_18454_reg_4388),
    .weights_load_18455(weights_load_18455_reg_4393),
    .weights_load_18456(weights_load_18456_reg_4408),
    .weights_load_18457(weights_load_18457_reg_4413),
    .weights_load_18458(weights_load_18458_reg_4428),
    .weights_load_18459(weights_load_18459_reg_4433),
    .weights_load_18460(weights_load_18460_reg_4448),
    .weights_load_18461(weights_load_18461_reg_4453),
    .weights_load_18462(weights_load_18462_reg_4468),
    .temp_sum_4076(biases_load_6_reg_6548),
    .weights_load_18463(weights_load_18463_reg_4473),
    .weights_load_18464(weights_load_18464_reg_4488),
    .weights_load_18465(weights_load_18465_reg_4493),
    .weights_load_18466(weights_load_18466_reg_4508),
    .weights_load_18467(weights_load_18467_reg_4513),
    .weights_load_18468(weights_load_18468_reg_4528),
    .weights_load_18469(weights_load_18469_reg_4533),
    .weights_load_18470(weights_load_18470_reg_4548),
    .weights_load_18471(weights_load_18471_reg_4553),
    .temp_sum_4078(biases_load_7_reg_6553),
    .weights_load_18472(weights_load_18472_reg_4568),
    .weights_load_18473(weights_load_18473_reg_4573),
    .weights_load_18474(weights_load_18474_reg_4588),
    .weights_load_18475(weights_load_18475_reg_4593),
    .weights_load_18476(weights_load_18476_reg_4608),
    .weights_load_18477(weights_load_18477_reg_4613),
    .weights_load_18478(weights_load_18478_reg_4628),
    .weights_load_18479(weights_load_18479_reg_4633),
    .weights_load_18480(weights_load_18480_reg_4648),
    .temp_sum_4080(biases_load_8_reg_6588),
    .weights_load_18481(weights_load_18481_reg_4653),
    .weights_load_18482(weights_load_18482_reg_4668),
    .weights_load_18483(weights_load_18483_reg_4673),
    .weights_load_18484(weights_load_18484_reg_4688),
    .weights_load_18485(weights_load_18485_reg_4693),
    .weights_load_18486(weights_load_18486_reg_4708),
    .weights_load_18487(weights_load_18487_reg_4713),
    .weights_load_18488(weights_load_18488_reg_4728),
    .weights_load_18489(weights_load_18489_reg_4733),
    .temp_sum_4082(biases_load_9_reg_6593),
    .weights_load_18490(weights_load_18490_reg_4748),
    .weights_load_18491(weights_load_18491_reg_4753),
    .weights_load_18492(weights_load_18492_reg_4768),
    .weights_load_18493(weights_load_18493_reg_4773),
    .weights_load_18494(weights_load_18494_reg_4788),
    .weights_load_18495(weights_load_18495_reg_4793),
    .weights_load_18496(weights_load_18496_reg_4808),
    .weights_load_18497(weights_load_18497_reg_4813),
    .weights_load_18498(weights_load_18498_reg_4828),
    .temp_sum_4084(biases_load_10_reg_6628),
    .weights_load_18499(weights_load_18499_reg_4833),
    .weights_load_18500(weights_load_18500_reg_4848),
    .weights_load_18501(weights_load_18501_reg_4853),
    .weights_load_18502(weights_load_18502_reg_4868),
    .weights_load_18503(weights_load_18503_reg_4873),
    .weights_load_18504(weights_load_18504_reg_4888),
    .weights_load_18505(weights_load_18505_reg_4893),
    .weights_load_18506(weights_load_18506_reg_4908),
    .weights_load_18507(weights_load_18507_reg_4913),
    .temp_sum_4086(biases_load_11_reg_6633),
    .weights_load_18508(weights_load_18508_reg_4928),
    .weights_load_18509(weights_load_18509_reg_4933),
    .weights_load_18510(weights_load_18510_reg_4948),
    .weights_load_18511(weights_load_18511_reg_4953),
    .weights_load_18512(weights_load_18512_reg_4968),
    .weights_load_18513(weights_load_18513_reg_4973),
    .weights_load_18514(weights_load_18514_reg_4988),
    .weights_load_18515(weights_load_18515_reg_4993),
    .weights_load_18516(weights_load_18516_reg_5008),
    .temp_sum_4088(biases_load_12_reg_6668),
    .weights_load_18517(weights_load_18517_reg_5013),
    .weights_load_18518(weights_load_18518_reg_5028),
    .weights_load_18519(weights_load_18519_reg_5033),
    .weights_load_18520(weights_load_18520_reg_5048),
    .weights_load_18521(weights_load_18521_reg_5053),
    .weights_load_18522(weights_load_18522_reg_5068),
    .weights_load_18523(weights_load_18523_reg_5073),
    .weights_load_18524(weights_load_18524_reg_5088),
    .weights_load_18525(weights_load_18525_reg_5093),
    .temp_sum_4090(biases_load_13_reg_6673),
    .weights_load_18526(weights_load_18526_reg_5108),
    .weights_load_18527(weights_load_18527_reg_5113),
    .weights_load_18528(weights_load_18528_reg_5128),
    .weights_load_18529(weights_load_18529_reg_5133),
    .weights_load_18530(weights_load_18530_reg_5148),
    .weights_load_18531(weights_load_18531_reg_5153),
    .weights_load_18532(weights_load_18532_reg_5168),
    .weights_load_18533(weights_load_18533_reg_5173),
    .weights_load_18534(weights_load_18534_reg_5188),
    .temp_sum_4092(biases_load_14_reg_6708),
    .weights_load_18535(weights_load_18535_reg_5193),
    .weights_load_18536(weights_load_18536_reg_5208),
    .weights_load_18537(weights_load_18537_reg_5213),
    .weights_load_18538(weights_load_18538_reg_5228),
    .weights_load_18539(weights_load_18539_reg_5233),
    .weights_load_18540(weights_load_18540_reg_5248),
    .weights_load_18541(weights_load_18541_reg_5253),
    .weights_load_18542(weights_load_18542_reg_5268),
    .weights_load_18543(weights_load_18543_reg_5273),
    .temp_sum_4094(biases_load_15_reg_6713),
    .weights_load_18544(weights_load_18544_reg_5288),
    .weights_load_18545(weights_load_18545_reg_5293),
    .weights_load_18546(weights_load_18546_reg_5308),
    .weights_load_18547(weights_load_18547_reg_5313),
    .weights_load_18548(weights_load_18548_reg_5328),
    .weights_load_18549(weights_load_18549_reg_5333),
    .weights_load_18550(weights_load_18550_reg_5348),
    .weights_load_18551(weights_load_18551_reg_5353),
    .weights_load_18552(weights_load_18552_reg_5368),
    .temp_sum_4096(biases_load_16_reg_6748),
    .weights_load_18553(weights_load_18553_reg_5373),
    .weights_load_18554(weights_load_18554_reg_5388),
    .weights_load_18555(weights_load_18555_reg_5393),
    .weights_load_18556(weights_load_18556_reg_5408),
    .weights_load_18557(weights_load_18557_reg_5413),
    .weights_load_18558(weights_load_18558_reg_5428),
    .weights_load_18559(weights_load_18559_reg_5433),
    .weights_load_18560(weights_load_18560_reg_5448),
    .weights_load_18561(weights_load_18561_reg_5453),
    .temp_sum_4098(biases_load_17_reg_6753),
    .weights_load_18562(weights_load_18562_reg_5468),
    .weights_load_18563(weights_load_18563_reg_5473),
    .weights_load_18564(weights_load_18564_reg_5488),
    .weights_load_18565(weights_load_18565_reg_5493),
    .weights_load_18566(weights_load_18566_reg_5508),
    .weights_load_18567(weights_load_18567_reg_5513),
    .weights_load_18568(weights_load_18568_reg_5528),
    .weights_load_18569(weights_load_18569_reg_5533),
    .weights_load_18570(weights_load_18570_reg_5548),
    .temp_sum_4100(biases_load_18_reg_6788),
    .weights_load_18571(weights_load_18571_reg_5553),
    .weights_load_18572(weights_load_18572_reg_5568),
    .weights_load_18573(weights_load_18573_reg_5573),
    .weights_load_18574(weights_load_18574_reg_5588),
    .weights_load_18575(weights_load_18575_reg_5593),
    .weights_load_18576(weights_load_18576_reg_5608),
    .weights_load_18577(weights_load_18577_reg_5613),
    .weights_load_18578(weights_load_18578_reg_5628),
    .weights_load_18579(weights_load_18579_reg_5633),
    .temp_sum_4102(biases_load_19_reg_6793),
    .weights_load_18580(weights_load_18580_reg_5648),
    .weights_load_18581(weights_load_18581_reg_5653),
    .weights_load_18582(weights_load_18582_reg_5668),
    .weights_load_18583(weights_load_18583_reg_5673),
    .weights_load_18584(weights_load_18584_reg_5688),
    .weights_load_18585(weights_load_18585_reg_5693),
    .weights_load_18586(weights_load_18586_reg_5708),
    .weights_load_18587(weights_load_18587_reg_5713),
    .weights_load_18588(weights_load_18588_reg_5728),
    .temp_sum_4104(biases_load_20_reg_6828),
    .weights_load_18589(weights_load_18589_reg_5733),
    .weights_load_18590(weights_load_18590_reg_5748),
    .weights_load_18591(weights_load_18591_reg_5753),
    .weights_load_18592(weights_load_18592_reg_5768),
    .weights_load_18593(weights_load_18593_reg_5773),
    .weights_load_18594(weights_load_18594_reg_5788),
    .weights_load_18595(weights_load_18595_reg_5793),
    .weights_load_18596(weights_load_18596_reg_5808),
    .weights_load_18597(weights_load_18597_reg_5813),
    .temp_sum_4106(biases_load_21_reg_6833),
    .weights_load_18598(weights_load_18598_reg_5828),
    .weights_load_18599(weights_load_18599_reg_5833),
    .weights_load_18600(weights_load_18600_reg_5848),
    .weights_load_18601(weights_load_18601_reg_5853),
    .weights_load_18602(weights_load_18602_reg_5868),
    .weights_load_18603(weights_load_18603_reg_5873),
    .weights_load_18604(weights_load_18604_reg_5888),
    .weights_load_18605(weights_load_18605_reg_5893),
    .weights_load_18606(weights_load_18606_reg_5908),
    .temp_sum_4108(biases_load_22_reg_6868),
    .weights_load_18607(weights_load_18607_reg_5913),
    .weights_load_18608(weights_load_18608_reg_5928),
    .weights_load_18609(weights_load_18609_reg_5933),
    .weights_load_18610(weights_load_18610_reg_5948),
    .weights_load_18611(weights_load_18611_reg_5953),
    .weights_load_18612(weights_load_18612_reg_5968),
    .weights_load_18613(weights_load_18613_reg_5973),
    .weights_load_18614(weights_load_18614_reg_5988),
    .weights_load_18615(weights_load_18615_reg_5993),
    .temp_sum_4110(biases_load_23_reg_6873),
    .weights_load_18616(weights_load_18616_reg_6008),
    .weights_load_18617(weights_load_18617_reg_6013),
    .weights_load_18618(weights_load_18618_reg_6028),
    .weights_load_18619(weights_load_18619_reg_6033),
    .weights_load_18620(weights_load_18620_reg_6048),
    .weights_load_18621(weights_load_18621_reg_6053),
    .weights_load_18622(weights_load_18622_reg_6068),
    .weights_load_18623(weights_load_18623_reg_6073),
    .weights_load_18624(weights_load_18624_reg_6088),
    .temp_sum_4112(biases_load_24_reg_6908),
    .weights_load_18625(weights_load_18625_reg_6093),
    .weights_load_18626(weights_load_18626_reg_6108),
    .weights_load_18627(weights_load_18627_reg_6113),
    .weights_load_18628(weights_load_18628_reg_6128),
    .weights_load_18629(weights_load_18629_reg_6133),
    .weights_load_18630(weights_load_18630_reg_6148),
    .weights_load_18631(weights_load_18631_reg_6153),
    .weights_load_18632(weights_load_18632_reg_6168),
    .weights_load_18633(weights_load_18633_reg_6173),
    .temp_sum_4114(biases_load_25_reg_6913),
    .weights_load_18634(weights_load_18634_reg_6188),
    .weights_load_18635(weights_load_18635_reg_6193),
    .weights_load_18636(weights_load_18636_reg_6208),
    .weights_load_18637(weights_load_18637_reg_6213),
    .weights_load_18638(weights_load_18638_reg_6228),
    .weights_load_18639(weights_load_18639_reg_6233),
    .weights_load_18640(weights_load_18640_reg_6248),
    .weights_load_18641(weights_load_18641_reg_6253),
    .weights_load_18642(weights_load_18642_reg_6268),
    .temp_sum_4116(biases_load_26_reg_6948),
    .weights_load_18643(weights_load_18643_reg_6273),
    .weights_load_18644(weights_load_18644_reg_6288),
    .weights_load_18645(weights_load_18645_reg_6293),
    .weights_load_18646(weights_load_18646_reg_6308),
    .weights_load_18647(weights_load_18647_reg_6313),
    .weights_load_18648(weights_load_18648_reg_6328),
    .weights_load_18649(weights_load_18649_reg_6333),
    .weights_load_18650(weights_load_18650_reg_6348),
    .weights_load_18651(weights_load_18651_reg_6353),
    .temp_sum_4118(biases_load_27_reg_6953),
    .weights_load_18652(weights_load_18652_reg_6368),
    .weights_load_18653(weights_load_18653_reg_6373),
    .weights_load_18654(weights_load_18654_reg_6398),
    .weights_load_18655(weights_load_18655_reg_6403),
    .weights_load_18656(weights_load_18656_reg_6438),
    .weights_load_18657(weights_load_18657_reg_6443),
    .weights_load_18658(weights_load_18658_reg_6478),
    .weights_load_18659(weights_load_18659_reg_6483),
    .weights_load_18660(weights_load_18660_reg_6518),
    .temp_sum_4120(biases_load_28_reg_6988),
    .weights_load_18661(weights_load_18661_reg_6523),
    .weights_load_18662(weights_load_18662_reg_6558),
    .weights_load_18663(weights_load_18663_reg_6563),
    .weights_load_18664(weights_load_18664_reg_6598),
    .weights_load_18665(weights_load_18665_reg_6603),
    .weights_load_18666(weights_load_18666_reg_6638),
    .weights_load_18667(weights_load_18667_reg_6643),
    .weights_load_18668(weights_load_18668_reg_6678),
    .weights_load_18669(weights_load_18669_reg_6683),
    .temp_sum_4122(biases_load_29_reg_6993),
    .weights_load_18670(weights_load_18670_reg_6718),
    .weights_load_18671(weights_load_18671_reg_6723),
    .weights_load_18672(weights_load_18672_reg_6758),
    .weights_load_18673(weights_load_18673_reg_6763),
    .weights_load_18674(weights_load_18674_reg_6798),
    .weights_load_18675(weights_load_18675_reg_6803),
    .weights_load_18676(weights_load_18676_reg_6838),
    .weights_load_18677(weights_load_18677_reg_6843),
    .weights_load_18678(weights_load_18678_reg_6878),
    .temp_sum_4124(biases_load_30_reg_7008),
    .weights_load_18679(weights_load_18679_reg_6883),
    .weights_load_18680(weights_load_18680_reg_6918),
    .weights_load_18681(weights_load_18681_reg_6923),
    .weights_load_18682(weights_load_18682_reg_6958),
    .weights_load_18683(weights_load_18683_reg_6963),
    .weights_load_18684(weights_load_18684_reg_6998),
    .weights_load_18685(weights_load_18685_reg_7003),
    .weights_load_18686(weights_load_18686_reg_7018),
    .weights_load_18687(weights_load_18687_reg_7023),
    .temp_sum_4126(biases_load_31_reg_7013)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state146) & (grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state145)) begin
            grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_ready == 1'b1)) begin
            grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        biases_load_10_reg_6628 <= biases_q1;
        biases_load_11_reg_6633 <= biases_q0;
        weights_load_18666_reg_6638 <= weights_q1;
        weights_load_18667_reg_6643 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        biases_load_12_reg_6668 <= biases_q1;
        biases_load_13_reg_6673 <= biases_q0;
        weights_load_18668_reg_6678 <= weights_q1;
        weights_load_18669_reg_6683 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        biases_load_14_reg_6708 <= biases_q1;
        biases_load_15_reg_6713 <= biases_q0;
        weights_load_18670_reg_6718 <= weights_q1;
        weights_load_18671_reg_6723 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        biases_load_16_reg_6748 <= biases_q1;
        biases_load_17_reg_6753 <= biases_q0;
        weights_load_18672_reg_6758 <= weights_q1;
        weights_load_18673_reg_6763 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        biases_load_18_reg_6788 <= biases_q1;
        biases_load_19_reg_6793 <= biases_q0;
        weights_load_18674_reg_6798 <= weights_q1;
        weights_load_18675_reg_6803 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        biases_load_1_reg_6433 <= biases_q0;
        biases_load_reg_6428 <= biases_q1;
        weights_load_18656_reg_6438 <= weights_q1;
        weights_load_18657_reg_6443 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        biases_load_20_reg_6828 <= biases_q1;
        biases_load_21_reg_6833 <= biases_q0;
        weights_load_18676_reg_6838 <= weights_q1;
        weights_load_18677_reg_6843 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        biases_load_22_reg_6868 <= biases_q1;
        biases_load_23_reg_6873 <= biases_q0;
        weights_load_18678_reg_6878 <= weights_q1;
        weights_load_18679_reg_6883 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        biases_load_24_reg_6908 <= biases_q1;
        biases_load_25_reg_6913 <= biases_q0;
        weights_load_18680_reg_6918 <= weights_q1;
        weights_load_18681_reg_6923 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        biases_load_26_reg_6948 <= biases_q1;
        biases_load_27_reg_6953 <= biases_q0;
        weights_load_18682_reg_6958 <= weights_q1;
        weights_load_18683_reg_6963 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        biases_load_28_reg_6988 <= biases_q1;
        biases_load_29_reg_6993 <= biases_q0;
        weights_load_18684_reg_6998 <= weights_q1;
        weights_load_18685_reg_7003 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        biases_load_2_reg_6468 <= biases_q1;
        biases_load_3_reg_6473 <= biases_q0;
        weights_load_18658_reg_6478 <= weights_q1;
        weights_load_18659_reg_6483 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        biases_load_30_reg_7008 <= biases_q1;
        biases_load_31_reg_7013 <= biases_q0;
        weights_load_18686_reg_7018 <= weights_q1;
        weights_load_18687_reg_7023 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        biases_load_4_reg_6508 <= biases_q1;
        biases_load_5_reg_6513 <= biases_q0;
        weights_load_18660_reg_6518 <= weights_q1;
        weights_load_18661_reg_6523 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        biases_load_6_reg_6548 <= biases_q1;
        biases_load_7_reg_6553 <= biases_q0;
        weights_load_18662_reg_6558 <= weights_q1;
        weights_load_18663_reg_6563 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        biases_load_8_reg_6588 <= biases_q1;
        biases_load_9_reg_6593 <= biases_q0;
        weights_load_18664_reg_6598 <= weights_q1;
        weights_load_18665_reg_6603 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_load_18401_reg_3853 <= weights_q0;
        weights_load_reg_3848 <= weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_load_18402_reg_3868 <= weights_q1;
        weights_load_18403_reg_3873 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_load_18404_reg_3888 <= weights_q1;
        weights_load_18405_reg_3893 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_load_18406_reg_3908 <= weights_q1;
        weights_load_18407_reg_3913 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_load_18408_reg_3928 <= weights_q1;
        weights_load_18409_reg_3933 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_load_18410_reg_3948 <= weights_q1;
        weights_load_18411_reg_3953 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_load_18412_reg_3968 <= weights_q1;
        weights_load_18413_reg_3973 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_load_18414_reg_3988 <= weights_q1;
        weights_load_18415_reg_3993 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_load_18416_reg_4008 <= weights_q1;
        weights_load_18417_reg_4013 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weights_load_18418_reg_4028 <= weights_q1;
        weights_load_18419_reg_4033 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_load_18420_reg_4048 <= weights_q1;
        weights_load_18421_reg_4053 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weights_load_18422_reg_4068 <= weights_q1;
        weights_load_18423_reg_4073 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weights_load_18424_reg_4088 <= weights_q1;
        weights_load_18425_reg_4093 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weights_load_18426_reg_4108 <= weights_q1;
        weights_load_18427_reg_4113 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weights_load_18428_reg_4128 <= weights_q1;
        weights_load_18429_reg_4133 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weights_load_18430_reg_4148 <= weights_q1;
        weights_load_18431_reg_4153 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weights_load_18432_reg_4168 <= weights_q1;
        weights_load_18433_reg_4173 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_load_18434_reg_4188 <= weights_q1;
        weights_load_18435_reg_4193 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        weights_load_18436_reg_4208 <= weights_q1;
        weights_load_18437_reg_4213 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weights_load_18438_reg_4228 <= weights_q1;
        weights_load_18439_reg_4233 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weights_load_18440_reg_4248 <= weights_q1;
        weights_load_18441_reg_4253 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        weights_load_18442_reg_4268 <= weights_q1;
        weights_load_18443_reg_4273 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        weights_load_18444_reg_4288 <= weights_q1;
        weights_load_18445_reg_4293 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        weights_load_18446_reg_4308 <= weights_q1;
        weights_load_18447_reg_4313 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        weights_load_18448_reg_4328 <= weights_q1;
        weights_load_18449_reg_4333 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        weights_load_18450_reg_4348 <= weights_q1;
        weights_load_18451_reg_4353 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weights_load_18452_reg_4368 <= weights_q1;
        weights_load_18453_reg_4373 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weights_load_18454_reg_4388 <= weights_q1;
        weights_load_18455_reg_4393 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weights_load_18456_reg_4408 <= weights_q1;
        weights_load_18457_reg_4413 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weights_load_18458_reg_4428 <= weights_q1;
        weights_load_18459_reg_4433 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        weights_load_18460_reg_4448 <= weights_q1;
        weights_load_18461_reg_4453 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        weights_load_18462_reg_4468 <= weights_q1;
        weights_load_18463_reg_4473 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        weights_load_18464_reg_4488 <= weights_q1;
        weights_load_18465_reg_4493 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        weights_load_18466_reg_4508 <= weights_q1;
        weights_load_18467_reg_4513 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        weights_load_18468_reg_4528 <= weights_q1;
        weights_load_18469_reg_4533 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weights_load_18470_reg_4548 <= weights_q1;
        weights_load_18471_reg_4553 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        weights_load_18472_reg_4568 <= weights_q1;
        weights_load_18473_reg_4573 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weights_load_18474_reg_4588 <= weights_q1;
        weights_load_18475_reg_4593 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        weights_load_18476_reg_4608 <= weights_q1;
        weights_load_18477_reg_4613 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weights_load_18478_reg_4628 <= weights_q1;
        weights_load_18479_reg_4633 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weights_load_18480_reg_4648 <= weights_q1;
        weights_load_18481_reg_4653 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        weights_load_18482_reg_4668 <= weights_q1;
        weights_load_18483_reg_4673 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        weights_load_18484_reg_4688 <= weights_q1;
        weights_load_18485_reg_4693 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        weights_load_18486_reg_4708 <= weights_q1;
        weights_load_18487_reg_4713 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weights_load_18488_reg_4728 <= weights_q1;
        weights_load_18489_reg_4733 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        weights_load_18490_reg_4748 <= weights_q1;
        weights_load_18491_reg_4753 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        weights_load_18492_reg_4768 <= weights_q1;
        weights_load_18493_reg_4773 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weights_load_18494_reg_4788 <= weights_q1;
        weights_load_18495_reg_4793 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        weights_load_18496_reg_4808 <= weights_q1;
        weights_load_18497_reg_4813 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        weights_load_18498_reg_4828 <= weights_q1;
        weights_load_18499_reg_4833 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        weights_load_18500_reg_4848 <= weights_q1;
        weights_load_18501_reg_4853 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weights_load_18502_reg_4868 <= weights_q1;
        weights_load_18503_reg_4873 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weights_load_18504_reg_4888 <= weights_q1;
        weights_load_18505_reg_4893 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        weights_load_18506_reg_4908 <= weights_q1;
        weights_load_18507_reg_4913 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        weights_load_18508_reg_4928 <= weights_q1;
        weights_load_18509_reg_4933 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        weights_load_18510_reg_4948 <= weights_q1;
        weights_load_18511_reg_4953 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        weights_load_18512_reg_4968 <= weights_q1;
        weights_load_18513_reg_4973 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        weights_load_18514_reg_4988 <= weights_q1;
        weights_load_18515_reg_4993 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        weights_load_18516_reg_5008 <= weights_q1;
        weights_load_18517_reg_5013 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        weights_load_18518_reg_5028 <= weights_q1;
        weights_load_18519_reg_5033 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        weights_load_18520_reg_5048 <= weights_q1;
        weights_load_18521_reg_5053 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        weights_load_18522_reg_5068 <= weights_q1;
        weights_load_18523_reg_5073 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        weights_load_18524_reg_5088 <= weights_q1;
        weights_load_18525_reg_5093 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        weights_load_18526_reg_5108 <= weights_q1;
        weights_load_18527_reg_5113 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        weights_load_18528_reg_5128 <= weights_q1;
        weights_load_18529_reg_5133 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        weights_load_18530_reg_5148 <= weights_q1;
        weights_load_18531_reg_5153 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        weights_load_18532_reg_5168 <= weights_q1;
        weights_load_18533_reg_5173 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        weights_load_18534_reg_5188 <= weights_q1;
        weights_load_18535_reg_5193 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        weights_load_18536_reg_5208 <= weights_q1;
        weights_load_18537_reg_5213 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        weights_load_18538_reg_5228 <= weights_q1;
        weights_load_18539_reg_5233 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        weights_load_18540_reg_5248 <= weights_q1;
        weights_load_18541_reg_5253 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        weights_load_18542_reg_5268 <= weights_q1;
        weights_load_18543_reg_5273 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        weights_load_18544_reg_5288 <= weights_q1;
        weights_load_18545_reg_5293 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        weights_load_18546_reg_5308 <= weights_q1;
        weights_load_18547_reg_5313 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        weights_load_18548_reg_5328 <= weights_q1;
        weights_load_18549_reg_5333 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        weights_load_18550_reg_5348 <= weights_q1;
        weights_load_18551_reg_5353 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        weights_load_18552_reg_5368 <= weights_q1;
        weights_load_18553_reg_5373 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        weights_load_18554_reg_5388 <= weights_q1;
        weights_load_18555_reg_5393 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        weights_load_18556_reg_5408 <= weights_q1;
        weights_load_18557_reg_5413 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        weights_load_18558_reg_5428 <= weights_q1;
        weights_load_18559_reg_5433 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        weights_load_18560_reg_5448 <= weights_q1;
        weights_load_18561_reg_5453 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        weights_load_18562_reg_5468 <= weights_q1;
        weights_load_18563_reg_5473 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        weights_load_18564_reg_5488 <= weights_q1;
        weights_load_18565_reg_5493 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        weights_load_18566_reg_5508 <= weights_q1;
        weights_load_18567_reg_5513 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        weights_load_18568_reg_5528 <= weights_q1;
        weights_load_18569_reg_5533 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        weights_load_18570_reg_5548 <= weights_q1;
        weights_load_18571_reg_5553 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weights_load_18572_reg_5568 <= weights_q1;
        weights_load_18573_reg_5573 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        weights_load_18574_reg_5588 <= weights_q1;
        weights_load_18575_reg_5593 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        weights_load_18576_reg_5608 <= weights_q1;
        weights_load_18577_reg_5613 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        weights_load_18578_reg_5628 <= weights_q1;
        weights_load_18579_reg_5633 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        weights_load_18580_reg_5648 <= weights_q1;
        weights_load_18581_reg_5653 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        weights_load_18582_reg_5668 <= weights_q1;
        weights_load_18583_reg_5673 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        weights_load_18584_reg_5688 <= weights_q1;
        weights_load_18585_reg_5693 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        weights_load_18586_reg_5708 <= weights_q1;
        weights_load_18587_reg_5713 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        weights_load_18588_reg_5728 <= weights_q1;
        weights_load_18589_reg_5733 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        weights_load_18590_reg_5748 <= weights_q1;
        weights_load_18591_reg_5753 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        weights_load_18592_reg_5768 <= weights_q1;
        weights_load_18593_reg_5773 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        weights_load_18594_reg_5788 <= weights_q1;
        weights_load_18595_reg_5793 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        weights_load_18596_reg_5808 <= weights_q1;
        weights_load_18597_reg_5813 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        weights_load_18598_reg_5828 <= weights_q1;
        weights_load_18599_reg_5833 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        weights_load_18600_reg_5848 <= weights_q1;
        weights_load_18601_reg_5853 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        weights_load_18602_reg_5868 <= weights_q1;
        weights_load_18603_reg_5873 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        weights_load_18604_reg_5888 <= weights_q1;
        weights_load_18605_reg_5893 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        weights_load_18606_reg_5908 <= weights_q1;
        weights_load_18607_reg_5913 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        weights_load_18608_reg_5928 <= weights_q1;
        weights_load_18609_reg_5933 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        weights_load_18610_reg_5948 <= weights_q1;
        weights_load_18611_reg_5953 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        weights_load_18612_reg_5968 <= weights_q1;
        weights_load_18613_reg_5973 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        weights_load_18614_reg_5988 <= weights_q1;
        weights_load_18615_reg_5993 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        weights_load_18616_reg_6008 <= weights_q1;
        weights_load_18617_reg_6013 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        weights_load_18618_reg_6028 <= weights_q1;
        weights_load_18619_reg_6033 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        weights_load_18620_reg_6048 <= weights_q1;
        weights_load_18621_reg_6053 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weights_load_18622_reg_6068 <= weights_q1;
        weights_load_18623_reg_6073 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        weights_load_18624_reg_6088 <= weights_q1;
        weights_load_18625_reg_6093 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        weights_load_18626_reg_6108 <= weights_q1;
        weights_load_18627_reg_6113 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        weights_load_18628_reg_6128 <= weights_q1;
        weights_load_18629_reg_6133 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        weights_load_18630_reg_6148 <= weights_q1;
        weights_load_18631_reg_6153 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        weights_load_18632_reg_6168 <= weights_q1;
        weights_load_18633_reg_6173 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        weights_load_18634_reg_6188 <= weights_q1;
        weights_load_18635_reg_6193 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        weights_load_18636_reg_6208 <= weights_q1;
        weights_load_18637_reg_6213 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        weights_load_18638_reg_6228 <= weights_q1;
        weights_load_18639_reg_6233 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        weights_load_18640_reg_6248 <= weights_q1;
        weights_load_18641_reg_6253 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        weights_load_18642_reg_6268 <= weights_q1;
        weights_load_18643_reg_6273 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        weights_load_18644_reg_6288 <= weights_q1;
        weights_load_18645_reg_6293 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        weights_load_18646_reg_6308 <= weights_q1;
        weights_load_18647_reg_6313 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        weights_load_18648_reg_6328 <= weights_q1;
        weights_load_18649_reg_6333 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        weights_load_18650_reg_6348 <= weights_q1;
        weights_load_18651_reg_6353 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        weights_load_18652_reg_6368 <= weights_q1;
        weights_load_18653_reg_6373 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        weights_load_18654_reg_6398 <= weights_q1;
        weights_load_18655_reg_6403 <= weights_q0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

always @ (*) begin
    if ((grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done == 1'b0)) begin
        ap_ST_fsm_state146_blk = 1'b1;
    end else begin
        ap_ST_fsm_state146_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) & (grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        biases_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        biases_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        biases_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        biases_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        biases_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        biases_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        biases_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        biases_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        biases_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        biases_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        biases_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        biases_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        biases_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        biases_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        biases_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        biases_address0 = 64'd1;
    end else begin
        biases_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        biases_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        biases_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        biases_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        biases_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        biases_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        biases_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        biases_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        biases_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        biases_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        biases_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        biases_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        biases_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        biases_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        biases_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        biases_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        biases_address1 = 64'd0;
    end else begin
        biases_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state129))) begin
        biases_ce0 = 1'b1;
    end else begin
        biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state129))) begin
        biases_ce1 = 1'b1;
    end else begin
        biases_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        conv2d_32_padded_window_stream_read = grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_conv2d_32_padded_window_stream_read;
    end else begin
        conv2d_32_padded_window_stream_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) & (grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done == 1'b1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        kernel_sums136_write = grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_write;
    end else begin
        kernel_sums136_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        weights_address0 = 64'd287;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        weights_address0 = 64'd223;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        weights_address0 = 64'd159;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        weights_address0 = 64'd95;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        weights_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        weights_address0 = 64'd254;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weights_address0 = 64'd190;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        weights_address0 = 64'd126;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        weights_address0 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        weights_address0 = 64'd285;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        weights_address0 = 64'd221;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        weights_address0 = 64'd157;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        weights_address0 = 64'd93;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        weights_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        weights_address0 = 64'd252;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        weights_address0 = 64'd188;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        weights_address0 = 64'd124;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        weights_address0 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        weights_address0 = 64'd283;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        weights_address0 = 64'd219;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        weights_address0 = 64'd155;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        weights_address0 = 64'd91;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        weights_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        weights_address0 = 64'd250;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        weights_address0 = 64'd186;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        weights_address0 = 64'd122;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        weights_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        weights_address0 = 64'd281;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        weights_address0 = 64'd217;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        weights_address0 = 64'd153;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        weights_address0 = 64'd89;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        weights_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        weights_address0 = 64'd248;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        weights_address0 = 64'd184;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        weights_address0 = 64'd120;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        weights_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        weights_address0 = 64'd279;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        weights_address0 = 64'd215;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        weights_address0 = 64'd151;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        weights_address0 = 64'd87;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        weights_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        weights_address0 = 64'd246;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        weights_address0 = 64'd182;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        weights_address0 = 64'd118;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        weights_address0 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        weights_address0 = 64'd277;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        weights_address0 = 64'd213;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        weights_address0 = 64'd149;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        weights_address0 = 64'd85;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        weights_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        weights_address0 = 64'd244;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        weights_address0 = 64'd180;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        weights_address0 = 64'd116;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        weights_address0 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        weights_address0 = 64'd275;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        weights_address0 = 64'd211;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        weights_address0 = 64'd147;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        weights_address0 = 64'd83;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        weights_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        weights_address0 = 64'd242;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        weights_address0 = 64'd178;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        weights_address0 = 64'd114;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        weights_address0 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        weights_address0 = 64'd273;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        weights_address0 = 64'd209;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        weights_address0 = 64'd145;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        weights_address0 = 64'd81;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        weights_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        weights_address0 = 64'd240;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        weights_address0 = 64'd176;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        weights_address0 = 64'd112;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        weights_address0 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        weights_address0 = 64'd271;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        weights_address0 = 64'd207;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        weights_address0 = 64'd143;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        weights_address0 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        weights_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        weights_address0 = 64'd238;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        weights_address0 = 64'd174;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        weights_address0 = 64'd110;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        weights_address0 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        weights_address0 = 64'd269;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        weights_address0 = 64'd205;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        weights_address0 = 64'd141;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        weights_address0 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weights_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        weights_address0 = 64'd236;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        weights_address0 = 64'd172;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        weights_address0 = 64'd108;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        weights_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        weights_address0 = 64'd267;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        weights_address0 = 64'd203;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        weights_address0 = 64'd139;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        weights_address0 = 64'd75;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        weights_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        weights_address0 = 64'd234;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weights_address0 = 64'd170;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weights_address0 = 64'd106;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weights_address0 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weights_address0 = 64'd265;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weights_address0 = 64'd201;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weights_address0 = 64'd137;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weights_address0 = 64'd73;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weights_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weights_address0 = 64'd232;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weights_address0 = 64'd168;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weights_address0 = 64'd104;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weights_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weights_address0 = 64'd263;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weights_address0 = 64'd199;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weights_address0 = 64'd135;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weights_address0 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weights_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weights_address0 = 64'd230;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        weights_address0 = 64'd166;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weights_address0 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        weights_address0 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        weights_address0 = 64'd261;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        weights_address0 = 64'd197;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        weights_address0 = 64'd133;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        weights_address0 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        weights_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        weights_address0 = 64'd228;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        weights_address0 = 64'd164;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weights_address0 = 64'd100;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weights_address0 = 64'd259;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weights_address0 = 64'd195;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weights_address0 = 64'd131;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weights_address0 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weights_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weights_address0 = 64'd226;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_address0 = 64'd162;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weights_address0 = 64'd98;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_address0 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_address0 = 64'd257;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_address0 = 64'd193;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_address0 = 64'd129;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_address0 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_address0 = 64'd224;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_address0 = 64'd160;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_address0 = 64'd96;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weights_address0 = 64'd32;
    end else begin
        weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        weights_address1 = 64'd255;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        weights_address1 = 64'd191;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        weights_address1 = 64'd127;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        weights_address1 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        weights_address1 = 64'd286;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        weights_address1 = 64'd222;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weights_address1 = 64'd158;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        weights_address1 = 64'd94;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        weights_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        weights_address1 = 64'd253;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        weights_address1 = 64'd189;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        weights_address1 = 64'd125;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        weights_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        weights_address1 = 64'd284;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        weights_address1 = 64'd220;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        weights_address1 = 64'd156;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        weights_address1 = 64'd92;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        weights_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        weights_address1 = 64'd251;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        weights_address1 = 64'd187;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        weights_address1 = 64'd123;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        weights_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        weights_address1 = 64'd282;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        weights_address1 = 64'd218;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        weights_address1 = 64'd154;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        weights_address1 = 64'd90;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        weights_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        weights_address1 = 64'd249;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        weights_address1 = 64'd185;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        weights_address1 = 64'd121;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        weights_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        weights_address1 = 64'd280;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        weights_address1 = 64'd216;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        weights_address1 = 64'd152;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        weights_address1 = 64'd88;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        weights_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        weights_address1 = 64'd247;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        weights_address1 = 64'd183;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        weights_address1 = 64'd119;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        weights_address1 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        weights_address1 = 64'd278;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        weights_address1 = 64'd214;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        weights_address1 = 64'd150;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        weights_address1 = 64'd86;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        weights_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        weights_address1 = 64'd245;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        weights_address1 = 64'd181;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        weights_address1 = 64'd117;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        weights_address1 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        weights_address1 = 64'd276;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        weights_address1 = 64'd212;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        weights_address1 = 64'd148;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        weights_address1 = 64'd84;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        weights_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        weights_address1 = 64'd243;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        weights_address1 = 64'd179;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        weights_address1 = 64'd115;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        weights_address1 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        weights_address1 = 64'd274;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        weights_address1 = 64'd210;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        weights_address1 = 64'd146;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        weights_address1 = 64'd82;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        weights_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        weights_address1 = 64'd241;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        weights_address1 = 64'd177;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        weights_address1 = 64'd113;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        weights_address1 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        weights_address1 = 64'd272;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        weights_address1 = 64'd208;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        weights_address1 = 64'd144;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        weights_address1 = 64'd80;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        weights_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        weights_address1 = 64'd239;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        weights_address1 = 64'd175;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        weights_address1 = 64'd111;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        weights_address1 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        weights_address1 = 64'd270;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        weights_address1 = 64'd206;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        weights_address1 = 64'd142;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        weights_address1 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        weights_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        weights_address1 = 64'd237;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        weights_address1 = 64'd173;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        weights_address1 = 64'd109;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        weights_address1 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weights_address1 = 64'd268;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        weights_address1 = 64'd204;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        weights_address1 = 64'd140;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        weights_address1 = 64'd76;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        weights_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        weights_address1 = 64'd235;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        weights_address1 = 64'd171;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        weights_address1 = 64'd107;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        weights_address1 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        weights_address1 = 64'd266;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        weights_address1 = 64'd202;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weights_address1 = 64'd138;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weights_address1 = 64'd74;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weights_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weights_address1 = 64'd233;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weights_address1 = 64'd169;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weights_address1 = 64'd105;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weights_address1 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weights_address1 = 64'd264;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weights_address1 = 64'd200;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weights_address1 = 64'd136;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weights_address1 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weights_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weights_address1 = 64'd231;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weights_address1 = 64'd167;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weights_address1 = 64'd103;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weights_address1 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weights_address1 = 64'd262;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weights_address1 = 64'd198;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        weights_address1 = 64'd134;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weights_address1 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        weights_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        weights_address1 = 64'd229;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        weights_address1 = 64'd165;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        weights_address1 = 64'd101;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        weights_address1 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        weights_address1 = 64'd260;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        weights_address1 = 64'd196;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        weights_address1 = 64'd132;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weights_address1 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weights_address1 = 64'd227;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weights_address1 = 64'd163;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weights_address1 = 64'd99;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weights_address1 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weights_address1 = 64'd258;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weights_address1 = 64'd194;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_address1 = 64'd130;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weights_address1 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_address1 = 64'd225;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_address1 = 64'd161;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_address1 = 64'd97;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_address1 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_address1 = 64'd256;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_address1 = 64'd192;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_address1 = 64'd128;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_address1 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weights_address1 = 64'd0;
    end else begin
        weights_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        weights_ce0 = 1'b1;
    end else begin
        weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        weights_ce1 = 1'b1;
    end else begin
        weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            if (((1'b1 == ap_CS_fsm_state146) & (grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state146;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start = grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_ap_start_reg;

assign kernel_sums136_din = grp_conv2d_sum_1c_float_28u_28u_3u_3u_32u_Pipeline_inputs_fu_3496_kernel_sums136_din;

assign start_out = real_start;

endmodule //accel_conv2d_sum_1c_float_28u_28u_3u_3u_32u_s
