

================================================================
== Vitis HLS Report for 'softmax_10u_128u_Pipeline_VITIS_LOOP_463_1'
================================================================
* Date:           Tue Oct 18 21:15:22 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        forward_prop
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcvu5p-flva2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.269 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       12|  0.120 us|  0.120 us|   12|   12|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_463_1  |       10|       10|         2|          1|          1|    10|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.26>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%kernel = alloca i32 1"   --->   Operation 5 'alloca' 'kernel' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%sum = alloca i32 1"   --->   Operation 6 'alloca' 'sum' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%sum_1 = alloca i32 1"   --->   Operation 7 'alloca' 'sum_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%sum_2 = alloca i32 1"   --->   Operation 8 'alloca' 'sum_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%sum_3 = alloca i32 1"   --->   Operation 9 'alloca' 'sum_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sum_4 = alloca i32 1"   --->   Operation 10 'alloca' 'sum_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sum_5 = alloca i32 1"   --->   Operation 11 'alloca' 'sum_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sum_6 = alloca i32 1"   --->   Operation 12 'alloca' 'sum_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sum_7 = alloca i32 1"   --->   Operation 13 'alloca' 'sum_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sum_8 = alloca i32 1"   --->   Operation 14 'alloca' 'sum_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sum_9 = alloca i32 1"   --->   Operation 15 'alloca' 'sum_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.46ns)   --->   "%store_ln0 = store i4 0, i4 %kernel"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%kernel_2 = load i4 %kernel" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 18 'load' 'kernel_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 19 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.72ns)   --->   "%icmp_ln463 = icmp_eq  i4 %kernel_2, i4 10" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 20 'icmp' 'icmp_ln463' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.80ns)   --->   "%add_ln463 = add i4 %kernel_2, i4 1" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 22 'add' 'add_ln463' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln463 = br i1 %icmp_ln463, void %for.inc.split, void %for.body12.preheader.exitStub" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 23 'br' 'br_ln463' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln464_cast = zext i4 %kernel_2" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 24 'zext' 'trunc_ln464_cast' <Predicate = (!icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%biases_addr = getelementptr i32 %biases, i64 0, i64 %trunc_ln464_cast" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 25 'getelementptr' 'biases_addr' <Predicate = (!icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 26 [2/2] (0.73ns)   --->   "%sum_10 = load i4 %biases_addr" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 26 'load' 'sum_10' <Predicate = (!icmp_ln463)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 27 [1/1] (0.39ns)   --->   "%switch_ln464 = switch i4 %kernel_2, void %arrayidx2.case.9, i4 0, void %for.inc.split.arrayidx2.exit_crit_edge, i4 1, void %for.inc.split.arrayidx2.exit_crit_edge1, i4 2, void %arrayidx2.case.2, i4 3, void %arrayidx2.case.3, i4 4, void %arrayidx2.case.4, i4 5, void %arrayidx2.case.5, i4 6, void %arrayidx2.case.6, i4 7, void %arrayidx2.case.7, i4 8, void %arrayidx2.case.8" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 27 'switch' 'switch_ln464' <Predicate = (!icmp_ln463)> <Delay = 0.39>
ST_1 : Operation 28 [1/1] (0.46ns)   --->   "%store_ln463 = store i4 %add_ln463, i4 %kernel" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 28 'store' 'store_ln463' <Predicate = (!icmp_ln463)> <Delay = 0.46>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln463 = br void %for.inc" [forward_prop/src/forward_prop.cpp:463]   --->   Operation 29 'br' 'br_ln463' <Predicate = (!icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%sum_load = load i32 %sum"   --->   Operation 52 'load' 'sum_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%sum_1_load = load i32 %sum_1"   --->   Operation 53 'load' 'sum_1_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%sum_2_load = load i32 %sum_2"   --->   Operation 54 'load' 'sum_2_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%sum_3_load = load i32 %sum_3"   --->   Operation 55 'load' 'sum_3_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%sum_4_load = load i32 %sum_4"   --->   Operation 56 'load' 'sum_4_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%sum_5_load = load i32 %sum_5"   --->   Operation 57 'load' 'sum_5_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%sum_6_load = load i32 %sum_6"   --->   Operation 58 'load' 'sum_6_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%sum_7_load = load i32 %sum_7"   --->   Operation 59 'load' 'sum_7_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%sum_8_load = load i32 %sum_8"   --->   Operation 60 'load' 'sum_8_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%sum_9_load = load i32 %sum_9"   --->   Operation 61 'load' 'sum_9_load' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_9_out, i32 %sum_9_load"   --->   Operation 62 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_8_out, i32 %sum_8_load"   --->   Operation 63 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_7_out, i32 %sum_7_load"   --->   Operation 64 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_6_out, i32 %sum_6_load"   --->   Operation 65 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_5_out, i32 %sum_5_load"   --->   Operation 66 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_4_out, i32 %sum_4_load"   --->   Operation 67 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_3_out, i32 %sum_3_load"   --->   Operation 68 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_2_out, i32 %sum_2_load"   --->   Operation 69 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_1_out, i32 %sum_1_load"   --->   Operation 70 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_out, i32 %sum_load"   --->   Operation 71 'write' 'write_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 72 'ret' 'ret_ln0' <Predicate = (icmp_ln463)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.73>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln460 = specloopname void @_ssdm_op_SpecLoopName, void @empty_41" [forward_prop/src/forward_prop.cpp:460]   --->   Operation 30 'specloopname' 'specloopname_ln460' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/2] (0.73ns)   --->   "%sum_10 = load i4 %biases_addr" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 31 'load' 'sum_10' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_8" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 32 'store' 'store_ln464' <Predicate = (kernel_2 == 8)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 33 'br' 'br_ln464' <Predicate = (kernel_2 == 8)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_7" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 34 'store' 'store_ln464' <Predicate = (kernel_2 == 7)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 35 'br' 'br_ln464' <Predicate = (kernel_2 == 7)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_6" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 36 'store' 'store_ln464' <Predicate = (kernel_2 == 6)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 37 'br' 'br_ln464' <Predicate = (kernel_2 == 6)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_5" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 38 'store' 'store_ln464' <Predicate = (kernel_2 == 5)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 39 'br' 'br_ln464' <Predicate = (kernel_2 == 5)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_4" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 40 'store' 'store_ln464' <Predicate = (kernel_2 == 4)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 41 'br' 'br_ln464' <Predicate = (kernel_2 == 4)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_3" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 42 'store' 'store_ln464' <Predicate = (kernel_2 == 3)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 43 'br' 'br_ln464' <Predicate = (kernel_2 == 3)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_2" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 44 'store' 'store_ln464' <Predicate = (kernel_2 == 2)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 45 'br' 'br_ln464' <Predicate = (kernel_2 == 2)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_1" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 46 'store' 'store_ln464' <Predicate = (kernel_2 == 1)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 47 'br' 'br_ln464' <Predicate = (kernel_2 == 1)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 48 'store' 'store_ln464' <Predicate = (kernel_2 == 0)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 49 'br' 'br_ln464' <Predicate = (kernel_2 == 0)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln464 = store i32 %sum_10, i32 %sum_9" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 50 'store' 'store_ln464' <Predicate = (kernel_2 == 15) | (kernel_2 == 14) | (kernel_2 == 13) | (kernel_2 == 12) | (kernel_2 == 11) | (kernel_2 == 10) | (kernel_2 == 9)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln464 = br void %arrayidx2.exit" [forward_prop/src/forward_prop.cpp:464]   --->   Operation 51 'br' 'br_ln464' <Predicate = (kernel_2 == 15) | (kernel_2 == 14) | (kernel_2 == 13) | (kernel_2 == 12) | (kernel_2 == 11) | (kernel_2 == 10) | (kernel_2 == 9)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.27ns
The critical path consists of the following:
	'alloca' operation ('kernel') [12]  (0 ns)
	'load' operation ('kernel', forward_prop/src/forward_prop.cpp:463) on local variable 'kernel' [26]  (0 ns)
	'add' operation ('add_ln463', forward_prop/src/forward_prop.cpp:463) [30]  (0.809 ns)
	'store' operation ('store_ln463', forward_prop/src/forward_prop.cpp:463) of variable 'add_ln463', forward_prop/src/forward_prop.cpp:463 on local variable 'kernel' [69]  (0.46 ns)

 <State 2>: 0.73ns
The critical path consists of the following:
	'load' operation ('sum', forward_prop/src/forward_prop.cpp:464) on array 'biases' [36]  (0.73 ns)
	'store' operation ('store_ln464', forward_prop/src/forward_prop.cpp:464) of variable 'sum', forward_prop/src/forward_prop.cpp:464 on local variable 'sum' [54]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
