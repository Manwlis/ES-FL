// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accel_conv2d_aggregate_channels_14u_14u_32u_64u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_channel_map_stream_0_dout,
        in_channel_map_stream_0_num_data_valid,
        in_channel_map_stream_0_fifo_cap,
        in_channel_map_stream_0_empty_n,
        in_channel_map_stream_0_read,
        in_channel_map_stream_1_dout,
        in_channel_map_stream_1_num_data_valid,
        in_channel_map_stream_1_fifo_cap,
        in_channel_map_stream_1_empty_n,
        in_channel_map_stream_1_read,
        in_channel_map_stream_2_dout,
        in_channel_map_stream_2_num_data_valid,
        in_channel_map_stream_2_fifo_cap,
        in_channel_map_stream_2_empty_n,
        in_channel_map_stream_2_read,
        in_channel_map_stream_3_dout,
        in_channel_map_stream_3_num_data_valid,
        in_channel_map_stream_3_fifo_cap,
        in_channel_map_stream_3_empty_n,
        in_channel_map_stream_3_read,
        in_channel_map_stream_4_dout,
        in_channel_map_stream_4_num_data_valid,
        in_channel_map_stream_4_fifo_cap,
        in_channel_map_stream_4_empty_n,
        in_channel_map_stream_4_read,
        in_channel_map_stream_5_dout,
        in_channel_map_stream_5_num_data_valid,
        in_channel_map_stream_5_fifo_cap,
        in_channel_map_stream_5_empty_n,
        in_channel_map_stream_5_read,
        in_channel_map_stream_6_dout,
        in_channel_map_stream_6_num_data_valid,
        in_channel_map_stream_6_fifo_cap,
        in_channel_map_stream_6_empty_n,
        in_channel_map_stream_6_read,
        in_channel_map_stream_7_dout,
        in_channel_map_stream_7_num_data_valid,
        in_channel_map_stream_7_fifo_cap,
        in_channel_map_stream_7_empty_n,
        in_channel_map_stream_7_read,
        in_channel_map_stream_8_dout,
        in_channel_map_stream_8_num_data_valid,
        in_channel_map_stream_8_fifo_cap,
        in_channel_map_stream_8_empty_n,
        in_channel_map_stream_8_read,
        in_channel_map_stream_9_dout,
        in_channel_map_stream_9_num_data_valid,
        in_channel_map_stream_9_fifo_cap,
        in_channel_map_stream_9_empty_n,
        in_channel_map_stream_9_read,
        in_channel_map_stream_10_dout,
        in_channel_map_stream_10_num_data_valid,
        in_channel_map_stream_10_fifo_cap,
        in_channel_map_stream_10_empty_n,
        in_channel_map_stream_10_read,
        in_channel_map_stream_11_dout,
        in_channel_map_stream_11_num_data_valid,
        in_channel_map_stream_11_fifo_cap,
        in_channel_map_stream_11_empty_n,
        in_channel_map_stream_11_read,
        in_channel_map_stream_1213_dout,
        in_channel_map_stream_1213_num_data_valid,
        in_channel_map_stream_1213_fifo_cap,
        in_channel_map_stream_1213_empty_n,
        in_channel_map_stream_1213_read,
        in_channel_map_stream_13_dout,
        in_channel_map_stream_13_num_data_valid,
        in_channel_map_stream_13_fifo_cap,
        in_channel_map_stream_13_empty_n,
        in_channel_map_stream_13_read,
        in_channel_map_stream_14_dout,
        in_channel_map_stream_14_num_data_valid,
        in_channel_map_stream_14_fifo_cap,
        in_channel_map_stream_14_empty_n,
        in_channel_map_stream_14_read,
        in_channel_map_stream_15_dout,
        in_channel_map_stream_15_num_data_valid,
        in_channel_map_stream_15_fifo_cap,
        in_channel_map_stream_15_empty_n,
        in_channel_map_stream_15_read,
        in_channel_map_stream_16_dout,
        in_channel_map_stream_16_num_data_valid,
        in_channel_map_stream_16_fifo_cap,
        in_channel_map_stream_16_empty_n,
        in_channel_map_stream_16_read,
        in_channel_map_stream_17_dout,
        in_channel_map_stream_17_num_data_valid,
        in_channel_map_stream_17_fifo_cap,
        in_channel_map_stream_17_empty_n,
        in_channel_map_stream_17_read,
        in_channel_map_stream_18_dout,
        in_channel_map_stream_18_num_data_valid,
        in_channel_map_stream_18_fifo_cap,
        in_channel_map_stream_18_empty_n,
        in_channel_map_stream_18_read,
        in_channel_map_stream_19_dout,
        in_channel_map_stream_19_num_data_valid,
        in_channel_map_stream_19_fifo_cap,
        in_channel_map_stream_19_empty_n,
        in_channel_map_stream_19_read,
        in_channel_map_stream_20_dout,
        in_channel_map_stream_20_num_data_valid,
        in_channel_map_stream_20_fifo_cap,
        in_channel_map_stream_20_empty_n,
        in_channel_map_stream_20_read,
        in_channel_map_stream_21_dout,
        in_channel_map_stream_21_num_data_valid,
        in_channel_map_stream_21_fifo_cap,
        in_channel_map_stream_21_empty_n,
        in_channel_map_stream_21_read,
        in_channel_map_stream_22_dout,
        in_channel_map_stream_22_num_data_valid,
        in_channel_map_stream_22_fifo_cap,
        in_channel_map_stream_22_empty_n,
        in_channel_map_stream_22_read,
        in_channel_map_stream_2325_dout,
        in_channel_map_stream_2325_num_data_valid,
        in_channel_map_stream_2325_fifo_cap,
        in_channel_map_stream_2325_empty_n,
        in_channel_map_stream_2325_read,
        in_channel_map_stream_24_dout,
        in_channel_map_stream_24_num_data_valid,
        in_channel_map_stream_24_fifo_cap,
        in_channel_map_stream_24_empty_n,
        in_channel_map_stream_24_read,
        in_channel_map_stream_25_dout,
        in_channel_map_stream_25_num_data_valid,
        in_channel_map_stream_25_fifo_cap,
        in_channel_map_stream_25_empty_n,
        in_channel_map_stream_25_read,
        in_channel_map_stream_26_dout,
        in_channel_map_stream_26_num_data_valid,
        in_channel_map_stream_26_fifo_cap,
        in_channel_map_stream_26_empty_n,
        in_channel_map_stream_26_read,
        in_channel_map_stream_27_dout,
        in_channel_map_stream_27_num_data_valid,
        in_channel_map_stream_27_fifo_cap,
        in_channel_map_stream_27_empty_n,
        in_channel_map_stream_27_read,
        in_channel_map_stream_28_dout,
        in_channel_map_stream_28_num_data_valid,
        in_channel_map_stream_28_fifo_cap,
        in_channel_map_stream_28_empty_n,
        in_channel_map_stream_28_read,
        in_channel_map_stream_29_dout,
        in_channel_map_stream_29_num_data_valid,
        in_channel_map_stream_29_fifo_cap,
        in_channel_map_stream_29_empty_n,
        in_channel_map_stream_29_read,
        in_channel_map_stream_30_dout,
        in_channel_map_stream_30_num_data_valid,
        in_channel_map_stream_30_fifo_cap,
        in_channel_map_stream_30_empty_n,
        in_channel_map_stream_30_read,
        in_channel_map_stream_31_dout,
        in_channel_map_stream_31_num_data_valid,
        in_channel_map_stream_31_fifo_cap,
        in_channel_map_stream_31_empty_n,
        in_channel_map_stream_31_read,
        conv2d_64_feature_map_stream125_din,
        conv2d_64_feature_map_stream125_num_data_valid,
        conv2d_64_feature_map_stream125_fifo_cap,
        conv2d_64_feature_map_stream125_full_n,
        conv2d_64_feature_map_stream125_write,
        conv2d_64_activations_stream126_din,
        conv2d_64_activations_stream126_num_data_valid,
        conv2d_64_activations_stream126_fifo_cap,
        conv2d_64_activations_stream126_full_n,
        conv2d_64_activations_stream126_write,
        conv2d_64_f_map_out132_din,
        conv2d_64_f_map_out132_num_data_valid,
        conv2d_64_f_map_out132_fifo_cap,
        conv2d_64_f_map_out132_full_n,
        conv2d_64_f_map_out132_write,
        start_out,
        start_write,
        biases_address0,
        biases_ce0,
        biases_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_channel_map_stream_0_dout;
input  [2:0] in_channel_map_stream_0_num_data_valid;
input  [2:0] in_channel_map_stream_0_fifo_cap;
input   in_channel_map_stream_0_empty_n;
output   in_channel_map_stream_0_read;
input  [31:0] in_channel_map_stream_1_dout;
input  [2:0] in_channel_map_stream_1_num_data_valid;
input  [2:0] in_channel_map_stream_1_fifo_cap;
input   in_channel_map_stream_1_empty_n;
output   in_channel_map_stream_1_read;
input  [31:0] in_channel_map_stream_2_dout;
input  [2:0] in_channel_map_stream_2_num_data_valid;
input  [2:0] in_channel_map_stream_2_fifo_cap;
input   in_channel_map_stream_2_empty_n;
output   in_channel_map_stream_2_read;
input  [31:0] in_channel_map_stream_3_dout;
input  [2:0] in_channel_map_stream_3_num_data_valid;
input  [2:0] in_channel_map_stream_3_fifo_cap;
input   in_channel_map_stream_3_empty_n;
output   in_channel_map_stream_3_read;
input  [31:0] in_channel_map_stream_4_dout;
input  [2:0] in_channel_map_stream_4_num_data_valid;
input  [2:0] in_channel_map_stream_4_fifo_cap;
input   in_channel_map_stream_4_empty_n;
output   in_channel_map_stream_4_read;
input  [31:0] in_channel_map_stream_5_dout;
input  [2:0] in_channel_map_stream_5_num_data_valid;
input  [2:0] in_channel_map_stream_5_fifo_cap;
input   in_channel_map_stream_5_empty_n;
output   in_channel_map_stream_5_read;
input  [31:0] in_channel_map_stream_6_dout;
input  [2:0] in_channel_map_stream_6_num_data_valid;
input  [2:0] in_channel_map_stream_6_fifo_cap;
input   in_channel_map_stream_6_empty_n;
output   in_channel_map_stream_6_read;
input  [31:0] in_channel_map_stream_7_dout;
input  [2:0] in_channel_map_stream_7_num_data_valid;
input  [2:0] in_channel_map_stream_7_fifo_cap;
input   in_channel_map_stream_7_empty_n;
output   in_channel_map_stream_7_read;
input  [31:0] in_channel_map_stream_8_dout;
input  [2:0] in_channel_map_stream_8_num_data_valid;
input  [2:0] in_channel_map_stream_8_fifo_cap;
input   in_channel_map_stream_8_empty_n;
output   in_channel_map_stream_8_read;
input  [31:0] in_channel_map_stream_9_dout;
input  [2:0] in_channel_map_stream_9_num_data_valid;
input  [2:0] in_channel_map_stream_9_fifo_cap;
input   in_channel_map_stream_9_empty_n;
output   in_channel_map_stream_9_read;
input  [31:0] in_channel_map_stream_10_dout;
input  [2:0] in_channel_map_stream_10_num_data_valid;
input  [2:0] in_channel_map_stream_10_fifo_cap;
input   in_channel_map_stream_10_empty_n;
output   in_channel_map_stream_10_read;
input  [31:0] in_channel_map_stream_11_dout;
input  [2:0] in_channel_map_stream_11_num_data_valid;
input  [2:0] in_channel_map_stream_11_fifo_cap;
input   in_channel_map_stream_11_empty_n;
output   in_channel_map_stream_11_read;
input  [31:0] in_channel_map_stream_1213_dout;
input  [2:0] in_channel_map_stream_1213_num_data_valid;
input  [2:0] in_channel_map_stream_1213_fifo_cap;
input   in_channel_map_stream_1213_empty_n;
output   in_channel_map_stream_1213_read;
input  [31:0] in_channel_map_stream_13_dout;
input  [2:0] in_channel_map_stream_13_num_data_valid;
input  [2:0] in_channel_map_stream_13_fifo_cap;
input   in_channel_map_stream_13_empty_n;
output   in_channel_map_stream_13_read;
input  [31:0] in_channel_map_stream_14_dout;
input  [2:0] in_channel_map_stream_14_num_data_valid;
input  [2:0] in_channel_map_stream_14_fifo_cap;
input   in_channel_map_stream_14_empty_n;
output   in_channel_map_stream_14_read;
input  [31:0] in_channel_map_stream_15_dout;
input  [2:0] in_channel_map_stream_15_num_data_valid;
input  [2:0] in_channel_map_stream_15_fifo_cap;
input   in_channel_map_stream_15_empty_n;
output   in_channel_map_stream_15_read;
input  [31:0] in_channel_map_stream_16_dout;
input  [2:0] in_channel_map_stream_16_num_data_valid;
input  [2:0] in_channel_map_stream_16_fifo_cap;
input   in_channel_map_stream_16_empty_n;
output   in_channel_map_stream_16_read;
input  [31:0] in_channel_map_stream_17_dout;
input  [2:0] in_channel_map_stream_17_num_data_valid;
input  [2:0] in_channel_map_stream_17_fifo_cap;
input   in_channel_map_stream_17_empty_n;
output   in_channel_map_stream_17_read;
input  [31:0] in_channel_map_stream_18_dout;
input  [2:0] in_channel_map_stream_18_num_data_valid;
input  [2:0] in_channel_map_stream_18_fifo_cap;
input   in_channel_map_stream_18_empty_n;
output   in_channel_map_stream_18_read;
input  [31:0] in_channel_map_stream_19_dout;
input  [2:0] in_channel_map_stream_19_num_data_valid;
input  [2:0] in_channel_map_stream_19_fifo_cap;
input   in_channel_map_stream_19_empty_n;
output   in_channel_map_stream_19_read;
input  [31:0] in_channel_map_stream_20_dout;
input  [2:0] in_channel_map_stream_20_num_data_valid;
input  [2:0] in_channel_map_stream_20_fifo_cap;
input   in_channel_map_stream_20_empty_n;
output   in_channel_map_stream_20_read;
input  [31:0] in_channel_map_stream_21_dout;
input  [2:0] in_channel_map_stream_21_num_data_valid;
input  [2:0] in_channel_map_stream_21_fifo_cap;
input   in_channel_map_stream_21_empty_n;
output   in_channel_map_stream_21_read;
input  [31:0] in_channel_map_stream_22_dout;
input  [2:0] in_channel_map_stream_22_num_data_valid;
input  [2:0] in_channel_map_stream_22_fifo_cap;
input   in_channel_map_stream_22_empty_n;
output   in_channel_map_stream_22_read;
input  [31:0] in_channel_map_stream_2325_dout;
input  [2:0] in_channel_map_stream_2325_num_data_valid;
input  [2:0] in_channel_map_stream_2325_fifo_cap;
input   in_channel_map_stream_2325_empty_n;
output   in_channel_map_stream_2325_read;
input  [31:0] in_channel_map_stream_24_dout;
input  [2:0] in_channel_map_stream_24_num_data_valid;
input  [2:0] in_channel_map_stream_24_fifo_cap;
input   in_channel_map_stream_24_empty_n;
output   in_channel_map_stream_24_read;
input  [31:0] in_channel_map_stream_25_dout;
input  [2:0] in_channel_map_stream_25_num_data_valid;
input  [2:0] in_channel_map_stream_25_fifo_cap;
input   in_channel_map_stream_25_empty_n;
output   in_channel_map_stream_25_read;
input  [31:0] in_channel_map_stream_26_dout;
input  [2:0] in_channel_map_stream_26_num_data_valid;
input  [2:0] in_channel_map_stream_26_fifo_cap;
input   in_channel_map_stream_26_empty_n;
output   in_channel_map_stream_26_read;
input  [31:0] in_channel_map_stream_27_dout;
input  [2:0] in_channel_map_stream_27_num_data_valid;
input  [2:0] in_channel_map_stream_27_fifo_cap;
input   in_channel_map_stream_27_empty_n;
output   in_channel_map_stream_27_read;
input  [31:0] in_channel_map_stream_28_dout;
input  [2:0] in_channel_map_stream_28_num_data_valid;
input  [2:0] in_channel_map_stream_28_fifo_cap;
input   in_channel_map_stream_28_empty_n;
output   in_channel_map_stream_28_read;
input  [31:0] in_channel_map_stream_29_dout;
input  [2:0] in_channel_map_stream_29_num_data_valid;
input  [2:0] in_channel_map_stream_29_fifo_cap;
input   in_channel_map_stream_29_empty_n;
output   in_channel_map_stream_29_read;
input  [31:0] in_channel_map_stream_30_dout;
input  [2:0] in_channel_map_stream_30_num_data_valid;
input  [2:0] in_channel_map_stream_30_fifo_cap;
input   in_channel_map_stream_30_empty_n;
output   in_channel_map_stream_30_read;
input  [31:0] in_channel_map_stream_31_dout;
input  [2:0] in_channel_map_stream_31_num_data_valid;
input  [2:0] in_channel_map_stream_31_fifo_cap;
input   in_channel_map_stream_31_empty_n;
output   in_channel_map_stream_31_read;
output  [31:0] conv2d_64_feature_map_stream125_din;
input  [2:0] conv2d_64_feature_map_stream125_num_data_valid;
input  [2:0] conv2d_64_feature_map_stream125_fifo_cap;
input   conv2d_64_feature_map_stream125_full_n;
output   conv2d_64_feature_map_stream125_write;
output  [0:0] conv2d_64_activations_stream126_din;
input  [14:0] conv2d_64_activations_stream126_num_data_valid;
input  [14:0] conv2d_64_activations_stream126_fifo_cap;
input   conv2d_64_activations_stream126_full_n;
output   conv2d_64_activations_stream126_write;
output  [31:0] conv2d_64_f_map_out132_din;
input  [14:0] conv2d_64_f_map_out132_num_data_valid;
input  [14:0] conv2d_64_f_map_out132_fifo_cap;
input   conv2d_64_f_map_out132_full_n;
output   conv2d_64_f_map_out132_write;
output   start_out;
output   start_write;
output  [5:0] biases_address0;
output   biases_ce0;
input  [31:0] biases_q0;

reg ap_idle;
reg in_channel_map_stream_0_read;
reg in_channel_map_stream_1_read;
reg in_channel_map_stream_2_read;
reg in_channel_map_stream_3_read;
reg in_channel_map_stream_4_read;
reg in_channel_map_stream_5_read;
reg in_channel_map_stream_6_read;
reg in_channel_map_stream_7_read;
reg in_channel_map_stream_8_read;
reg in_channel_map_stream_9_read;
reg in_channel_map_stream_10_read;
reg in_channel_map_stream_11_read;
reg in_channel_map_stream_1213_read;
reg in_channel_map_stream_13_read;
reg in_channel_map_stream_14_read;
reg in_channel_map_stream_15_read;
reg in_channel_map_stream_16_read;
reg in_channel_map_stream_17_read;
reg in_channel_map_stream_18_read;
reg in_channel_map_stream_19_read;
reg in_channel_map_stream_20_read;
reg in_channel_map_stream_21_read;
reg in_channel_map_stream_22_read;
reg in_channel_map_stream_2325_read;
reg in_channel_map_stream_24_read;
reg in_channel_map_stream_25_read;
reg in_channel_map_stream_26_read;
reg in_channel_map_stream_27_read;
reg in_channel_map_stream_28_read;
reg in_channel_map_stream_29_read;
reg in_channel_map_stream_30_read;
reg in_channel_map_stream_31_read;
reg conv2d_64_feature_map_stream125_write;
reg conv2d_64_activations_stream126_write;
reg conv2d_64_f_map_out132_write;
reg start_write;
reg biases_ce0;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln323_fu_501_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
reg    ap_loop_exit_ready_delayed;
reg    in_channel_map_stream_0_blk_n;
wire    ap_block_pp0_stage0;
reg    in_channel_map_stream_1_blk_n;
reg    in_channel_map_stream_2_blk_n;
reg    in_channel_map_stream_3_blk_n;
reg    in_channel_map_stream_4_blk_n;
reg    in_channel_map_stream_5_blk_n;
reg    in_channel_map_stream_6_blk_n;
reg    in_channel_map_stream_7_blk_n;
reg    in_channel_map_stream_8_blk_n;
reg    in_channel_map_stream_9_blk_n;
reg    in_channel_map_stream_10_blk_n;
reg    in_channel_map_stream_11_blk_n;
reg    in_channel_map_stream_1213_blk_n;
reg    in_channel_map_stream_13_blk_n;
reg    in_channel_map_stream_14_blk_n;
reg    in_channel_map_stream_15_blk_n;
reg    in_channel_map_stream_16_blk_n;
reg    in_channel_map_stream_17_blk_n;
reg    in_channel_map_stream_18_blk_n;
reg    in_channel_map_stream_19_blk_n;
reg    in_channel_map_stream_20_blk_n;
reg    in_channel_map_stream_21_blk_n;
reg    in_channel_map_stream_22_blk_n;
reg    in_channel_map_stream_2325_blk_n;
reg    in_channel_map_stream_24_blk_n;
reg    in_channel_map_stream_25_blk_n;
reg    in_channel_map_stream_26_blk_n;
reg    in_channel_map_stream_27_blk_n;
reg    in_channel_map_stream_28_blk_n;
reg    in_channel_map_stream_29_blk_n;
reg    in_channel_map_stream_30_blk_n;
reg    in_channel_map_stream_31_blk_n;
reg    conv2d_64_feature_map_stream125_blk_n;
reg    conv2d_64_activations_stream126_blk_n;
reg    conv2d_64_f_map_out132_blk_n;
reg   [31:0] in_channel_map_stream_0_read_reg_710;
reg   [31:0] in_channel_map_stream_1_read_reg_715;
reg   [31:0] in_channel_map_stream_2_read_reg_720;
reg   [31:0] in_channel_map_stream_3_read_reg_725;
reg   [31:0] in_channel_map_stream_4_read_reg_730;
reg   [31:0] in_channel_map_stream_5_read_reg_735;
reg   [31:0] in_channel_map_stream_6_read_reg_740;
reg   [31:0] in_channel_map_stream_7_read_reg_745;
reg   [31:0] in_channel_map_stream_8_read_reg_750;
reg   [31:0] in_channel_map_stream_9_read_reg_755;
reg   [31:0] in_channel_map_stream_10_read_reg_760;
reg   [31:0] in_channel_map_stream_11_read_reg_765;
reg   [31:0] in_channel_map_stream_1213_read_reg_770;
reg   [31:0] in_channel_map_stream_13_read_reg_775;
reg   [31:0] in_channel_map_stream_14_read_reg_780;
reg   [31:0] in_channel_map_stream_14_read_reg_780_pp0_iter2_reg;
reg   [31:0] in_channel_map_stream_14_read_reg_780_pp0_iter3_reg;
reg   [31:0] in_channel_map_stream_14_read_reg_780_pp0_iter4_reg;
reg   [31:0] in_channel_map_stream_15_read_reg_785;
reg   [31:0] in_channel_map_stream_16_read_reg_790;
reg   [31:0] in_channel_map_stream_17_read_reg_795;
reg   [31:0] in_channel_map_stream_18_read_reg_800;
reg   [31:0] in_channel_map_stream_19_read_reg_805;
reg   [31:0] in_channel_map_stream_20_read_reg_810;
reg   [31:0] in_channel_map_stream_21_read_reg_815;
reg   [31:0] in_channel_map_stream_22_read_reg_820;
reg   [31:0] in_channel_map_stream_2325_read_reg_825;
reg   [31:0] in_channel_map_stream_24_read_reg_830;
reg   [31:0] in_channel_map_stream_25_read_reg_835;
reg   [31:0] in_channel_map_stream_26_read_reg_840;
reg   [31:0] in_channel_map_stream_27_read_reg_845;
reg   [31:0] in_channel_map_stream_28_read_reg_850;
reg   [31:0] in_channel_map_stream_29_read_reg_855;
reg   [31:0] in_channel_map_stream_29_read_reg_855_pp0_iter2_reg;
reg   [31:0] in_channel_map_stream_29_read_reg_855_pp0_iter3_reg;
reg   [31:0] in_channel_map_stream_29_read_reg_855_pp0_iter4_reg;
reg   [31:0] in_channel_map_stream_30_read_reg_860;
reg   [31:0] in_channel_map_stream_31_read_reg_865;
reg   [31:0] temp_sum_reg_1025;
wire   [31:0] grp_fu_354_p2;
reg   [31:0] tmp34_reg_1030;
reg   [31:0] tmp34_reg_1030_pp0_iter5_reg;
reg   [31:0] tmp34_reg_1030_pp0_iter6_reg;
reg   [31:0] tmp34_reg_1030_pp0_iter7_reg;
wire   [31:0] grp_fu_358_p2;
reg   [31:0] tmp36_reg_1035;
wire   [31:0] grp_fu_362_p2;
reg   [31:0] tmp37_reg_1040;
wire   [31:0] grp_fu_366_p2;
reg   [31:0] tmp40_reg_1045;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] tmp41_reg_1050;
wire   [31:0] grp_fu_374_p2;
reg   [31:0] tmp43_reg_1055;
wire   [31:0] grp_fu_378_p2;
reg   [31:0] tmp44_reg_1060;
wire   [31:0] grp_fu_382_p2;
reg   [31:0] tmp48_reg_1065;
wire   [31:0] grp_fu_386_p2;
reg   [31:0] tmp49_reg_1070;
wire   [31:0] grp_fu_390_p2;
reg   [31:0] tmp51_reg_1075;
wire   [31:0] grp_fu_394_p2;
reg   [31:0] tmp52_reg_1080;
wire   [31:0] grp_fu_398_p2;
reg   [31:0] tmp55_reg_1085;
wire   [31:0] grp_fu_402_p2;
reg   [31:0] tmp56_reg_1090;
wire   [31:0] grp_fu_406_p2;
reg   [31:0] tmp58_reg_1095;
reg   [31:0] tmp58_reg_1095_pp0_iter5_reg;
reg   [31:0] tmp58_reg_1095_pp0_iter6_reg;
reg   [31:0] tmp58_reg_1095_pp0_iter7_reg;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] tmp60_reg_1100;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] tmp33_reg_1115;
wire   [31:0] grp_fu_418_p2;
reg   [31:0] tmp35_reg_1120;
reg   [31:0] tmp35_reg_1120_pp0_iter8_reg;
reg   [31:0] tmp35_reg_1120_pp0_iter9_reg;
reg   [31:0] tmp35_reg_1120_pp0_iter10_reg;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] tmp39_reg_1125;
wire   [31:0] grp_fu_426_p2;
reg   [31:0] tmp42_reg_1130;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] tmp47_reg_1135;
wire   [31:0] grp_fu_434_p2;
reg   [31:0] tmp50_reg_1140;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] tmp54_reg_1145;
reg   [31:0] tmp54_reg_1145_pp0_iter8_reg;
reg   [31:0] tmp54_reg_1145_pp0_iter9_reg;
reg   [31:0] tmp54_reg_1145_pp0_iter10_reg;
wire   [31:0] grp_fu_442_p2;
reg   [31:0] tmp59_reg_1150;
wire   [31:0] grp_fu_446_p2;
reg   [31:0] tmp32_reg_1155;
wire   [31:0] grp_fu_450_p2;
reg   [31:0] tmp38_reg_1160;
reg   [31:0] tmp38_reg_1160_pp0_iter11_reg;
reg   [31:0] tmp38_reg_1160_pp0_iter12_reg;
reg   [31:0] tmp38_reg_1160_pp0_iter13_reg;
wire   [31:0] grp_fu_454_p2;
reg   [31:0] tmp46_reg_1165;
reg   [31:0] tmp46_reg_1165_pp0_iter11_reg;
reg   [31:0] tmp46_reg_1165_pp0_iter12_reg;
reg   [31:0] tmp46_reg_1165_pp0_iter13_reg;
wire   [31:0] grp_fu_458_p2;
reg   [31:0] tmp57_reg_1170;
wire   [31:0] grp_fu_462_p2;
reg   [31:0] tmp31_reg_1175;
wire   [31:0] grp_fu_466_p2;
reg   [31:0] tmp53_reg_1180;
wire   [31:0] grp_fu_470_p2;
reg   [31:0] tmp30_reg_1185;
wire   [31:0] grp_fu_474_p2;
reg   [31:0] tmp45_reg_1190;
wire   [31:0] grp_fu_478_p2;
reg   [31:0] temp_sum_18720_s_reg_1195;
reg   [31:0] temp_sum_18720_s_reg_1195_pp0_iter20_reg;
wire   [63:0] filter_1_cast_fu_655_p1;
reg   [6:0] filter_fu_120;
wire   [6:0] add_ln324_fu_660_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg    ap_loop_init_pp0_iter2_reg;
reg    ap_loop_init_pp0_iter3_reg;
reg   [6:0] ap_sig_allocacmp_filter_load;
reg   [13:0] indvar_flatten_fu_124;
wire   [13:0] add_ln323_fu_507_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] select_ln174_fu_682_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] grp_fu_482_p2;
wire   [31:0] grp_fu_354_p0;
wire   [31:0] grp_fu_354_p1;
wire   [31:0] grp_fu_358_p0;
wire   [31:0] grp_fu_358_p1;
wire   [31:0] grp_fu_362_p0;
wire   [31:0] grp_fu_362_p1;
wire   [31:0] grp_fu_366_p0;
wire   [31:0] grp_fu_366_p1;
wire   [31:0] grp_fu_370_p0;
wire   [31:0] grp_fu_370_p1;
wire   [31:0] grp_fu_374_p0;
wire   [31:0] grp_fu_374_p1;
wire   [31:0] grp_fu_378_p0;
wire   [31:0] grp_fu_378_p1;
wire   [31:0] grp_fu_382_p0;
wire   [31:0] grp_fu_382_p1;
wire   [31:0] grp_fu_386_p0;
wire   [31:0] grp_fu_386_p1;
wire   [31:0] grp_fu_390_p0;
wire   [31:0] grp_fu_390_p1;
wire   [31:0] grp_fu_394_p0;
wire   [31:0] grp_fu_394_p1;
wire   [31:0] grp_fu_398_p0;
wire   [31:0] grp_fu_398_p1;
wire   [31:0] grp_fu_402_p0;
wire   [31:0] grp_fu_402_p1;
wire   [31:0] grp_fu_406_p0;
wire   [31:0] grp_fu_406_p1;
wire   [31:0] grp_fu_410_p0;
wire   [31:0] grp_fu_410_p1;
wire   [31:0] grp_fu_414_p1;
wire   [31:0] grp_fu_442_p1;
wire   [0:0] icmp_ln324_fu_641_p2;
wire   [6:0] select_ln323_fu_647_p3;
wire   [31:0] bitcast_ln174_fu_679_p1;
reg    grp_fu_354_ce;
reg    grp_fu_358_ce;
reg    grp_fu_362_ce;
reg    grp_fu_366_ce;
reg    grp_fu_370_ce;
reg    grp_fu_374_ce;
reg    grp_fu_378_ce;
reg    grp_fu_382_ce;
reg    grp_fu_386_ce;
reg    grp_fu_390_ce;
reg    grp_fu_394_ce;
reg    grp_fu_398_ce;
reg    grp_fu_402_ce;
reg    grp_fu_406_ce;
reg    grp_fu_410_ce;
reg    grp_fu_414_ce;
reg    grp_fu_418_ce;
reg    grp_fu_422_ce;
reg    grp_fu_426_ce;
reg    grp_fu_430_ce;
reg    grp_fu_434_ce;
reg    grp_fu_438_ce;
reg    grp_fu_442_ce;
reg    grp_fu_446_ce;
reg    grp_fu_450_ce;
reg    grp_fu_454_ce;
reg    grp_fu_458_ce;
reg    grp_fu_462_ce;
reg    grp_fu_466_ce;
reg    grp_fu_470_ce;
reg    grp_fu_474_ce;
reg    grp_fu_478_ce;
reg    grp_fu_482_ce;
reg    ap_block_pp0_stage0_00001;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_917;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19692(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .din1(grp_fu_354_p1),
    .ce(grp_fu_354_ce),
    .dout(grp_fu_354_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19693(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_358_p0),
    .din1(grp_fu_358_p1),
    .ce(grp_fu_358_ce),
    .dout(grp_fu_358_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19694(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_362_p0),
    .din1(grp_fu_362_p1),
    .ce(grp_fu_362_ce),
    .dout(grp_fu_362_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19695(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_366_p0),
    .din1(grp_fu_366_p1),
    .ce(grp_fu_366_ce),
    .dout(grp_fu_366_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19696(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_370_p0),
    .din1(grp_fu_370_p1),
    .ce(grp_fu_370_ce),
    .dout(grp_fu_370_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19697(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_374_p0),
    .din1(grp_fu_374_p1),
    .ce(grp_fu_374_ce),
    .dout(grp_fu_374_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19698(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_378_p0),
    .din1(grp_fu_378_p1),
    .ce(grp_fu_378_ce),
    .dout(grp_fu_378_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19699(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_382_p0),
    .din1(grp_fu_382_p1),
    .ce(grp_fu_382_ce),
    .dout(grp_fu_382_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19700(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_386_p0),
    .din1(grp_fu_386_p1),
    .ce(grp_fu_386_ce),
    .dout(grp_fu_386_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19701(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_390_p0),
    .din1(grp_fu_390_p1),
    .ce(grp_fu_390_ce),
    .dout(grp_fu_390_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19702(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_394_p0),
    .din1(grp_fu_394_p1),
    .ce(grp_fu_394_ce),
    .dout(grp_fu_394_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19703(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_398_p0),
    .din1(grp_fu_398_p1),
    .ce(grp_fu_398_ce),
    .dout(grp_fu_398_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19704(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p0),
    .din1(grp_fu_402_p1),
    .ce(grp_fu_402_ce),
    .dout(grp_fu_402_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19705(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_406_p0),
    .din1(grp_fu_406_p1),
    .ce(grp_fu_406_ce),
    .dout(grp_fu_406_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19706(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .din1(grp_fu_410_p1),
    .ce(grp_fu_410_ce),
    .dout(grp_fu_410_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19707(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_sum_reg_1025),
    .din1(grp_fu_414_p1),
    .ce(grp_fu_414_ce),
    .dout(grp_fu_414_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19708(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp37_reg_1040),
    .din1(tmp36_reg_1035),
    .ce(grp_fu_418_ce),
    .dout(grp_fu_418_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19709(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp41_reg_1050),
    .din1(tmp40_reg_1045),
    .ce(grp_fu_422_ce),
    .dout(grp_fu_422_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19710(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp44_reg_1060),
    .din1(tmp43_reg_1055),
    .ce(grp_fu_426_ce),
    .dout(grp_fu_426_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19711(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp49_reg_1070),
    .din1(tmp48_reg_1065),
    .ce(grp_fu_430_ce),
    .dout(grp_fu_430_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19712(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp52_reg_1080),
    .din1(tmp51_reg_1075),
    .ce(grp_fu_434_ce),
    .dout(grp_fu_434_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19713(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp56_reg_1090),
    .din1(tmp55_reg_1085),
    .ce(grp_fu_438_ce),
    .dout(grp_fu_438_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19714(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp60_reg_1100),
    .din1(grp_fu_442_p1),
    .ce(grp_fu_442_ce),
    .dout(grp_fu_442_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19715(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp34_reg_1030_pp0_iter7_reg),
    .din1(tmp33_reg_1115),
    .ce(grp_fu_446_ce),
    .dout(grp_fu_446_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19716(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp42_reg_1130),
    .din1(tmp39_reg_1125),
    .ce(grp_fu_450_ce),
    .dout(grp_fu_450_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19717(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp50_reg_1140),
    .din1(tmp47_reg_1135),
    .ce(grp_fu_454_ce),
    .dout(grp_fu_454_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19718(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp59_reg_1150),
    .din1(tmp58_reg_1095_pp0_iter7_reg),
    .ce(grp_fu_458_ce),
    .dout(grp_fu_458_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19719(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp35_reg_1120_pp0_iter10_reg),
    .din1(tmp32_reg_1155),
    .ce(grp_fu_462_ce),
    .dout(grp_fu_462_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19720(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp57_reg_1170),
    .din1(tmp54_reg_1145_pp0_iter10_reg),
    .ce(grp_fu_466_ce),
    .dout(grp_fu_466_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19721(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp38_reg_1160_pp0_iter13_reg),
    .din1(tmp31_reg_1175),
    .ce(grp_fu_470_ce),
    .dout(grp_fu_470_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19722(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp53_reg_1180),
    .din1(tmp46_reg_1165_pp0_iter13_reg),
    .ce(grp_fu_474_ce),
    .dout(grp_fu_474_p2)
);

accel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19723(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp45_reg_1190),
    .din1(tmp30_reg_1185),
    .ce(grp_fu_478_ce),
    .dout(grp_fu_478_p2)
);

accel_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U19724(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_sum_18720_s_reg_1195),
    .din1(32'd0),
    .ce(grp_fu_482_ce),
    .opcode(5'd2),
    .dout(grp_fu_482_p2)
);

accel_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        filter_fu_120 <= add_ln324_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_917)) begin
    if ((icmp_ln323_fu_501_p2 == 1'd0)) begin
        indvar_flatten_fu_124 <= add_ln323_fu_507_p2;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten_fu_124 <= 14'd0;
    end
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        ap_loop_init_pp0_iter2_reg <= ap_loop_init_pp0_iter1_reg;
        in_channel_map_stream_0_read_reg_710 <= in_channel_map_stream_0_dout;
        in_channel_map_stream_10_read_reg_760 <= in_channel_map_stream_10_dout;
        in_channel_map_stream_11_read_reg_765 <= in_channel_map_stream_11_dout;
        in_channel_map_stream_1213_read_reg_770 <= in_channel_map_stream_1213_dout;
        in_channel_map_stream_13_read_reg_775 <= in_channel_map_stream_13_dout;
        in_channel_map_stream_14_read_reg_780 <= in_channel_map_stream_14_dout;
        in_channel_map_stream_15_read_reg_785 <= in_channel_map_stream_15_dout;
        in_channel_map_stream_16_read_reg_790 <= in_channel_map_stream_16_dout;
        in_channel_map_stream_17_read_reg_795 <= in_channel_map_stream_17_dout;
        in_channel_map_stream_18_read_reg_800 <= in_channel_map_stream_18_dout;
        in_channel_map_stream_19_read_reg_805 <= in_channel_map_stream_19_dout;
        in_channel_map_stream_1_read_reg_715 <= in_channel_map_stream_1_dout;
        in_channel_map_stream_20_read_reg_810 <= in_channel_map_stream_20_dout;
        in_channel_map_stream_21_read_reg_815 <= in_channel_map_stream_21_dout;
        in_channel_map_stream_22_read_reg_820 <= in_channel_map_stream_22_dout;
        in_channel_map_stream_2325_read_reg_825 <= in_channel_map_stream_2325_dout;
        in_channel_map_stream_24_read_reg_830 <= in_channel_map_stream_24_dout;
        in_channel_map_stream_25_read_reg_835 <= in_channel_map_stream_25_dout;
        in_channel_map_stream_26_read_reg_840 <= in_channel_map_stream_26_dout;
        in_channel_map_stream_27_read_reg_845 <= in_channel_map_stream_27_dout;
        in_channel_map_stream_28_read_reg_850 <= in_channel_map_stream_28_dout;
        in_channel_map_stream_29_read_reg_855 <= in_channel_map_stream_29_dout;
        in_channel_map_stream_2_read_reg_720 <= in_channel_map_stream_2_dout;
        in_channel_map_stream_30_read_reg_860 <= in_channel_map_stream_30_dout;
        in_channel_map_stream_31_read_reg_865 <= in_channel_map_stream_31_dout;
        in_channel_map_stream_3_read_reg_725 <= in_channel_map_stream_3_dout;
        in_channel_map_stream_4_read_reg_730 <= in_channel_map_stream_4_dout;
        in_channel_map_stream_5_read_reg_735 <= in_channel_map_stream_5_dout;
        in_channel_map_stream_6_read_reg_740 <= in_channel_map_stream_6_dout;
        in_channel_map_stream_7_read_reg_745 <= in_channel_map_stream_7_dout;
        in_channel_map_stream_8_read_reg_750 <= in_channel_map_stream_8_dout;
        in_channel_map_stream_9_read_reg_755 <= in_channel_map_stream_9_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ap_loop_init_pp0_iter3_reg <= ap_loop_init_pp0_iter2_reg;
        in_channel_map_stream_14_read_reg_780_pp0_iter2_reg <= in_channel_map_stream_14_read_reg_780;
        in_channel_map_stream_14_read_reg_780_pp0_iter3_reg <= in_channel_map_stream_14_read_reg_780_pp0_iter2_reg;
        in_channel_map_stream_14_read_reg_780_pp0_iter4_reg <= in_channel_map_stream_14_read_reg_780_pp0_iter3_reg;
        in_channel_map_stream_29_read_reg_855_pp0_iter2_reg <= in_channel_map_stream_29_read_reg_855;
        in_channel_map_stream_29_read_reg_855_pp0_iter3_reg <= in_channel_map_stream_29_read_reg_855_pp0_iter2_reg;
        in_channel_map_stream_29_read_reg_855_pp0_iter4_reg <= in_channel_map_stream_29_read_reg_855_pp0_iter3_reg;
        temp_sum_18720_s_reg_1195 <= grp_fu_478_p2;
        temp_sum_18720_s_reg_1195_pp0_iter20_reg <= temp_sum_18720_s_reg_1195;
        temp_sum_reg_1025 <= biases_q0;
        tmp30_reg_1185 <= grp_fu_470_p2;
        tmp31_reg_1175 <= grp_fu_462_p2;
        tmp32_reg_1155 <= grp_fu_446_p2;
        tmp33_reg_1115 <= grp_fu_414_p2;
        tmp34_reg_1030 <= grp_fu_354_p2;
        tmp34_reg_1030_pp0_iter5_reg <= tmp34_reg_1030;
        tmp34_reg_1030_pp0_iter6_reg <= tmp34_reg_1030_pp0_iter5_reg;
        tmp34_reg_1030_pp0_iter7_reg <= tmp34_reg_1030_pp0_iter6_reg;
        tmp35_reg_1120 <= grp_fu_418_p2;
        tmp35_reg_1120_pp0_iter10_reg <= tmp35_reg_1120_pp0_iter9_reg;
        tmp35_reg_1120_pp0_iter8_reg <= tmp35_reg_1120;
        tmp35_reg_1120_pp0_iter9_reg <= tmp35_reg_1120_pp0_iter8_reg;
        tmp36_reg_1035 <= grp_fu_358_p2;
        tmp37_reg_1040 <= grp_fu_362_p2;
        tmp38_reg_1160 <= grp_fu_450_p2;
        tmp38_reg_1160_pp0_iter11_reg <= tmp38_reg_1160;
        tmp38_reg_1160_pp0_iter12_reg <= tmp38_reg_1160_pp0_iter11_reg;
        tmp38_reg_1160_pp0_iter13_reg <= tmp38_reg_1160_pp0_iter12_reg;
        tmp39_reg_1125 <= grp_fu_422_p2;
        tmp40_reg_1045 <= grp_fu_366_p2;
        tmp41_reg_1050 <= grp_fu_370_p2;
        tmp42_reg_1130 <= grp_fu_426_p2;
        tmp43_reg_1055 <= grp_fu_374_p2;
        tmp44_reg_1060 <= grp_fu_378_p2;
        tmp45_reg_1190 <= grp_fu_474_p2;
        tmp46_reg_1165 <= grp_fu_454_p2;
        tmp46_reg_1165_pp0_iter11_reg <= tmp46_reg_1165;
        tmp46_reg_1165_pp0_iter12_reg <= tmp46_reg_1165_pp0_iter11_reg;
        tmp46_reg_1165_pp0_iter13_reg <= tmp46_reg_1165_pp0_iter12_reg;
        tmp47_reg_1135 <= grp_fu_430_p2;
        tmp48_reg_1065 <= grp_fu_382_p2;
        tmp49_reg_1070 <= grp_fu_386_p2;
        tmp50_reg_1140 <= grp_fu_434_p2;
        tmp51_reg_1075 <= grp_fu_390_p2;
        tmp52_reg_1080 <= grp_fu_394_p2;
        tmp53_reg_1180 <= grp_fu_466_p2;
        tmp54_reg_1145 <= grp_fu_438_p2;
        tmp54_reg_1145_pp0_iter10_reg <= tmp54_reg_1145_pp0_iter9_reg;
        tmp54_reg_1145_pp0_iter8_reg <= tmp54_reg_1145;
        tmp54_reg_1145_pp0_iter9_reg <= tmp54_reg_1145_pp0_iter8_reg;
        tmp55_reg_1085 <= grp_fu_398_p2;
        tmp56_reg_1090 <= grp_fu_402_p2;
        tmp57_reg_1170 <= grp_fu_458_p2;
        tmp58_reg_1095 <= grp_fu_406_p2;
        tmp58_reg_1095_pp0_iter5_reg <= tmp58_reg_1095;
        tmp58_reg_1095_pp0_iter6_reg <= tmp58_reg_1095_pp0_iter5_reg;
        tmp58_reg_1095_pp0_iter7_reg <= tmp58_reg_1095_pp0_iter6_reg;
        tmp59_reg_1150 <= grp_fu_442_p2;
        tmp60_reg_1100 <= grp_fu_410_p2;
    end
end

always @ (*) begin
    if (((icmp_ln323_fu_501_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_filter_load = 7'd0;
    end else begin
        ap_sig_allocacmp_filter_load = filter_fu_120;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        biases_ce0 = 1'b1;
    end else begin
        biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        conv2d_64_activations_stream126_blk_n = conv2d_64_activations_stream126_full_n;
    end else begin
        conv2d_64_activations_stream126_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv2d_64_activations_stream126_write = 1'b1;
    end else begin
        conv2d_64_activations_stream126_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        conv2d_64_f_map_out132_blk_n = conv2d_64_f_map_out132_full_n;
    end else begin
        conv2d_64_f_map_out132_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv2d_64_f_map_out132_write = 1'b1;
    end else begin
        conv2d_64_f_map_out132_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        conv2d_64_feature_map_stream125_blk_n = conv2d_64_feature_map_stream125_full_n;
    end else begin
        conv2d_64_feature_map_stream125_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv2d_64_feature_map_stream125_write = 1'b1;
    end else begin
        conv2d_64_feature_map_stream125_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_354_ce = 1'b1;
    end else begin
        grp_fu_354_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_358_ce = 1'b1;
    end else begin
        grp_fu_358_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_362_ce = 1'b1;
    end else begin
        grp_fu_362_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_366_ce = 1'b1;
    end else begin
        grp_fu_366_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_370_ce = 1'b1;
    end else begin
        grp_fu_370_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_374_ce = 1'b1;
    end else begin
        grp_fu_374_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_378_ce = 1'b1;
    end else begin
        grp_fu_378_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_382_ce = 1'b1;
    end else begin
        grp_fu_382_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_386_ce = 1'b1;
    end else begin
        grp_fu_386_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_390_ce = 1'b1;
    end else begin
        grp_fu_390_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_394_ce = 1'b1;
    end else begin
        grp_fu_394_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_398_ce = 1'b1;
    end else begin
        grp_fu_398_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_402_ce = 1'b1;
    end else begin
        grp_fu_402_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_406_ce = 1'b1;
    end else begin
        grp_fu_406_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_410_ce = 1'b1;
    end else begin
        grp_fu_410_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_414_ce = 1'b1;
    end else begin
        grp_fu_414_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_418_ce = 1'b1;
    end else begin
        grp_fu_418_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_422_ce = 1'b1;
    end else begin
        grp_fu_422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_426_ce = 1'b1;
    end else begin
        grp_fu_426_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_430_ce = 1'b1;
    end else begin
        grp_fu_430_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_434_ce = 1'b1;
    end else begin
        grp_fu_434_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_438_ce = 1'b1;
    end else begin
        grp_fu_438_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_442_ce = 1'b1;
    end else begin
        grp_fu_442_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_446_ce = 1'b1;
    end else begin
        grp_fu_446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_450_ce = 1'b1;
    end else begin
        grp_fu_450_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_454_ce = 1'b1;
    end else begin
        grp_fu_454_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_458_ce = 1'b1;
    end else begin
        grp_fu_458_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_462_ce = 1'b1;
    end else begin
        grp_fu_462_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_466_ce = 1'b1;
    end else begin
        grp_fu_466_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_470_ce = 1'b1;
    end else begin
        grp_fu_470_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_474_ce = 1'b1;
    end else begin
        grp_fu_474_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_478_ce = 1'b1;
    end else begin
        grp_fu_478_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_482_ce = 1'b1;
    end else begin
        grp_fu_482_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_0_blk_n = in_channel_map_stream_0_empty_n;
    end else begin
        in_channel_map_stream_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_0_read = 1'b1;
    end else begin
        in_channel_map_stream_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_10_blk_n = in_channel_map_stream_10_empty_n;
    end else begin
        in_channel_map_stream_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_10_read = 1'b1;
    end else begin
        in_channel_map_stream_10_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_11_blk_n = in_channel_map_stream_11_empty_n;
    end else begin
        in_channel_map_stream_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_11_read = 1'b1;
    end else begin
        in_channel_map_stream_11_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_1213_blk_n = in_channel_map_stream_1213_empty_n;
    end else begin
        in_channel_map_stream_1213_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_1213_read = 1'b1;
    end else begin
        in_channel_map_stream_1213_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_13_blk_n = in_channel_map_stream_13_empty_n;
    end else begin
        in_channel_map_stream_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_13_read = 1'b1;
    end else begin
        in_channel_map_stream_13_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_14_blk_n = in_channel_map_stream_14_empty_n;
    end else begin
        in_channel_map_stream_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_14_read = 1'b1;
    end else begin
        in_channel_map_stream_14_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_15_blk_n = in_channel_map_stream_15_empty_n;
    end else begin
        in_channel_map_stream_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_15_read = 1'b1;
    end else begin
        in_channel_map_stream_15_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_16_blk_n = in_channel_map_stream_16_empty_n;
    end else begin
        in_channel_map_stream_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_16_read = 1'b1;
    end else begin
        in_channel_map_stream_16_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_17_blk_n = in_channel_map_stream_17_empty_n;
    end else begin
        in_channel_map_stream_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_17_read = 1'b1;
    end else begin
        in_channel_map_stream_17_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_18_blk_n = in_channel_map_stream_18_empty_n;
    end else begin
        in_channel_map_stream_18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_18_read = 1'b1;
    end else begin
        in_channel_map_stream_18_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_19_blk_n = in_channel_map_stream_19_empty_n;
    end else begin
        in_channel_map_stream_19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_19_read = 1'b1;
    end else begin
        in_channel_map_stream_19_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_1_blk_n = in_channel_map_stream_1_empty_n;
    end else begin
        in_channel_map_stream_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_1_read = 1'b1;
    end else begin
        in_channel_map_stream_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_20_blk_n = in_channel_map_stream_20_empty_n;
    end else begin
        in_channel_map_stream_20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_20_read = 1'b1;
    end else begin
        in_channel_map_stream_20_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_21_blk_n = in_channel_map_stream_21_empty_n;
    end else begin
        in_channel_map_stream_21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_21_read = 1'b1;
    end else begin
        in_channel_map_stream_21_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_22_blk_n = in_channel_map_stream_22_empty_n;
    end else begin
        in_channel_map_stream_22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_22_read = 1'b1;
    end else begin
        in_channel_map_stream_22_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_2325_blk_n = in_channel_map_stream_2325_empty_n;
    end else begin
        in_channel_map_stream_2325_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_2325_read = 1'b1;
    end else begin
        in_channel_map_stream_2325_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_24_blk_n = in_channel_map_stream_24_empty_n;
    end else begin
        in_channel_map_stream_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_24_read = 1'b1;
    end else begin
        in_channel_map_stream_24_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_25_blk_n = in_channel_map_stream_25_empty_n;
    end else begin
        in_channel_map_stream_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_25_read = 1'b1;
    end else begin
        in_channel_map_stream_25_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_26_blk_n = in_channel_map_stream_26_empty_n;
    end else begin
        in_channel_map_stream_26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_26_read = 1'b1;
    end else begin
        in_channel_map_stream_26_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_27_blk_n = in_channel_map_stream_27_empty_n;
    end else begin
        in_channel_map_stream_27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_27_read = 1'b1;
    end else begin
        in_channel_map_stream_27_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_28_blk_n = in_channel_map_stream_28_empty_n;
    end else begin
        in_channel_map_stream_28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_28_read = 1'b1;
    end else begin
        in_channel_map_stream_28_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_29_blk_n = in_channel_map_stream_29_empty_n;
    end else begin
        in_channel_map_stream_29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_29_read = 1'b1;
    end else begin
        in_channel_map_stream_29_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_2_blk_n = in_channel_map_stream_2_empty_n;
    end else begin
        in_channel_map_stream_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_2_read = 1'b1;
    end else begin
        in_channel_map_stream_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_30_blk_n = in_channel_map_stream_30_empty_n;
    end else begin
        in_channel_map_stream_30_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_30_read = 1'b1;
    end else begin
        in_channel_map_stream_30_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_31_blk_n = in_channel_map_stream_31_empty_n;
    end else begin
        in_channel_map_stream_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_31_read = 1'b1;
    end else begin
        in_channel_map_stream_31_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_3_blk_n = in_channel_map_stream_3_empty_n;
    end else begin
        in_channel_map_stream_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_3_read = 1'b1;
    end else begin
        in_channel_map_stream_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_4_blk_n = in_channel_map_stream_4_empty_n;
    end else begin
        in_channel_map_stream_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_4_read = 1'b1;
    end else begin
        in_channel_map_stream_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_5_blk_n = in_channel_map_stream_5_empty_n;
    end else begin
        in_channel_map_stream_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_5_read = 1'b1;
    end else begin
        in_channel_map_stream_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_6_blk_n = in_channel_map_stream_6_empty_n;
    end else begin
        in_channel_map_stream_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_6_read = 1'b1;
    end else begin
        in_channel_map_stream_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_7_blk_n = in_channel_map_stream_7_empty_n;
    end else begin
        in_channel_map_stream_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_7_read = 1'b1;
    end else begin
        in_channel_map_stream_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_8_blk_n = in_channel_map_stream_8_empty_n;
    end else begin
        in_channel_map_stream_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_8_read = 1'b1;
    end else begin
        in_channel_map_stream_8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_9_blk_n = in_channel_map_stream_9_empty_n;
    end else begin
        in_channel_map_stream_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_channel_map_stream_9_read = 1'b1;
    end else begin
        in_channel_map_stream_9_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln323_fu_507_p2 = (ap_sig_allocacmp_indvar_flatten_load + 14'd1);

assign add_ln324_fu_660_p2 = (select_ln323_fu_647_p3 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & ((conv2d_64_f_map_out132_full_n == 1'b0) | (conv2d_64_activations_stream126_full_n == 1'b0) | (conv2d_64_feature_map_stream125_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((in_channel_map_stream_31_empty_n == 1'b0) | (in_channel_map_stream_30_empty_n == 1'b0) | (in_channel_map_stream_29_empty_n == 1'b0) | (in_channel_map_stream_28_empty_n == 1'b0) | (in_channel_map_stream_27_empty_n == 1'b0) | (in_channel_map_stream_26_empty_n == 1'b0) | (in_channel_map_stream_25_empty_n == 1'b0) | (in_channel_map_stream_24_empty_n == 1'b0) | (in_channel_map_stream_2325_empty_n == 1'b0) | (in_channel_map_stream_22_empty_n == 1'b0) | (in_channel_map_stream_21_empty_n == 1'b0) | (in_channel_map_stream_20_empty_n == 1'b0) | (in_channel_map_stream_19_empty_n == 1'b0) | (in_channel_map_stream_18_empty_n == 1'b0) | (in_channel_map_stream_17_empty_n == 1'b0) | (in_channel_map_stream_16_empty_n == 1'b0) | (in_channel_map_stream_15_empty_n == 1'b0) | (in_channel_map_stream_14_empty_n == 1'b0) | (in_channel_map_stream_13_empty_n == 1'b0) | (in_channel_map_stream_1213_empty_n == 1'b0) | (in_channel_map_stream_11_empty_n == 1'b0) | (in_channel_map_stream_10_empty_n == 1'b0) | (in_channel_map_stream_9_empty_n == 1'b0) | (in_channel_map_stream_8_empty_n == 1'b0) | (in_channel_map_stream_7_empty_n == 1'b0) | (in_channel_map_stream_6_empty_n == 1'b0) | (in_channel_map_stream_5_empty_n == 1'b0) | (in_channel_map_stream_4_empty_n == 1'b0) | (in_channel_map_stream_3_empty_n == 1'b0) | (in_channel_map_stream_2_empty_n == 1'b0) | (in_channel_map_stream_1_empty_n == 1'b0) | (in_channel_map_stream_0_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & ((conv2d_64_f_map_out132_full_n == 1'b0) | (conv2d_64_activations_stream126_full_n == 1'b0) | (conv2d_64_feature_map_stream125_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((in_channel_map_stream_31_empty_n == 1'b0) | (in_channel_map_stream_30_empty_n == 1'b0) | (in_channel_map_stream_29_empty_n == 1'b0) | (in_channel_map_stream_28_empty_n == 1'b0) | (in_channel_map_stream_27_empty_n == 1'b0) | (in_channel_map_stream_26_empty_n == 1'b0) | (in_channel_map_stream_25_empty_n == 1'b0) | (in_channel_map_stream_24_empty_n == 1'b0) | (in_channel_map_stream_2325_empty_n == 1'b0) | (in_channel_map_stream_22_empty_n == 1'b0) | (in_channel_map_stream_21_empty_n == 1'b0) | (in_channel_map_stream_20_empty_n == 1'b0) | (in_channel_map_stream_19_empty_n == 1'b0) | (in_channel_map_stream_18_empty_n == 1'b0) | (in_channel_map_stream_17_empty_n == 1'b0) | (in_channel_map_stream_16_empty_n == 1'b0) | (in_channel_map_stream_15_empty_n == 1'b0) | (in_channel_map_stream_14_empty_n == 1'b0) | (in_channel_map_stream_13_empty_n == 1'b0) | (in_channel_map_stream_1213_empty_n == 1'b0) | (in_channel_map_stream_11_empty_n == 1'b0) | (in_channel_map_stream_10_empty_n == 1'b0) | (in_channel_map_stream_9_empty_n == 1'b0) | (in_channel_map_stream_8_empty_n == 1'b0) | (in_channel_map_stream_7_empty_n == 1'b0) | (in_channel_map_stream_6_empty_n == 1'b0) | (in_channel_map_stream_5_empty_n == 1'b0) | (in_channel_map_stream_4_empty_n == 1'b0) | (in_channel_map_stream_3_empty_n == 1'b0) | (in_channel_map_stream_2_empty_n == 1'b0) | (in_channel_map_stream_1_empty_n == 1'b0) | (in_channel_map_stream_0_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & ((conv2d_64_f_map_out132_full_n == 1'b0) | (conv2d_64_activations_stream126_full_n == 1'b0) | (conv2d_64_feature_map_stream125_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((in_channel_map_stream_31_empty_n == 1'b0) | (in_channel_map_stream_30_empty_n == 1'b0) | (in_channel_map_stream_29_empty_n == 1'b0) | (in_channel_map_stream_28_empty_n == 1'b0) | (in_channel_map_stream_27_empty_n == 1'b0) | (in_channel_map_stream_26_empty_n == 1'b0) | (in_channel_map_stream_25_empty_n == 1'b0) | (in_channel_map_stream_24_empty_n == 1'b0) | (in_channel_map_stream_2325_empty_n == 1'b0) | (in_channel_map_stream_22_empty_n == 1'b0) | (in_channel_map_stream_21_empty_n == 1'b0) | (in_channel_map_stream_20_empty_n == 1'b0) | (in_channel_map_stream_19_empty_n == 1'b0) | (in_channel_map_stream_18_empty_n == 1'b0) | (in_channel_map_stream_17_empty_n == 1'b0) | (in_channel_map_stream_16_empty_n == 1'b0) | (in_channel_map_stream_15_empty_n == 1'b0) | (in_channel_map_stream_14_empty_n == 1'b0) | (in_channel_map_stream_13_empty_n == 1'b0) | (in_channel_map_stream_1213_empty_n == 1'b0) | (in_channel_map_stream_11_empty_n == 1'b0) | (in_channel_map_stream_10_empty_n == 1'b0) | (in_channel_map_stream_9_empty_n == 1'b0) | (in_channel_map_stream_8_empty_n == 1'b0) | (in_channel_map_stream_7_empty_n == 1'b0) | (in_channel_map_stream_6_empty_n == 1'b0) | (in_channel_map_stream_5_empty_n == 1'b0) | (in_channel_map_stream_4_empty_n == 1'b0) | (in_channel_map_stream_3_empty_n == 1'b0) | (in_channel_map_stream_2_empty_n == 1'b0) | (in_channel_map_stream_1_empty_n == 1'b0) | (in_channel_map_stream_0_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & ((conv2d_64_f_map_out132_full_n == 1'b0) | (conv2d_64_activations_stream126_full_n == 1'b0) | (conv2d_64_feature_map_stream125_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((in_channel_map_stream_31_empty_n == 1'b0) | (in_channel_map_stream_30_empty_n == 1'b0) | (in_channel_map_stream_29_empty_n == 1'b0) | (in_channel_map_stream_28_empty_n == 1'b0) | (in_channel_map_stream_27_empty_n == 1'b0) | (in_channel_map_stream_26_empty_n == 1'b0) | (in_channel_map_stream_25_empty_n == 1'b0) | (in_channel_map_stream_24_empty_n == 1'b0) | (in_channel_map_stream_2325_empty_n == 1'b0) | (in_channel_map_stream_22_empty_n == 1'b0) | (in_channel_map_stream_21_empty_n == 1'b0) | (in_channel_map_stream_20_empty_n == 1'b0) | (in_channel_map_stream_19_empty_n == 1'b0) | (in_channel_map_stream_18_empty_n == 1'b0) | (in_channel_map_stream_17_empty_n == 1'b0) | (in_channel_map_stream_16_empty_n == 1'b0) | (in_channel_map_stream_15_empty_n == 1'b0) | (in_channel_map_stream_14_empty_n == 1'b0) | (in_channel_map_stream_13_empty_n == 1'b0) | (in_channel_map_stream_1213_empty_n == 1'b0) | (in_channel_map_stream_11_empty_n == 1'b0) | (in_channel_map_stream_10_empty_n == 1'b0) | (in_channel_map_stream_9_empty_n == 1'b0) | (in_channel_map_stream_8_empty_n == 1'b0) | (in_channel_map_stream_7_empty_n == 1'b0) | (in_channel_map_stream_6_empty_n == 1'b0) | (in_channel_map_stream_5_empty_n == 1'b0) | (in_channel_map_stream_4_empty_n == 1'b0) | (in_channel_map_stream_3_empty_n == 1'b0) | (in_channel_map_stream_2_empty_n == 1'b0) | (in_channel_map_stream_1_empty_n == 1'b0) | (in_channel_map_stream_0_empty_n == 1'b0))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21 = ((conv2d_64_f_map_out132_full_n == 1'b0) | (conv2d_64_activations_stream126_full_n == 1'b0) | (conv2d_64_feature_map_stream125_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((in_channel_map_stream_31_empty_n == 1'b0) | (in_channel_map_stream_30_empty_n == 1'b0) | (in_channel_map_stream_29_empty_n == 1'b0) | (in_channel_map_stream_28_empty_n == 1'b0) | (in_channel_map_stream_27_empty_n == 1'b0) | (in_channel_map_stream_26_empty_n == 1'b0) | (in_channel_map_stream_25_empty_n == 1'b0) | (in_channel_map_stream_24_empty_n == 1'b0) | (in_channel_map_stream_2325_empty_n == 1'b0) | (in_channel_map_stream_22_empty_n == 1'b0) | (in_channel_map_stream_21_empty_n == 1'b0) | (in_channel_map_stream_20_empty_n == 1'b0) | (in_channel_map_stream_19_empty_n == 1'b0) | (in_channel_map_stream_18_empty_n == 1'b0) | (in_channel_map_stream_17_empty_n == 1'b0) | (in_channel_map_stream_16_empty_n == 1'b0) | (in_channel_map_stream_15_empty_n == 1'b0) | (in_channel_map_stream_14_empty_n == 1'b0) | (in_channel_map_stream_13_empty_n == 1'b0) | (in_channel_map_stream_1213_empty_n == 1'b0) | (in_channel_map_stream_11_empty_n == 1'b0) | (in_channel_map_stream_10_empty_n == 1'b0) | (in_channel_map_stream_9_empty_n == 1'b0) | (in_channel_map_stream_8_empty_n == 1'b0) | (in_channel_map_stream_7_empty_n == 1'b0) | (in_channel_map_stream_6_empty_n == 1'b0) | (in_channel_map_stream_5_empty_n == 1'b0) | (in_channel_map_stream_4_empty_n == 1'b0) | (in_channel_map_stream_3_empty_n == 1'b0) | (in_channel_map_stream_2_empty_n == 1'b0) | (in_channel_map_stream_1_empty_n == 1'b0) | (in_channel_map_stream_0_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_917 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign biases_address0 = filter_1_cast_fu_655_p1;

assign bitcast_ln174_fu_679_p1 = temp_sum_18720_s_reg_1195_pp0_iter20_reg;

assign conv2d_64_activations_stream126_din = grp_fu_482_p2;

assign conv2d_64_f_map_out132_din = select_ln174_fu_682_p3;

assign conv2d_64_feature_map_stream125_din = select_ln174_fu_682_p3;

assign filter_1_cast_fu_655_p1 = select_ln323_fu_647_p3;

assign grp_fu_354_p0 = in_channel_map_stream_30_read_reg_860;

assign grp_fu_354_p1 = in_channel_map_stream_28_read_reg_850;

assign grp_fu_358_p0 = in_channel_map_stream_27_read_reg_845;

assign grp_fu_358_p1 = in_channel_map_stream_24_read_reg_830;

assign grp_fu_362_p0 = in_channel_map_stream_2325_read_reg_825;

assign grp_fu_362_p1 = in_channel_map_stream_26_read_reg_840;

assign grp_fu_366_p0 = in_channel_map_stream_25_read_reg_835;

assign grp_fu_366_p1 = in_channel_map_stream_16_read_reg_790;

assign grp_fu_370_p0 = in_channel_map_stream_15_read_reg_785;

assign grp_fu_370_p1 = in_channel_map_stream_18_read_reg_800;

assign grp_fu_374_p0 = in_channel_map_stream_17_read_reg_795;

assign grp_fu_374_p1 = in_channel_map_stream_20_read_reg_810;

assign grp_fu_378_p0 = in_channel_map_stream_19_read_reg_805;

assign grp_fu_378_p1 = in_channel_map_stream_22_read_reg_820;

assign grp_fu_382_p0 = in_channel_map_stream_21_read_reg_815;

assign grp_fu_382_p1 = in_channel_map_stream_0_read_reg_710;

assign grp_fu_386_p0 = in_channel_map_stream_2_read_reg_720;

assign grp_fu_386_p1 = in_channel_map_stream_1_read_reg_715;

assign grp_fu_390_p0 = in_channel_map_stream_4_read_reg_730;

assign grp_fu_390_p1 = in_channel_map_stream_3_read_reg_725;

assign grp_fu_394_p0 = in_channel_map_stream_6_read_reg_740;

assign grp_fu_394_p1 = in_channel_map_stream_5_read_reg_735;

assign grp_fu_398_p0 = in_channel_map_stream_8_read_reg_750;

assign grp_fu_398_p1 = in_channel_map_stream_7_read_reg_745;

assign grp_fu_402_p0 = in_channel_map_stream_10_read_reg_760;

assign grp_fu_402_p1 = in_channel_map_stream_9_read_reg_755;

assign grp_fu_406_p0 = in_channel_map_stream_1213_read_reg_770;

assign grp_fu_406_p1 = in_channel_map_stream_11_read_reg_765;

assign grp_fu_410_p0 = in_channel_map_stream_13_read_reg_775;

assign grp_fu_410_p1 = in_channel_map_stream_31_read_reg_865;

assign grp_fu_414_p1 = in_channel_map_stream_29_read_reg_855_pp0_iter4_reg;

assign grp_fu_442_p1 = in_channel_map_stream_14_read_reg_780_pp0_iter4_reg;

assign icmp_ln323_fu_501_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 14'd12544) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_641_p2 = ((ap_sig_allocacmp_filter_load == 7'd64) ? 1'b1 : 1'b0);

assign select_ln174_fu_682_p3 = ((grp_fu_482_p2[0:0] == 1'b1) ? bitcast_ln174_fu_679_p1 : 32'd0);

assign select_ln323_fu_647_p3 = ((icmp_ln324_fu_641_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_filter_load);

assign start_out = real_start;

endmodule //accel_conv2d_aggregate_channels_14u_14u_32u_64u_s
