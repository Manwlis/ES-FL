-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accel_dense_128u_3136u_Pipeline_init_sums is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    biases_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    biases_ce0 : OUT STD_LOGIC;
    biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_127_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_127_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_126_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_126_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_125_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_125_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_124_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_124_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_123_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_123_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_122_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_122_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_121_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_121_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_120_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_120_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_119_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_119_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_118_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_118_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_117_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_117_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_116_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_116_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_115_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_115_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_114_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_114_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_113_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_113_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_112_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_112_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_111_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_111_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_110_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_110_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_109_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_109_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_108_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_108_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_107_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_107_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_106_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_106_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_105_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_105_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_104_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_104_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_103_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_103_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_102_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_102_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_101_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_101_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_100_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_100_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_99_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_99_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_98_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_98_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_97_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_97_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_96_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_96_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_95_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_95_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_94_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_94_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_93_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_93_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_92_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_92_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_91_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_91_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_90_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_90_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_89_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_89_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_88_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_88_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_87_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_87_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_86_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_86_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_85_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_85_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_84_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_84_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_83_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_83_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_82_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_82_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_81_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_81_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_80_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_80_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_79_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_79_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_78_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_78_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_77_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_77_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_76_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_76_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_75_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_75_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_74_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_74_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_73_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_73_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_72_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_72_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_71_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_71_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_70_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_70_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_69_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_69_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_68_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_68_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_67_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_67_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_66_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_66_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_65_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_65_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_64_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_64_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_63_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_63_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_62_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_62_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_61_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_61_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_60_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_60_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_59_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_59_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_58_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_58_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_57_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_57_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_56_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_56_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_55_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_55_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_54_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_54_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_53_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_53_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_52_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_52_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_51_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_51_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_50_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_50_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_49_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_49_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_48_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_48_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_47_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_47_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_46_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_46_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_45_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_45_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_44_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_44_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_43_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_43_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_42_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_42_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_41_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_41_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_40_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_40_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_39_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_39_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_38_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_38_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_37_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_37_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_36_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_36_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_35_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_35_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_34_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_34_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_33_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_33_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_32_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_32_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_31_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_31_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_30_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_30_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_29_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_29_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_28_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_28_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_27_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_27_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_26_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_26_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_25_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_25_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_24_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_24_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_23_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_23_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_22_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_22_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_21_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_21_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_20_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_20_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_19_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_19_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_18_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_17_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_17_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_16_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_15_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_14_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_13_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_12_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_11_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_10_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_9_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_8_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_7_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_6_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_5_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_4_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_3_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_2_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_1_out_ap_vld : OUT STD_LOGIC;
    kernel_sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_sum_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of accel_dense_128u_3136u_Pipeline_init_sums is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_53 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv7_59 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_5D : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_const_lv7_5E : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_65 : STD_LOGIC_VECTOR (6 downto 0) := "1100101";
    constant ap_const_lv7_66 : STD_LOGIC_VECTOR (6 downto 0) := "1100110";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_69 : STD_LOGIC_VECTOR (6 downto 0) := "1101001";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv7_6C : STD_LOGIC_VECTOR (6 downto 0) := "1101100";
    constant ap_const_lv7_6D : STD_LOGIC_VECTOR (6 downto 0) := "1101101";
    constant ap_const_lv7_6E : STD_LOGIC_VECTOR (6 downto 0) := "1101110";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv7_75 : STD_LOGIC_VECTOR (6 downto 0) := "1110101";
    constant ap_const_lv7_76 : STD_LOGIC_VECTOR (6 downto 0) := "1110110";
    constant ap_const_lv7_77 : STD_LOGIC_VECTOR (6 downto 0) := "1110111";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_79 : STD_LOGIC_VECTOR (6 downto 0) := "1111001";
    constant ap_const_lv7_7A : STD_LOGIC_VECTOR (6 downto 0) := "1111010";
    constant ap_const_lv7_7B : STD_LOGIC_VECTOR (6 downto 0) := "1111011";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_7E : STD_LOGIC_VECTOR (6 downto 0) := "1111110";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln428_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln429_fu_1990_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln429_reg_3934 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_cast_fu_1985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal k_fu_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln428_fu_1979_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_sum_fu_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_1_fu_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_2_fu_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_3_fu_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_4_fu_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_5_fu_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_6_fu_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_7_fu_572 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_8_fu_576 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_9_fu_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_10_fu_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_11_fu_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_12_fu_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_13_fu_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_14_fu_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_15_fu_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_16_fu_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_17_fu_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_18_fu_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_19_fu_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_20_fu_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_21_fu_628 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_22_fu_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_23_fu_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_24_fu_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_25_fu_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_26_fu_648 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_27_fu_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_28_fu_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_29_fu_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_30_fu_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_31_fu_668 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_32_fu_672 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_33_fu_676 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_34_fu_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_35_fu_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_36_fu_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_37_fu_692 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_38_fu_696 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_39_fu_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_40_fu_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_41_fu_708 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_42_fu_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_43_fu_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_44_fu_720 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_45_fu_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_46_fu_728 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_47_fu_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_48_fu_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_49_fu_740 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_50_fu_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_51_fu_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_52_fu_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_53_fu_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_54_fu_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_55_fu_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_56_fu_768 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_57_fu_772 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_58_fu_776 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_59_fu_780 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_60_fu_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_61_fu_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_62_fu_792 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_63_fu_796 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_64_fu_800 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_65_fu_804 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_66_fu_808 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_67_fu_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_68_fu_816 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_69_fu_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_70_fu_824 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_71_fu_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_72_fu_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_73_fu_836 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_74_fu_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_75_fu_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_76_fu_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_77_fu_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_78_fu_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_79_fu_860 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_80_fu_864 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_81_fu_868 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_82_fu_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_83_fu_876 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_84_fu_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_85_fu_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_86_fu_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_87_fu_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_88_fu_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_89_fu_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_90_fu_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_91_fu_908 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_92_fu_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_93_fu_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_94_fu_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_95_fu_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_96_fu_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_97_fu_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_98_fu_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_99_fu_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_100_fu_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_101_fu_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_102_fu_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_103_fu_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_104_fu_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_105_fu_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_106_fu_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_107_fu_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_108_fu_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_109_fu_980 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_110_fu_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_111_fu_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_112_fu_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_113_fu_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_114_fu_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_115_fu_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_116_fu_1008 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_117_fu_1012 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_118_fu_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_119_fu_1020 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_120_fu_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_121_fu_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_122_fu_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_123_fu_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_124_fu_1040 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_125_fu_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_126_fu_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sum_127_fu_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    k_fu_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_540 <= add_ln428_fu_1979_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_540 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_64) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_100_fu_944 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_65) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_101_fu_948 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_66) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_102_fu_952 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_67) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_103_fu_956 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_68) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_104_fu_960 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_69) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_105_fu_964 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_106_fu_968 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_107_fu_972 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_108_fu_976 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_109_fu_980 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_10_fu_584 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_110_fu_984 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_111_fu_988 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_70) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_112_fu_992 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_71) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_113_fu_996 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_72) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_114_fu_1000 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_73) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_115_fu_1004 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_74) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_116_fu_1008 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_75) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_117_fu_1012 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_76) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_118_fu_1016 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_77) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_119_fu_1020 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_11_fu_588 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_78) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_120_fu_1024 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_79) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_121_fu_1028 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_122_fu_1032 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_123_fu_1036 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_124_fu_1040 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_125_fu_1044 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_126_fu_1048 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_127_fu_1052 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_12_fu_592 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_13_fu_596 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_14_fu_600 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_15_fu_604 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_16_fu_608 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_17_fu_612 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_18_fu_616 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_19_fu_620 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_1_fu_548 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_20_fu_624 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_21_fu_628 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_22_fu_632 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_17) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_23_fu_636 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_24_fu_640 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_25_fu_644 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_26_fu_648 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_27_fu_652 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_28_fu_656 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_29_fu_660 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_2_fu_552 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_30_fu_664 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_1F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_31_fu_668 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_20) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_32_fu_672 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_21) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_33_fu_676 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_22) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_34_fu_680 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_23) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_35_fu_684 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_36_fu_688 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_25) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_37_fu_692 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_26) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_38_fu_696 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_27) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_39_fu_700 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_3_fu_556 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_28) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_40_fu_704 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_29) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_41_fu_708 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_42_fu_712 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_43_fu_716 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_44_fu_720 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_45_fu_724 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_46_fu_728 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_2F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_47_fu_732 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_30) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_48_fu_736 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_31) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_49_fu_740 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_4_fu_560 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_32) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_50_fu_744 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_33) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_51_fu_748 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_34) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_52_fu_752 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_35) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_53_fu_756 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_36) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_54_fu_760 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_37) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_55_fu_764 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_38) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_56_fu_768 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_39) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_57_fu_772 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_58_fu_776 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_59_fu_780 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_5_fu_564 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_60_fu_784 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_61_fu_788 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_62_fu_792 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_3F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_63_fu_796 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_40) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_64_fu_800 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_41) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_65_fu_804 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_42) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_66_fu_808 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_43) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_67_fu_812 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_44) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_68_fu_816 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_45) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_69_fu_820 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_6_fu_568 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_46) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_70_fu_824 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_47) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_71_fu_828 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_48) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_72_fu_832 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_49) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_73_fu_836 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_74_fu_840 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_75_fu_844 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_76_fu_848 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_77_fu_852 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_78_fu_856 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_4F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_79_fu_860 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_7_fu_572 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_50) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_80_fu_864 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_51) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_81_fu_868 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_52) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_82_fu_872 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_53) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_83_fu_876 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_54) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_84_fu_880 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_55) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_85_fu_884 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_56) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_86_fu_888 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_57) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_87_fu_892 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_58) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_88_fu_896 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_59) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_89_fu_900 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_8_fu_576 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_90_fu_904 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_91_fu_908 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_92_fu_912 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_93_fu_916 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_94_fu_920 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_5F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_95_fu_924 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_60) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_96_fu_928 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_61) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_97_fu_932 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_62) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_98_fu_936 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_63) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_99_fu_940 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_9_fu_580 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln429_reg_3934 = ap_const_lv7_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_fu_544 <= biases_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln429_reg_3934 <= trunc_ln429_fu_1990_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln428_fu_1979_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_1) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln428_fu_1973_p2)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_540, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_1 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_k_1 <= k_fu_540;
        end if; 
    end process;

    biases_address0 <= k_cast_fu_1985_p1(7 - 1 downto 0);

    biases_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            biases_ce0 <= ap_const_logic_1;
        else 
            biases_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln428_fu_1973_p2 <= "1" when (ap_sig_allocacmp_k_1 = ap_const_lv8_80) else "0";
    k_cast_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_k_1),64));
    kernel_sum_100_out <= kernel_sum_100_fu_944;

    kernel_sum_100_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_100_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_100_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_101_out <= kernel_sum_101_fu_948;

    kernel_sum_101_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_101_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_101_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_102_out <= kernel_sum_102_fu_952;

    kernel_sum_102_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_102_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_102_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_103_out <= kernel_sum_103_fu_956;

    kernel_sum_103_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_103_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_103_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_104_out <= kernel_sum_104_fu_960;

    kernel_sum_104_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_104_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_104_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_105_out <= kernel_sum_105_fu_964;

    kernel_sum_105_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_105_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_105_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_106_out <= kernel_sum_106_fu_968;

    kernel_sum_106_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_106_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_106_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_107_out <= kernel_sum_107_fu_972;

    kernel_sum_107_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_107_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_107_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_108_out <= kernel_sum_108_fu_976;

    kernel_sum_108_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_108_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_108_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_109_out <= kernel_sum_109_fu_980;

    kernel_sum_109_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_109_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_109_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_10_out <= kernel_sum_10_fu_584;

    kernel_sum_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_10_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_110_out <= kernel_sum_110_fu_984;

    kernel_sum_110_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_110_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_110_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_111_out <= kernel_sum_111_fu_988;

    kernel_sum_111_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_111_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_111_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_112_out <= kernel_sum_112_fu_992;

    kernel_sum_112_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_112_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_112_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_113_out <= kernel_sum_113_fu_996;

    kernel_sum_113_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_113_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_113_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_114_out <= kernel_sum_114_fu_1000;

    kernel_sum_114_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_114_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_114_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_115_out <= kernel_sum_115_fu_1004;

    kernel_sum_115_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_115_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_115_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_116_out <= kernel_sum_116_fu_1008;

    kernel_sum_116_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_116_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_116_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_117_out <= kernel_sum_117_fu_1012;

    kernel_sum_117_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_117_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_117_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_118_out <= kernel_sum_118_fu_1016;

    kernel_sum_118_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_118_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_118_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_119_out <= kernel_sum_119_fu_1020;

    kernel_sum_119_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_119_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_119_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_11_out <= kernel_sum_11_fu_588;

    kernel_sum_11_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_11_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_120_out <= kernel_sum_120_fu_1024;

    kernel_sum_120_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_120_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_120_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_121_out <= kernel_sum_121_fu_1028;

    kernel_sum_121_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_121_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_121_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_122_out <= kernel_sum_122_fu_1032;

    kernel_sum_122_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_122_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_122_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_123_out <= kernel_sum_123_fu_1036;

    kernel_sum_123_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_123_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_123_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_124_out <= kernel_sum_124_fu_1040;

    kernel_sum_124_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_124_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_124_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_125_out <= kernel_sum_125_fu_1044;

    kernel_sum_125_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_125_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_125_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_126_out <= kernel_sum_126_fu_1048;

    kernel_sum_126_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_126_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_126_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_127_out <= kernel_sum_127_fu_1052;

    kernel_sum_127_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_127_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_127_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_12_out <= kernel_sum_12_fu_592;

    kernel_sum_12_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_12_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_13_out <= kernel_sum_13_fu_596;

    kernel_sum_13_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_13_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_14_out <= kernel_sum_14_fu_600;

    kernel_sum_14_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_14_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_15_out <= kernel_sum_15_fu_604;

    kernel_sum_15_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_15_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_16_out <= kernel_sum_16_fu_608;

    kernel_sum_16_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_16_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_17_out <= kernel_sum_17_fu_612;

    kernel_sum_17_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_17_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_18_out <= kernel_sum_18_fu_616;

    kernel_sum_18_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_18_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_19_out <= kernel_sum_19_fu_620;

    kernel_sum_19_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_19_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_1_out <= kernel_sum_1_fu_548;

    kernel_sum_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_1_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_20_out <= kernel_sum_20_fu_624;

    kernel_sum_20_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_20_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_21_out <= kernel_sum_21_fu_628;

    kernel_sum_21_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_21_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_22_out <= kernel_sum_22_fu_632;

    kernel_sum_22_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_22_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_23_out <= kernel_sum_23_fu_636;

    kernel_sum_23_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_23_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_24_out <= kernel_sum_24_fu_640;

    kernel_sum_24_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_24_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_25_out <= kernel_sum_25_fu_644;

    kernel_sum_25_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_25_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_26_out <= kernel_sum_26_fu_648;

    kernel_sum_26_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_26_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_27_out <= kernel_sum_27_fu_652;

    kernel_sum_27_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_27_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_28_out <= kernel_sum_28_fu_656;

    kernel_sum_28_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_28_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_29_out <= kernel_sum_29_fu_660;

    kernel_sum_29_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_29_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_2_out <= kernel_sum_2_fu_552;

    kernel_sum_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_2_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_30_out <= kernel_sum_30_fu_664;

    kernel_sum_30_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_30_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_31_out <= kernel_sum_31_fu_668;

    kernel_sum_31_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_31_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_32_out <= kernel_sum_32_fu_672;

    kernel_sum_32_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_32_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_33_out <= kernel_sum_33_fu_676;

    kernel_sum_33_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_33_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_34_out <= kernel_sum_34_fu_680;

    kernel_sum_34_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_34_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_35_out <= kernel_sum_35_fu_684;

    kernel_sum_35_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_35_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_36_out <= kernel_sum_36_fu_688;

    kernel_sum_36_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_36_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_37_out <= kernel_sum_37_fu_692;

    kernel_sum_37_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_37_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_38_out <= kernel_sum_38_fu_696;

    kernel_sum_38_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_38_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_39_out <= kernel_sum_39_fu_700;

    kernel_sum_39_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_39_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_3_out <= kernel_sum_3_fu_556;

    kernel_sum_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_3_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_40_out <= kernel_sum_40_fu_704;

    kernel_sum_40_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_40_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_40_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_41_out <= kernel_sum_41_fu_708;

    kernel_sum_41_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_41_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_41_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_42_out <= kernel_sum_42_fu_712;

    kernel_sum_42_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_42_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_42_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_43_out <= kernel_sum_43_fu_716;

    kernel_sum_43_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_43_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_43_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_44_out <= kernel_sum_44_fu_720;

    kernel_sum_44_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_44_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_44_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_45_out <= kernel_sum_45_fu_724;

    kernel_sum_45_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_45_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_45_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_46_out <= kernel_sum_46_fu_728;

    kernel_sum_46_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_46_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_46_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_47_out <= kernel_sum_47_fu_732;

    kernel_sum_47_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_47_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_47_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_48_out <= kernel_sum_48_fu_736;

    kernel_sum_48_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_48_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_48_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_49_out <= kernel_sum_49_fu_740;

    kernel_sum_49_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_49_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_49_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_4_out <= kernel_sum_4_fu_560;

    kernel_sum_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_4_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_50_out <= kernel_sum_50_fu_744;

    kernel_sum_50_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_50_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_50_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_51_out <= kernel_sum_51_fu_748;

    kernel_sum_51_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_51_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_51_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_52_out <= kernel_sum_52_fu_752;

    kernel_sum_52_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_52_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_52_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_53_out <= kernel_sum_53_fu_756;

    kernel_sum_53_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_53_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_53_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_54_out <= kernel_sum_54_fu_760;

    kernel_sum_54_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_54_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_54_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_55_out <= kernel_sum_55_fu_764;

    kernel_sum_55_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_55_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_55_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_56_out <= kernel_sum_56_fu_768;

    kernel_sum_56_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_56_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_56_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_57_out <= kernel_sum_57_fu_772;

    kernel_sum_57_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_57_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_57_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_58_out <= kernel_sum_58_fu_776;

    kernel_sum_58_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_58_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_58_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_59_out <= kernel_sum_59_fu_780;

    kernel_sum_59_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_59_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_59_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_5_out <= kernel_sum_5_fu_564;

    kernel_sum_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_5_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_60_out <= kernel_sum_60_fu_784;

    kernel_sum_60_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_60_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_60_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_61_out <= kernel_sum_61_fu_788;

    kernel_sum_61_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_61_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_61_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_62_out <= kernel_sum_62_fu_792;

    kernel_sum_62_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_62_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_62_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_63_out <= kernel_sum_63_fu_796;

    kernel_sum_63_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_63_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_63_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_64_out <= kernel_sum_64_fu_800;

    kernel_sum_64_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_64_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_64_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_65_out <= kernel_sum_65_fu_804;

    kernel_sum_65_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_65_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_65_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_66_out <= kernel_sum_66_fu_808;

    kernel_sum_66_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_66_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_66_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_67_out <= kernel_sum_67_fu_812;

    kernel_sum_67_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_67_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_67_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_68_out <= kernel_sum_68_fu_816;

    kernel_sum_68_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_68_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_68_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_69_out <= kernel_sum_69_fu_820;

    kernel_sum_69_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_69_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_69_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_6_out <= kernel_sum_6_fu_568;

    kernel_sum_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_6_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_70_out <= kernel_sum_70_fu_824;

    kernel_sum_70_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_70_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_70_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_71_out <= kernel_sum_71_fu_828;

    kernel_sum_71_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_71_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_71_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_72_out <= kernel_sum_72_fu_832;

    kernel_sum_72_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_72_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_72_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_73_out <= kernel_sum_73_fu_836;

    kernel_sum_73_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_73_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_73_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_74_out <= kernel_sum_74_fu_840;

    kernel_sum_74_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_74_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_74_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_75_out <= kernel_sum_75_fu_844;

    kernel_sum_75_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_75_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_75_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_76_out <= kernel_sum_76_fu_848;

    kernel_sum_76_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_76_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_76_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_77_out <= kernel_sum_77_fu_852;

    kernel_sum_77_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_77_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_77_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_78_out <= kernel_sum_78_fu_856;

    kernel_sum_78_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_78_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_78_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_79_out <= kernel_sum_79_fu_860;

    kernel_sum_79_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_79_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_79_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_7_out <= kernel_sum_7_fu_572;

    kernel_sum_7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_7_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_80_out <= kernel_sum_80_fu_864;

    kernel_sum_80_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_80_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_80_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_81_out <= kernel_sum_81_fu_868;

    kernel_sum_81_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_81_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_81_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_82_out <= kernel_sum_82_fu_872;

    kernel_sum_82_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_82_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_82_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_83_out <= kernel_sum_83_fu_876;

    kernel_sum_83_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_83_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_83_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_84_out <= kernel_sum_84_fu_880;

    kernel_sum_84_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_84_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_84_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_85_out <= kernel_sum_85_fu_884;

    kernel_sum_85_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_85_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_85_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_86_out <= kernel_sum_86_fu_888;

    kernel_sum_86_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_86_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_86_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_87_out <= kernel_sum_87_fu_892;

    kernel_sum_87_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_87_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_87_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_88_out <= kernel_sum_88_fu_896;

    kernel_sum_88_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_88_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_88_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_89_out <= kernel_sum_89_fu_900;

    kernel_sum_89_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_89_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_89_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_8_out <= kernel_sum_8_fu_576;

    kernel_sum_8_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_8_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_90_out <= kernel_sum_90_fu_904;

    kernel_sum_90_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_90_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_90_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_91_out <= kernel_sum_91_fu_908;

    kernel_sum_91_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_91_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_91_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_92_out <= kernel_sum_92_fu_912;

    kernel_sum_92_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_92_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_92_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_93_out <= kernel_sum_93_fu_916;

    kernel_sum_93_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_93_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_93_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_94_out <= kernel_sum_94_fu_920;

    kernel_sum_94_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_94_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_94_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_95_out <= kernel_sum_95_fu_924;

    kernel_sum_95_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_95_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_95_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_96_out <= kernel_sum_96_fu_928;

    kernel_sum_96_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_96_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_96_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_97_out <= kernel_sum_97_fu_932;

    kernel_sum_97_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_97_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_97_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_98_out <= kernel_sum_98_fu_936;

    kernel_sum_98_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_98_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_98_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_99_out <= kernel_sum_99_fu_940;

    kernel_sum_99_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_99_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_99_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_9_out <= kernel_sum_9_fu_580;

    kernel_sum_9_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_9_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    kernel_sum_out <= kernel_sum_fu_544;

    kernel_sum_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln428_fu_1973_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln428_fu_1973_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_sum_out_ap_vld <= ap_const_logic_1;
        else 
            kernel_sum_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln429_fu_1990_p1 <= ap_sig_allocacmp_k_1(7 - 1 downto 0);
end behav;
