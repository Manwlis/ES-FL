-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accel_softmax_10u_128u_Pipeline_calc_sums_and_max is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sum_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_feature_map_stream128_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_feature_map_stream128_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    dense_feature_map_stream128_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    dense_feature_map_stream128_empty_n : IN STD_LOGIC;
    dense_feature_map_stream128_read : OUT STD_LOGIC;
    weights_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_0_ce1 : OUT STD_LOGIC;
    weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_1_ce1 : OUT STD_LOGIC;
    weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_2_ce0 : OUT STD_LOGIC;
    weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_2_ce1 : OUT STD_LOGIC;
    weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    add18_945_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_945_out_ap_vld : OUT STD_LOGIC;
    add18_843_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_843_out_ap_vld : OUT STD_LOGIC;
    add18_741_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_741_out_ap_vld : OUT STD_LOGIC;
    add18_639_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_639_out_ap_vld : OUT STD_LOGIC;
    add18_537_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_537_out_ap_vld : OUT STD_LOGIC;
    add18_435_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_435_out_ap_vld : OUT STD_LOGIC;
    add18_333_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_333_out_ap_vld : OUT STD_LOGIC;
    add18_231_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_231_out_ap_vld : OUT STD_LOGIC;
    add18_129_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add18_129_out_ap_vld : OUT STD_LOGIC;
    add1827_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add1827_out_ap_vld : OUT STD_LOGIC;
    grp_fu_203_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_203_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_203_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_203_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_203_p_ce : OUT STD_LOGIC );
end;


architecture behav of accel_softmax_10u_128u_Pipeline_calc_sums_and_max is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv23_AAB : STD_LOGIC_VECTOR (22 downto 0) := "00000000000101010101011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln468_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dense_feature_map_stream128_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_643 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln468_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln468_reg_1272_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln468_reg_1272_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln468_reg_1272_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln468_reg_1272_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln468_reg_1272_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_126_fu_747_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_126_reg_1276 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_126_reg_1276_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_126_reg_1276_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_753_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal urem_ln476_reg_1323 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln_fu_837_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln_reg_1333 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_reg_1429 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_reg_1434 : STD_LOGIC_VECTOR (9 downto 0);
    signal dense_feature_map_stream128_read_reg_1439 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_595_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1444 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_606_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1449 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_617_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1454 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_628_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1459 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_941_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_952_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_1534 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1551 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1556 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1561 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_1_reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_2_reg_1571 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_3_reg_1591 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_4_reg_1596 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_5_reg_1601 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_6_reg_1621 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_7_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_8_reg_1631 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul15_9_reg_1651 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal zext_ln476_fu_830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln476_1_fu_855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_2_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_3_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_4_fu_900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_5_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_6_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_7_fu_975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_8_fu_981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_9_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal softmax_max_10_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal softmax_max_11_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_12_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_13_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_14_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_15_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_16_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_17_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_18_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_max_19_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal i_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln468_fu_715_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_i_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal grp_fu_571_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_575_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_579_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_583_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_587_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_124_fu_721_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_fu_725_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_125_fu_737_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_733_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl13_cast_fu_743_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_753_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_753_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln476_fu_767_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln476_fu_776_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln476_2_fu_785_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln476_3_fu_794_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln476_5_fu_803_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln476_6_fu_812_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_821_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1135_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_10_fu_821_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln_fu_837_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_846_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1143_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_846_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_862_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1150_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_862_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln476_1_fu_878_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_891_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1157_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_fu_891_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_907_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1164_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_14_fu_907_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_923_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1171_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_16_fu_932_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1178_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln476_4_fu_963_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln476_7_fu_987_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1135_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1135_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1143_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1143_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1150_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1150_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1157_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1157_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1164_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1164_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1171_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1171_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1178_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1178_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal grp_fu_571_ce : STD_LOGIC;
    signal grp_fu_575_ce : STD_LOGIC;
    signal grp_fu_579_ce : STD_LOGIC;
    signal grp_fu_583_ce : STD_LOGIC;
    signal grp_fu_587_ce : STD_LOGIC;
    signal grp_fu_591_ce : STD_LOGIC;
    signal grp_fu_753_ce : STD_LOGIC;
    signal grp_fu_1135_ce : STD_LOGIC;
    signal grp_fu_1143_ce : STD_LOGIC;
    signal grp_fu_1150_ce : STD_LOGIC;
    signal grp_fu_1157_ce : STD_LOGIC;
    signal grp_fu_1164_ce : STD_LOGIC;
    signal grp_fu_1171_ce : STD_LOGIC;
    signal grp_fu_1178_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter5_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to6 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1135_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1143_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1150_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1157_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1164_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1171_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1178_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component accel_faddfsub_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component accel_fadd_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component accel_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component accel_mux_311_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component accel_urem_11ns_3ns_11_15_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component accel_mul_mul_11ns_12ns_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_3_full_dsp_1_U20360 : component accel_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_575_p0,
        din1 => grp_fu_575_p1,
        ce => grp_fu_575_ce,
        dout => grp_fu_575_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U20361 : component accel_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_579_p0,
        din1 => grp_fu_579_p1,
        ce => grp_fu_579_ce,
        dout => grp_fu_579_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U20362 : component accel_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_583_p0,
        din1 => grp_fu_583_p1,
        ce => grp_fu_583_ce,
        dout => grp_fu_583_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U20363 : component accel_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_587_p0,
        din1 => grp_fu_587_p1,
        ce => grp_fu_587_ce,
        dout => grp_fu_587_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U20364 : component accel_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_591_p0,
        din1 => grp_fu_591_p1,
        ce => grp_fu_591_ce,
        dout => grp_fu_591_p2);

    mux_311_32_1_1_U20365 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_0_q0,
        din1 => weights_1_q0,
        din2 => weights_2_q0,
        din3 => urem_ln476_reg_1323,
        dout => grp_fu_595_p5);

    mux_311_32_1_1_U20366 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_1_q0,
        din1 => weights_2_q0,
        din2 => weights_0_q0,
        din3 => urem_ln476_reg_1323,
        dout => grp_fu_606_p5);

    mux_311_32_1_1_U20367 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_2_q0,
        din1 => weights_0_q0,
        din2 => weights_1_q0,
        din3 => urem_ln476_reg_1323,
        dout => grp_fu_617_p5);

    mux_311_32_1_1_U20368 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_0_q1,
        din1 => weights_1_q1,
        din2 => weights_2_q1,
        din3 => urem_ln476_reg_1323,
        dout => grp_fu_628_p5);

    urem_11ns_3ns_11_15_1_U20369 : component accel_urem_11ns_3ns_11_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 3,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_753_p0,
        din1 => grp_fu_753_p1,
        ce => grp_fu_753_ce,
        dout => grp_fu_753_p2);

    mux_311_32_1_1_U20370 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_1_q1,
        din1 => weights_2_q1,
        din2 => weights_0_q1,
        din3 => urem_ln476_reg_1323,
        dout => tmp_9_fu_941_p5);

    mux_311_32_1_1_U20371 : component accel_mux_311_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        din0 => weights_2_q1,
        din1 => weights_0_q1,
        din2 => weights_1_q1,
        din3 => urem_ln476_reg_1323,
        dout => tmp_s_fu_952_p5);

    mul_mul_11ns_12ns_23_4_1_U20372 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1135_p0,
        din1 => grp_fu_1135_p1,
        ce => grp_fu_1135_ce,
        dout => grp_fu_1135_p2);

    mul_mul_11ns_12ns_23_4_1_U20373 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1143_p0,
        din1 => grp_fu_1143_p1,
        ce => grp_fu_1143_ce,
        dout => grp_fu_1143_p2);

    mul_mul_11ns_12ns_23_4_1_U20374 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1150_p0,
        din1 => grp_fu_1150_p1,
        ce => grp_fu_1150_ce,
        dout => grp_fu_1150_p2);

    mul_mul_11ns_12ns_23_4_1_U20375 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1157_p0,
        din1 => grp_fu_1157_p1,
        ce => grp_fu_1157_ce,
        dout => grp_fu_1157_p2);

    mul_mul_11ns_12ns_23_4_1_U20376 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1164_p0,
        din1 => grp_fu_1164_p1,
        ce => grp_fu_1164_ce,
        dout => grp_fu_1164_p2);

    mul_mul_11ns_12ns_23_4_1_U20377 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1171_p0,
        din1 => grp_fu_1171_p1,
        ce => grp_fu_1171_ce,
        dout => grp_fu_1171_p2);

    mul_mul_11ns_12ns_23_4_1_U20378 : component accel_mul_mul_11ns_12ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1178_p0,
        din1 => grp_fu_1178_p1,
        ce => grp_fu_1178_ce,
        dout => grp_fu_1178_p2);

    flow_control_loop_pipe_sequential_init_U : component accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    i_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln468_fu_709_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_164 <= add_ln468_fu_715_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_164 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    softmax_max_10_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_10_fu_124 <= sum_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                softmax_max_10_fu_124 <= reg_639;
            end if; 
        end if;
    end process;

    softmax_max_11_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_11_fu_128 <= sum_1_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                softmax_max_11_fu_128 <= reg_643;
            end if; 
        end if;
    end process;

    softmax_max_12_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_12_fu_132 <= sum_2_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                softmax_max_12_fu_132 <= reg_647;
            end if; 
        end if;
    end process;

    softmax_max_13_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_13_fu_136 <= sum_3_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                softmax_max_13_fu_136 <= reg_639;
            end if; 
        end if;
    end process;

    softmax_max_14_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_14_fu_140 <= sum_4_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                softmax_max_14_fu_140 <= reg_643;
            end if; 
        end if;
    end process;

    softmax_max_15_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_15_fu_144 <= sum_5_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                softmax_max_15_fu_144 <= reg_647;
            end if; 
        end if;
    end process;

    softmax_max_16_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    softmax_max_16_fu_148 <= sum_6_reload;
                elsif ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then 
                    softmax_max_16_fu_148 <= reg_639;
                end if;
            end if; 
        end if;
    end process;

    softmax_max_17_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    softmax_max_17_fu_152 <= sum_7_reload;
                elsif ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then 
                    softmax_max_17_fu_152 <= reg_643;
                end if;
            end if; 
        end if;
    end process;

    softmax_max_18_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    softmax_max_18_fu_156 <= sum_8_reload;
                elsif ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then 
                    softmax_max_18_fu_156 <= reg_647;
                end if;
            end if; 
        end if;
    end process;

    softmax_max_19_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                softmax_max_19_fu_160 <= sum_9_reload;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                softmax_max_19_fu_160 <= reg_639;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                dense_feature_map_stream128_read_reg_1439 <= dense_feature_map_stream128_dout;
                    empty_126_reg_1276_pp0_iter1_reg(10 downto 1) <= empty_126_reg_1276(10 downto 1);
                    empty_126_reg_1276_pp0_iter2_reg(10 downto 1) <= empty_126_reg_1276_pp0_iter1_reg(10 downto 1);
                icmp_ln468_reg_1272 <= icmp_ln468_fu_709_p2;
                icmp_ln468_reg_1272_pp0_iter1_reg <= icmp_ln468_reg_1272;
                icmp_ln468_reg_1272_pp0_iter2_reg <= icmp_ln468_reg_1272_pp0_iter1_reg;
                icmp_ln468_reg_1272_pp0_iter3_reg <= icmp_ln468_reg_1272_pp0_iter2_reg;
                icmp_ln468_reg_1272_pp0_iter4_reg <= icmp_ln468_reg_1272_pp0_iter3_reg;
                icmp_ln468_reg_1272_pp0_iter5_reg <= icmp_ln468_reg_1272_pp0_iter4_reg;
                tmp_9_reg_1464 <= tmp_9_fu_941_p5;
                tmp_s_reg_1469 <= tmp_s_fu_952_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln468_fu_709_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    empty_126_reg_1276(10 downto 1) <= empty_126_fu_747_p2(10 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul15_1_reg_1566 <= grp_fu_587_p2;
                mul15_2_reg_1571 <= grp_fu_591_p2;
                mul_reg_1561 <= grp_fu_583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul15_3_reg_1591 <= grp_fu_583_p2;
                mul15_4_reg_1596 <= grp_fu_587_p2;
                mul15_5_reg_1601 <= grp_fu_591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul15_6_reg_1621 <= grp_fu_583_p2;
                mul15_7_reg_1626 <= grp_fu_587_p2;
                mul15_8_reg_1631 <= grp_fu_591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul15_9_reg_1651 <= grp_fu_583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_639 <= grp_fu_203_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_643 <= grp_fu_575_p2;
                reg_647 <= grp_fu_579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_15_reg_1429 <= tmp_15_fu_923_p1(22 downto 13);
                tmp_16_reg_1434 <= tmp_16_fu_932_p1(22 downto 13);
                trunc_ln_reg_1333 <= trunc_ln_fu_837_p1(21 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_17_reg_1534 <= tmp_17_fu_999_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_1_reg_1541 <= grp_fu_628_p5;
                tmp_2_reg_1546 <= grp_fu_606_p5;
                tmp_3_reg_1551 <= grp_fu_617_p5;
                tmp_4_reg_1556 <= grp_fu_595_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_6_reg_1449 <= grp_fu_606_p5;
                tmp_7_reg_1454 <= grp_fu_617_p5;
                tmp_8_reg_1459 <= grp_fu_628_p5;
                tmp_reg_1444 <= grp_fu_595_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                urem_ln476_reg_1323 <= grp_fu_753_p2;
            end if;
        end if;
    end process;
    empty_126_reg_1276(0) <= '0';
    empty_126_reg_1276_pp0_iter1_reg(0) <= '0';
    empty_126_reg_1276_pp0_iter2_reg(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter5_stage1, ap_idle_pp0_0to4, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to6, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add1827_out <= softmax_max_10_fu_124;

    add1827_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add1827_out_ap_vld <= ap_const_logic_1;
        else 
            add1827_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_129_out <= softmax_max_11_fu_128;

    add18_129_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_129_out_ap_vld <= ap_const_logic_1;
        else 
            add18_129_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_231_out <= softmax_max_12_fu_132;

    add18_231_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_231_out_ap_vld <= ap_const_logic_1;
        else 
            add18_231_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_333_out <= softmax_max_13_fu_136;

    add18_333_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_333_out_ap_vld <= ap_const_logic_1;
        else 
            add18_333_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_435_out <= softmax_max_14_fu_140;

    add18_435_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_435_out_ap_vld <= ap_const_logic_1;
        else 
            add18_435_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_537_out <= softmax_max_15_fu_144;

    add18_537_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_537_out_ap_vld <= ap_const_logic_1;
        else 
            add18_537_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_639_out <= softmax_max_16_fu_148;

    add18_639_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_639_out_ap_vld <= ap_const_logic_1;
        else 
            add18_639_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_741_out <= softmax_max_17_fu_152;

    add18_741_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_741_out_ap_vld <= ap_const_logic_1;
        else 
            add18_741_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_843_out <= softmax_max_18_fu_156;

    add18_843_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_843_out_ap_vld <= ap_const_logic_1;
        else 
            add18_843_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add18_945_out <= softmax_max_19_fu_160;

    add18_945_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln468_reg_1272_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add18_945_out_ap_vld <= ap_const_logic_1;
        else 
            add18_945_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln468_fu_715_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_11) + unsigned(ap_const_lv8_1));
    add_ln476_1_fu_878_p2 <= std_logic_vector(unsigned(trunc_ln_fu_837_p4) + unsigned(ap_const_lv9_1));
    add_ln476_2_fu_785_p2 <= std_logic_vector(unsigned(empty_126_reg_1276_pp0_iter2_reg) + unsigned(ap_const_lv11_4));
    add_ln476_3_fu_794_p2 <= std_logic_vector(unsigned(empty_126_reg_1276_pp0_iter2_reg) + unsigned(ap_const_lv11_5));
    add_ln476_4_fu_963_p2 <= std_logic_vector(unsigned(trunc_ln_reg_1333) + unsigned(ap_const_lv9_2));
    add_ln476_5_fu_803_p2 <= std_logic_vector(unsigned(empty_126_reg_1276_pp0_iter2_reg) + unsigned(ap_const_lv11_7));
    add_ln476_6_fu_812_p2 <= std_logic_vector(unsigned(empty_126_reg_1276_pp0_iter2_reg) + unsigned(ap_const_lv11_8));
    add_ln476_7_fu_987_p2 <= std_logic_vector(unsigned(trunc_ln_reg_1333) + unsigned(ap_const_lv9_3));
    add_ln476_fu_776_p2 <= std_logic_vector(unsigned(empty_126_reg_1276_pp0_iter2_reg) + unsigned(ap_const_lv11_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter4, dense_feature_map_stream128_empty_n)
    begin
                ap_block_pp0_stage0_00001 <= ((dense_feature_map_stream128_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, dense_feature_map_stream128_empty_n)
    begin
                ap_block_pp0_stage0_11001 <= ((dense_feature_map_stream128_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, dense_feature_map_stream128_empty_n)
    begin
                ap_block_pp0_stage0_subdone <= ((dense_feature_map_stream128_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp0_stage0_iter4_assign_proc : process(dense_feature_map_stream128_empty_n)
    begin
                ap_block_state17_pp0_stage0_iter4 <= (dense_feature_map_stream128_empty_n = ap_const_logic_0);
    end process;

        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln468_reg_1272)
    begin
        if (((icmp_ln468_reg_1272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter5_stage1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, icmp_ln468_reg_1272_pp0_iter5_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln468_reg_1272_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter5_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter5_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to6 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_11_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_164)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_11 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_i_11 <= i_fu_164;
        end if; 
    end process;


    dense_feature_map_stream128_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, dense_feature_map_stream128_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_feature_map_stream128_blk_n <= dense_feature_map_stream128_empty_n;
        else 
            dense_feature_map_stream128_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dense_feature_map_stream128_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dense_feature_map_stream128_read <= ap_const_logic_1;
        else 
            dense_feature_map_stream128_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_124_fu_721_p1 <= ap_sig_allocacmp_i_11(7 - 1 downto 0);
    empty_125_fu_737_p2 <= std_logic_vector(shift_left(unsigned(ap_sig_allocacmp_i_11),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    empty_126_fu_747_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_733_p1) + unsigned(p_shl13_cast_fu_743_p1));

    grp_fu_1135_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1135_ce <= ap_const_logic_1;
        else 
            grp_fu_1135_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1135_p0 <= grp_fu_1135_p00(11 - 1 downto 0);
    grp_fu_1135_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_126_reg_1276_pp0_iter2_reg),23));
    grp_fu_1135_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1143_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1143_ce <= ap_const_logic_1;
        else 
            grp_fu_1143_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1143_p0 <= grp_fu_1143_p00(11 - 1 downto 0);
    grp_fu_1143_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln476_fu_767_p2),23));
    grp_fu_1143_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1150_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1150_ce <= ap_const_logic_1;
        else 
            grp_fu_1150_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1150_p0 <= grp_fu_1150_p00(11 - 1 downto 0);
    grp_fu_1150_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_fu_776_p2),23));
    grp_fu_1150_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1157_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1157_ce <= ap_const_logic_1;
        else 
            grp_fu_1157_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1157_p0 <= grp_fu_1157_p00(11 - 1 downto 0);
    grp_fu_1157_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_2_fu_785_p2),23));
    grp_fu_1157_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1164_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1164_ce <= ap_const_logic_1;
        else 
            grp_fu_1164_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1164_p0 <= grp_fu_1164_p00(11 - 1 downto 0);
    grp_fu_1164_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_3_fu_794_p2),23));
    grp_fu_1164_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1171_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1171_ce <= ap_const_logic_1;
        else 
            grp_fu_1171_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1171_p0 <= grp_fu_1171_p00(11 - 1 downto 0);
    grp_fu_1171_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_5_fu_803_p2),23));
    grp_fu_1171_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);

    grp_fu_1178_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1178_ce <= ap_const_logic_1;
        else 
            grp_fu_1178_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1178_p0 <= grp_fu_1178_p00(11 - 1 downto 0);
    grp_fu_1178_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_6_fu_812_p2),23));
    grp_fu_1178_p1 <= ap_const_lv23_AAB(12 - 1 downto 0);
    grp_fu_203_p_ce <= grp_fu_571_ce;
    grp_fu_203_p_din0 <= grp_fu_571_p0;
    grp_fu_203_p_din1 <= grp_fu_571_p1;
    grp_fu_203_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);

    grp_fu_571_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_571_ce <= ap_const_logic_1;
        else 
            grp_fu_571_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_571_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_1561, mul15_3_reg_1591, mul15_6_reg_1621, mul15_9_reg_1651, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_571_p0 <= mul15_9_reg_1651;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_571_p0 <= mul15_6_reg_1621;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_571_p0 <= mul15_3_reg_1591;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_571_p0 <= mul_reg_1561;
        else 
            grp_fu_571_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_571_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage3, softmax_max_10_fu_124, ap_block_pp0_stage1, softmax_max_13_fu_136, softmax_max_16_fu_148, softmax_max_19_fu_160, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_571_p1 <= softmax_max_19_fu_160;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_571_p1 <= softmax_max_16_fu_148;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_571_p1 <= softmax_max_13_fu_136;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_571_p1 <= softmax_max_10_fu_124;
        else 
            grp_fu_571_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_575_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_575_ce <= ap_const_logic_1;
        else 
            grp_fu_575_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_575_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, mul15_1_reg_1566, mul15_4_reg_1596, mul15_7_reg_1626, ap_block_pp0_stage3, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_575_p0 <= mul15_7_reg_1626;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_575_p0 <= mul15_4_reg_1596;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_575_p0 <= mul15_1_reg_1566;
        else 
            grp_fu_575_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_575_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage1, softmax_max_11_fu_128, softmax_max_14_fu_140, softmax_max_17_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_575_p1 <= softmax_max_17_fu_152;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_575_p1 <= softmax_max_14_fu_140;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_575_p1 <= softmax_max_11_fu_128;
        else 
            grp_fu_575_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_579_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_579_ce <= ap_const_logic_1;
        else 
            grp_fu_579_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_579_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, mul15_2_reg_1571, mul15_5_reg_1601, mul15_8_reg_1631, ap_block_pp0_stage3, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_579_p0 <= mul15_8_reg_1631;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_579_p0 <= mul15_5_reg_1601;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_579_p0 <= mul15_2_reg_1571;
        else 
            grp_fu_579_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_579_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage1, softmax_max_12_fu_132, softmax_max_15_fu_144, softmax_max_18_fu_156)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_579_p1 <= softmax_max_18_fu_156;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_579_p1 <= softmax_max_15_fu_144;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_579_p1 <= softmax_max_12_fu_132;
        else 
            grp_fu_579_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_583_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_583_ce <= ap_const_logic_1;
        else 
            grp_fu_583_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_583_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_17_fu_999_p1, tmp_17_reg_1534, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_583_p0 <= tmp_17_reg_1534;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_583_p0 <= tmp_17_fu_999_p1;
        else 
            grp_fu_583_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_583_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_reg_1444, tmp_8_reg_1459, tmp_1_reg_1541, tmp_4_reg_1556, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_583_p1 <= tmp_4_reg_1556;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_583_p1 <= tmp_1_reg_1541;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_583_p1 <= tmp_8_reg_1459;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_583_p1 <= tmp_reg_1444;
        else 
            grp_fu_583_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_587_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_587_ce <= ap_const_logic_1;
        else 
            grp_fu_587_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_587_p0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_17_fu_999_p1, tmp_17_reg_1534, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_587_p0 <= tmp_17_reg_1534;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_587_p0 <= tmp_17_fu_999_p1;
        else 
            grp_fu_587_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_587_p1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_6_reg_1449, tmp_9_reg_1464, tmp_2_reg_1546, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_587_p1 <= tmp_2_reg_1546;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_587_p1 <= tmp_9_reg_1464;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_587_p1 <= tmp_6_reg_1449;
            else 
                grp_fu_587_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_587_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_591_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_591_ce <= ap_const_logic_1;
        else 
            grp_fu_591_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_591_p0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_17_fu_999_p1, tmp_17_reg_1534, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_591_p0 <= tmp_17_reg_1534;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_591_p0 <= tmp_17_fu_999_p1;
        else 
            grp_fu_591_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_591_p1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_7_reg_1454, tmp_s_reg_1469, tmp_3_reg_1551, ap_block_pp0_stage3, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_591_p1 <= tmp_3_reg_1551;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_591_p1 <= tmp_s_reg_1469;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_591_p1 <= tmp_7_reg_1454;
            else 
                grp_fu_591_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_591_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_753_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_753_ce <= ap_const_logic_1;
        else 
            grp_fu_753_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_753_p0 <= std_logic_vector(unsigned(p_shl_cast_fu_733_p1) + unsigned(p_shl13_cast_fu_743_p1));
    grp_fu_753_p1 <= ap_const_lv11_3(3 - 1 downto 0);
    icmp_ln468_fu_709_p2 <= "1" when (ap_sig_allocacmp_i_11 = ap_const_lv8_80) else "0";
    or_ln476_fu_767_p2 <= (empty_126_reg_1276_pp0_iter2_reg or ap_const_lv11_1);
    p_shl13_cast_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_125_fu_737_p2),11));
    p_shl_cast_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_725_p3),11));
    p_shl_fu_725_p3 <= (empty_124_fu_721_p1 & ap_const_lv3_0);
    tmp_10_fu_821_p1 <= grp_fu_1135_p2;
    tmp_10_fu_821_p4 <= tmp_10_fu_821_p1(22 downto 13);
    tmp_11_fu_846_p1 <= grp_fu_1143_p2;
    tmp_11_fu_846_p4 <= tmp_11_fu_846_p1(22 downto 13);
    tmp_12_fu_862_p1 <= grp_fu_1150_p2;
    tmp_12_fu_862_p4 <= tmp_12_fu_862_p1(22 downto 13);
    tmp_13_fu_891_p1 <= grp_fu_1157_p2;
    tmp_13_fu_891_p4 <= tmp_13_fu_891_p1(22 downto 13);
    tmp_14_fu_907_p1 <= grp_fu_1164_p2;
    tmp_14_fu_907_p4 <= tmp_14_fu_907_p1(22 downto 13);
    tmp_15_fu_923_p1 <= grp_fu_1171_p2;
    tmp_16_fu_932_p1 <= grp_fu_1178_p2;
    tmp_17_fu_999_p1 <= dense_feature_map_stream128_read_reg_1439;
    trunc_ln_fu_837_p1 <= grp_fu_1135_p2;
    trunc_ln_fu_837_p4 <= trunc_ln_fu_837_p1(21 downto 13);

    weights_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, zext_ln476_fu_830_p1, ap_block_pp0_stage3, zext_ln476_1_fu_855_p1, zext_ln476_2_fu_871_p1, zext_ln476_7_fu_975_p1, zext_ln476_8_fu_981_p1, zext_ln476_9_fu_992_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_0_address0 <= zext_ln476_9_fu_992_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_0_address0 <= zext_ln476_8_fu_981_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_0_address0 <= zext_ln476_7_fu_975_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address0 <= zext_ln476_2_fu_871_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address0 <= zext_ln476_1_fu_855_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address0 <= zext_ln476_fu_830_p1(9 - 1 downto 0);
        else 
            weights_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, ap_block_pp0_stage3, zext_ln476_3_fu_884_p1, zext_ln476_4_fu_900_p1, zext_ln476_5_fu_916_p1, zext_ln476_6_fu_968_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_0_address1 <= zext_ln476_6_fu_968_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address1 <= zext_ln476_5_fu_916_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address1 <= zext_ln476_4_fu_900_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_0_address1 <= zext_ln476_3_fu_884_p1(9 - 1 downto 0);
        else 
            weights_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_0_ce0 <= ap_const_logic_1;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_0_ce1 <= ap_const_logic_1;
        else 
            weights_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, zext_ln476_fu_830_p1, ap_block_pp0_stage3, zext_ln476_1_fu_855_p1, zext_ln476_2_fu_871_p1, zext_ln476_7_fu_975_p1, zext_ln476_8_fu_981_p1, zext_ln476_9_fu_992_p1)
    begin
        if ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_1_address0 <= zext_ln476_9_fu_992_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_1_address0 <= zext_ln476_8_fu_981_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_1_address0 <= zext_ln476_7_fu_975_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address0 <= zext_ln476_2_fu_871_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address0 <= zext_ln476_1_fu_855_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address0 <= zext_ln476_fu_830_p1(9 - 1 downto 0);
        else 
            weights_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, ap_block_pp0_stage3, zext_ln476_3_fu_884_p1, zext_ln476_4_fu_900_p1, zext_ln476_5_fu_916_p1, zext_ln476_6_fu_968_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_1_address1 <= zext_ln476_6_fu_968_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address1 <= zext_ln476_5_fu_916_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address1 <= zext_ln476_4_fu_900_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_1_address1 <= zext_ln476_3_fu_884_p1(9 - 1 downto 0);
        else 
            weights_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_1_ce0 <= ap_const_logic_1;
        else 
            weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_1_ce1 <= ap_const_logic_1;
        else 
            weights_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, zext_ln476_fu_830_p1, ap_block_pp0_stage3, zext_ln476_1_fu_855_p1, zext_ln476_2_fu_871_p1, zext_ln476_7_fu_975_p1, zext_ln476_8_fu_981_p1, zext_ln476_9_fu_992_p1)
    begin
        if ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_2_address0 <= zext_ln476_9_fu_992_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_2_address0 <= zext_ln476_8_fu_981_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_2_address0 <= zext_ln476_7_fu_975_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address0 <= zext_ln476_2_fu_871_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address0 <= zext_ln476_1_fu_855_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address0 <= zext_ln476_fu_830_p1(9 - 1 downto 0);
        else 
            weights_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, urem_ln476_reg_1323, ap_block_pp0_stage3, zext_ln476_3_fu_884_p1, zext_ln476_4_fu_900_p1, zext_ln476_5_fu_916_p1, zext_ln476_6_fu_968_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_2_address1 <= zext_ln476_6_fu_968_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address1 <= zext_ln476_5_fu_916_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address1 <= zext_ln476_4_fu_900_p1(9 - 1 downto 0);
        elsif ((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weights_2_address1 <= zext_ln476_3_fu_884_p1(9 - 1 downto 0);
        else 
            weights_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    weights_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_2_ce0 <= ap_const_logic_1;
        else 
            weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, urem_ln476_reg_1323)
    begin
        if (((not((urem_ln476_reg_1323 = ap_const_lv11_1)) and not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not((urem_ln476_reg_1323 = ap_const_lv11_0)) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (urem_ln476_reg_1323 = ap_const_lv11_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weights_2_ce1 <= ap_const_logic_1;
        else 
            weights_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln476_1_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_846_p4),64));
    zext_ln476_2_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_862_p4),64));
    zext_ln476_3_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_1_fu_878_p2),64));
    zext_ln476_4_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_891_p4),64));
    zext_ln476_5_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_907_p4),64));
    zext_ln476_6_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_4_fu_963_p2),64));
    zext_ln476_7_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_reg_1429),64));
    zext_ln476_8_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_1434),64));
    zext_ln476_9_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln476_7_fu_987_p2),64));
    zext_ln476_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_821_p4),64));
end behav;
