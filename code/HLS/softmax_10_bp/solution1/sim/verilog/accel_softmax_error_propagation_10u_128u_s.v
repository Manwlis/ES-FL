// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accel_softmax_error_propagation_10u_128u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        softmax_output_error_stream15_dout,
        softmax_output_error_stream15_num_data_valid,
        softmax_output_error_stream15_fifo_cap,
        softmax_output_error_stream15_empty_n,
        softmax_output_error_stream15_read,
        weights_address0,
        weights_ce0,
        weights_q0,
        softmax_input_error_stream16_din,
        softmax_input_error_stream16_num_data_valid,
        softmax_input_error_stream16_fifo_cap,
        softmax_input_error_stream16_full_n,
        softmax_input_error_stream16_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] softmax_output_error_stream15_dout;
input  [3:0] softmax_output_error_stream15_num_data_valid;
input  [3:0] softmax_output_error_stream15_fifo_cap;
input   softmax_output_error_stream15_empty_n;
output   softmax_output_error_stream15_read;
output  [6:0] weights_address0;
output   weights_ce0;
input  [319:0] weights_q0;
output  [31:0] softmax_input_error_stream16_din;
input  [1:0] softmax_input_error_stream16_num_data_valid;
input  [1:0] softmax_input_error_stream16_fifo_cap;
input   softmax_input_error_stream16_full_n;
output   softmax_input_error_stream16_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg softmax_output_error_stream15_read;
reg softmax_input_error_stream16_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [31:0] output_error_q1;
reg   [31:0] output_error_load_reg_175;
wire    ap_CS_fsm_state4;
wire   [31:0] output_error_q0;
reg   [31:0] output_error_load_1_reg_180;
reg   [31:0] output_error_load_2_reg_195;
wire    ap_CS_fsm_state5;
reg   [31:0] output_error_load_3_reg_200;
reg   [31:0] output_error_load_4_reg_215;
wire    ap_CS_fsm_state6;
reg   [31:0] output_error_load_5_reg_220;
reg   [31:0] output_error_load_6_reg_235;
wire    ap_CS_fsm_state7;
reg   [31:0] output_error_load_7_reg_240;
reg   [31:0] output_error_load_8_reg_255;
wire    ap_CS_fsm_state8;
reg   [31:0] output_error_load_9_reg_260;
reg   [3:0] output_error_address0;
reg    output_error_ce0;
reg    output_error_we0;
reg   [3:0] output_error_address1;
reg    output_error_ce1;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_done;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_idle;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_ready;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_softmax_output_error_stream15_read;
wire   [3:0] grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_address0;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_ce0;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_we0;
wire   [31:0] grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_d0;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_idle;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_ready;
wire   [31:0] grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_din;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_write;
wire   [6:0] grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_address0;
wire    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_ce0;
reg    grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg;
reg    ap_block_state1_ignore_call5;
wire    ap_CS_fsm_state2;
reg    grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg;
wire    ap_CS_fsm_state9;
reg   [8:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg = 1'b0;
#0 grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg = 1'b0;
end

accel_softmax_error_propagation_10u_128u_s_output_error_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
output_error_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_error_address0),
    .ce0(output_error_ce0),
    .we0(output_error_we0),
    .d0(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_d0),
    .q0(output_error_q0),
    .address1(output_error_address1),
    .ce1(output_error_ce1),
    .q1(output_error_q1)
);

accel_softmax_error_propagation_10u_128u_Pipeline_store_output_error grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start),
    .ap_done(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_done),
    .ap_idle(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_idle),
    .ap_ready(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_ready),
    .softmax_output_error_stream15_dout(softmax_output_error_stream15_dout),
    .softmax_output_error_stream15_num_data_valid(4'd0),
    .softmax_output_error_stream15_fifo_cap(4'd0),
    .softmax_output_error_stream15_empty_n(softmax_output_error_stream15_empty_n),
    .softmax_output_error_stream15_read(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_softmax_output_error_stream15_read),
    .output_error_address0(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_address0),
    .output_error_ce0(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_ce0),
    .output_error_we0(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_we0),
    .output_error_d0(grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_d0)
);

accel_softmax_error_propagation_10u_128u_Pipeline_input grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start),
    .ap_done(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done),
    .ap_idle(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_idle),
    .ap_ready(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_ready),
    .softmax_input_error_stream16_din(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_din),
    .softmax_input_error_stream16_num_data_valid(2'd0),
    .softmax_input_error_stream16_fifo_cap(2'd0),
    .softmax_input_error_stream16_full_n(softmax_input_error_stream16_full_n),
    .softmax_input_error_stream16_write(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_write),
    .weights_address0(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_address0),
    .weights_ce0(grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_ce0),
    .weights_q0(weights_q0),
    .output_error_load(output_error_load_reg_175),
    .output_error_load_1(output_error_load_1_reg_180),
    .output_error_load_2(output_error_load_2_reg_195),
    .output_error_load_3(output_error_load_3_reg_200),
    .output_error_load_4(output_error_load_4_reg_215),
    .output_error_load_5(output_error_load_5_reg_220),
    .output_error_load_6(output_error_load_6_reg_235),
    .output_error_load_7(output_error_load_7_reg_240),
    .output_error_load_8(output_error_load_8_reg_255),
    .output_error_load_9(output_error_load_9_reg_260)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state9) & (grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_ready == 1'b1)) begin
            grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_ready == 1'b1)) begin
            grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        output_error_load_1_reg_180 <= output_error_q0;
        output_error_load_reg_175 <= output_error_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        output_error_load_2_reg_195 <= output_error_q1;
        output_error_load_3_reg_200 <= output_error_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_error_load_4_reg_215 <= output_error_q1;
        output_error_load_5_reg_220 <= output_error_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_error_load_6_reg_235 <= output_error_q1;
        output_error_load_7_reg_240 <= output_error_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        output_error_load_8_reg_255 <= output_error_q1;
        output_error_load_9_reg_260 <= output_error_q0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_error_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_error_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_error_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_error_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_error_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_error_address0 = grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_address0;
    end else begin
        output_error_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_error_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_error_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_error_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_error_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_error_address1 = 64'd0;
    end else begin
        output_error_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_error_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_error_ce0 = grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_ce0;
    end else begin
        output_error_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_error_ce1 = 1'b1;
    end else begin
        output_error_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        output_error_we0 = grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_output_error_we0;
    end else begin
        output_error_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        softmax_input_error_stream16_write = grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_write;
    end else begin
        softmax_input_error_stream16_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        softmax_output_error_stream15_read = grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_softmax_output_error_stream15_read;
    end else begin
        softmax_output_error_stream15_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call5 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start = grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_ap_start_reg;

assign grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start = grp_softmax_error_propagation_10u_128u_Pipeline_store_output_error_fu_137_ap_start_reg;

assign softmax_input_error_stream16_din = grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_softmax_input_error_stream16_din;

assign weights_address0 = grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_address0;

assign weights_ce0 = grp_softmax_error_propagation_10u_128u_Pipeline_input_fu_145_weights_ce0;

endmodule //accel_softmax_error_propagation_10u_128u_s
